import header.scroll

title Tcl

title Tcl - Programming language
 hidden

html
 <a class="prevLang" href="modula-2.html">&lt;</a>
 <a class="nextLang" href="vba.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/tcl.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.tcl.tk"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/Tcl"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://devdocs.io/tcl_tk/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Tcl, aka Tool Command Language, is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1988 by John Ousterhout.
 link ../lists/languages.html?filter=1988 1988
 link ../lists/creators.html#johnOusterhout John Ousterhout

kpiTable
 #53 <span title="TotalRank: 198 Jobs: 103 Users: 278 Facts: 62 Links: 33">on PLDB</span>
 35 Years Old
 3.1k <span title="Crude user estimate from a linear model.">Users</span>
 26 <span title="Books about or leveraging Tcl">Books</span>
 2 <span title="Academic publications about or leveraging Tcl">Papers</span>
 14k <span title="Tcl repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/tcl">Riju</a> Â· <a href="https://tio.run/#tcl">TIO</a>

monacoEditor tcl
 puts {Hello, world!}
 

* Tcl (pronounced "tickle" or tee cee ell, ) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Tcl Read more on Wikipedia...

- Tcl website
 http://www.tcl.tk
- Tcl Wikipedia page
 https://en.wikipedia.org/wiki/Tcl
- PLDB has 2 documentation sites for Tcl: <a href="https://www.tcl.tk/doc/">www.tcl.tk</a>, <a href="https://devdocs.io/tcl_tk/">devdocs.io</a>
- There are at least 13,969 Tcl repos on <a href="https://github.com/search?q=language:Tcl">GitHub</a>
- file extensions for Tcl include tcl, tbc, adp, tclin, tm and rvt
- The  Google BigQuery Public Dataset GitHub snapshot shows 7k users using Tcl in 8k repos on <a href="https://api.github.com/search/repositories?q=language:Tcl">GitHub</a>
- There are 71 <a href="https://projecteuler.net/language=Tcl">Project Euler</a> users using Tcl
- Explore Tcl snippets on <a href="http://www.rosettacode.org/wiki/Category:Tcl">Rosetta Code</a>
- Tcl appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Tcl Ubuntu package
 https://packages.ubuntu.com/jammy/tcl
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/tcl">package</a> for syntax highlighting Tcl
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/tcl">package</a> for syntax highlighting Tcl
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/tcl.py">syntax highlighting</a> for Tcl
- GitHub supports <a href="https://github.com/textmate/tcl.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Tcl
- Tcl appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/rpep/tcl_kernel">Kernel</a> for Tcl
- Release Notes for Tcl
 http://www.tcl.tk/software/tcltk/relnotes/index.tml?sc_format=wider
- Official Blog page for Tcl
 https://www.tcl.tk/software/tcltk/whatsnew.tml
- See also: (22 related languages)<a href="awk.html">awk</a>, <a href="lisp.html">Lisp</a>, <a href="php.html">PHP</a>, <a href="tea.html">Tea</a>, <a href="powershell.html">PowerShell</a>, <a href="c.html">C</a>, <a href="python.html">Python</a>, <a href="expect.html">Expect</a>, <a href="unicode.html">Unicode</a>, <a href="regex.html">Regular Expressions</a>, <a href="java.html">Java</a>, <a href="unix.html">Unix</a>, <a href="linux.html">Linux</a>, <a href="bourne-shell.html">Bourne shell</a>, <a href="xotcl.html">XOTcl</a>, <a href="snit.html">Snit</a>, <a href="verilog.html">Verilog</a>, <a href="vhdl.html">VHDL</a>, <a href="udp.html">UDP</a>, <a href="mysql.html">MySQL</a>, <a href="postgresql.html">PostgreSQL</a>, <a href="sqlite.html">SQLite</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/tcl">Improve our Tcl file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/tcl'>Riju</a>:
 puts {Hello, world!}
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/Tcl.tcl'>hello-world</a>:
 puts &quot;Hello World&quot;

codeWithHeader Example from <a href='http://helloworldcollection.de/#Tool'>the Hello World Collection</a>:
 #!/usr/local/bin/tclsh
 # Hello World in Tcl
 
 puts &quot;Hello World!&quot;
 

codeWithHeader Example from <a href='https://github.com/textmate/tcl.tmbundle'>Linguist</a>:
 # XDG Base Directory Specification handling
 #
 # Copyright (C) 2013 Lawrence Woodman
 #
 # Licensed under an MIT licence.  Please see LICENCE.md for details.
 #
 # For XDG Base Directory Specification
 #   http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
 #
 package require Tcl 8.5
 
 namespace eval XDG {
   variable DEFAULTS &quot;&quot;
   namespace export DATA_HOME CONFIG_HOME CACHE_HOME
   namespace export RUNTIME_DIR DATA_DIRS CONFIG_DIRS
 }
 
 proc XDG::SetDefaults {} {
   variable DEFAULTS
   if {$DEFAULTS ne &quot;&quot;} return
   set DEFAULTS [list \
     DATA_HOME   [file join $::env(HOME) .local share] \
     CONFIG_HOME [file join $::env(HOME) .config] \
     CACHE_HOME  [file join $::env(HOME) .cache] \
     DATA_DIRS   [list [file join /usr local share] [file join /usr share]] \
     CONFIG_DIRS [list [file join /etc xdg ]]
   ]
 }
 
 proc XDG::XDGVarSet {var} {
   expr {[info exists ::env(XDG_$var)] &amp;&amp; $::env(XDG_$var) ne &quot;&quot;}
 }
 
 proc XDG::Dir {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set dir [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set dir $::env(XDG_$var)
   }
 
   return [file join $dir $subdir]
 }
 
 proc XDG::Dirs {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set rawDirs [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set rawDirs [split $::env(XDG_$var) &quot;:&quot;]
   }
 
   set outDirs {}
   foreach dir $rawDirs {
     lappend outDirs [file join $dir $subdir]
   }
   return $outDirs
 }
 
 # The remaining procs reference the environmental variables XDG_
 # followed by the proc name.
 proc XDG::DATA_HOME {{subdir &quot;&quot;}} {Dir DATA_HOME $subdir}
 proc XDG::CONFIG_HOME {{subdir &quot;&quot;}} {Dir CONFIG_HOME $subdir}
 proc XDG::CACHE_HOME {{subdir &quot;&quot;}} {Dir CACHE_HOME $subdir}
 
 proc XDG::RUNTIME_DIR {{subdir &quot;&quot;}} {
   if {![XDGVarSet RUNTIME_DIR]} { return {} }
   return [file join $::env(XDG_RUNTIME_DIR) $subdir]
 }
 
 # The following procs returning the directories as a list with the most
 # important first.
 proc XDG::DATA_DIRS {{subdir &quot;&quot;}} {Dirs DATA_DIRS $subdir}
 proc XDG::CONFIG_DIRS {{subdir &quot;&quot;}} {Dirs CONFIG_DIRS $subdir}
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Tcl'>Wikipedia</a>:
 oo::class create fruit {
     method eat {} {
         puts &quot;yummy!&quot;
     }
 }
 oo::class create banana {
     superclass fruit
     constructor {} {
         my variable peeled
         set peeled 0
     }
     method peel {} {
         my variable peeled
         set peeled 1
         puts &quot;skin now off&quot;
     }
     method edible? {} {
         my variable peeled
         return $peeled
     }
     method eat {} {
         if {![my edible?]} {
             my peel
         }
         next
     }
 }
 set b [banana new]
 $b eat               â prints &quot;skin now off&quot; and &quot;yummy!&quot;
 fruit destroy
 $b eat               â error &quot;unknown command&quot;

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">â</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">â</span>
  Token puts
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">â</span>
  Token #
  Example
   # A comment
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Tcl on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Practical Programming in TCL & TK|https://www.goodreads.com/search?q=Practical Programming in TCL & TK Brent B. Welch|Brent B. Welch|1961|2|55|3.87
 Effective Tcl/TK Programming: Writing Better Programs with TCL and TK|https://www.goodreads.com/search?q=Effective Tcl/TK Programming: Writing Better Programs with TCL and TK Mark Harrison|Mark Harrison|1997|0|4|3.50
 Tcl/TK Pocket Reference: Programming Tools|https://www.goodreads.com/search?q=Tcl/TK Pocket Reference: Programming Tools Paul Raines|Paul Raines|1998|0|9|3.22
 TCL/TK Programmer's Reference|https://www.goodreads.com/search?q=TCL/TK Programmer's Reference Chris Nelson|Chris Nelson|1999|1|1|5.00
 Tcl/Tk 8.5 Programming Cookbook|https://www.goodreads.com/search?q=Tcl/Tk 8.5 Programming Cookbook Bert Wheeler|Bert Wheeler|2011|0|1|3.00
 Tcl/TK Programming for the Absolute Beginner|https://www.goodreads.com/search?q=Tcl/TK Programming for the Absolute Beginner Kurt Wall|Kurt Wall|2007|1|1|4.00
 TCL 8.5 Network Programming|https://www.goodreads.com/search?q=TCL 8.5 Network Programming Wojciech Kocjan|Wojciech Kocjan|2010|1|3|3.67
 Tcl/TK: A Developer's Guide|https://www.goodreads.com/search?q=Tcl/TK: A Developer's Guide Clif Flynt|Clif Flynt|2003|0|0|0.0
 TCL/TK for Dummies?|https://www.goodreads.com/search?q=TCL/TK for Dummies? Tim Webster|Tim Webster|1997|0|2|3.50
 CGI Programming with TCL [With CDROM]|https://www.goodreads.com/search?q=CGI Programming with TCL [With CDROM] David Maggiano|David Maggiano|1999|0|0|0.0

## Books about Tcl from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Effective Tcl/TK Programming: Writing Better Programs with TCL and TK|https://isbndb.com/book/9780201634747|Harrison, Mark and McLennan, Michael|1997|Addison-Wesley Professional
 Tcl and the Tk Toolkit|https://isbndb.com/book/9780321336330|Ousterhout, John and Jones, Ken|2009|Addison-Wesley Professional
 Tcl 8.5 Network Programming (Community Experience Distilled)|https://isbndb.com/book/9781849510967|Kocjan, Wojciech and Beltowski, Piotr|2010|Packt Publishing
 Cgi Developer's Resource: Web Programming in Tcl and Perl (Resource Series)|https://isbndb.com/book/9780137277513|Ivler, J. M. and Husain, Kamran|1997|Prentice Hall Ptr
 Web TCL Complete|https://isbndb.com/book/9780079137135|Stephen Ball|1999|McGraw-Hill Inc.,US
 Practical Programming in Tcl and Tk|https://isbndb.com/book/9780130385604|Welch, Brent and Jones, Ken|2003|Pearson
 The Tcl Programming Language: A Comprehensive Guide|https://isbndb.com/book/9781548679644|Nadkarni, Ashok P.|2017|CreateSpace Independent Publishing Platform
 Practical Programming in Tcl & Tk|https://isbndb.com/book/9780136168300|Welch, Brent B.|1997|Prentice Hall
 TCL / TK in a Nutshell: A Desktop Quick Reference|https://isbndb.com/book/9781565924338|Raines, Paul and Tranter, Jeff|1999|O'Reilly Media
 Tcl and Tk Programming for the Absolute Beginner|https://isbndb.com/book/9781598634389|Wall, Kurt|2007|Cengage Learning PTR
 Tcl and the Tk Toolkit|https://isbndb.com/book/9780201633375|Ousterhout, John K.|1994|Addison-Wesley Professional
 Practical Programming in Tcl and Tk (3rd Edition)|https://isbndb.com/book/9780130220288|Welch, Brent B.|1999|Prentice Hall
 Practical Programming in Tcl and Tk/Book and Disk|https://isbndb.com/book/9780131820074|Welch, Brent B.|1995-04T|Prentice Hall
 Cgi Programming With Tcl|https://isbndb.com/book/9780201606294|David Maggiano|1999|Addison-wesley
 Tcl 8.5 Network Programming|https://isbndb.com/book/9781849510974|Wojciech Kocjan; Piotr Beltowski|20100701|Packt Publishing
 Tcl And The Tk Toolkit|https://isbndb.com/book/9780201633375|Ousterhout, John K.|1994|Addison-wesley

## Publications about Tcl from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 VIPERS: a data flow visual programming environment based on the Tcl language|https://www.semanticscholar.org/paper/9aa8df179b2f6b3c252657a8813850e22d2fe7e9|Massimo Bernini and M. Mosconi|1994|21|3
 Petascale Tcl with NAMD, VMD, and Swift/T|https://www.semanticscholar.org/paper/dbc9036c86dbe20795e6eccc8393d02dd7251692|James C. Phillips and J. Stone and Kirby L. Vandivort and Timothy G. Armstrong and J. Wozniak and M. Wilde and K. Schulten|2014|18|0

keyboardNav modula-2.html vba.html

import ../footer.scroll
