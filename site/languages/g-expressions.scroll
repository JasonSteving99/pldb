import header.scroll

title g-expressions

title g-expressions - Programming language
 hidden

html
 <a class="prevLang" href="das.html">&lt;</a>
 <a class="nextLang" href="metaweb-query-language.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/g-expressions.pldb

startColumns 4

html <div class="quickLinks"></div>

* g-expressions is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2012.
 link ../lists/languages.html?filter=2012 2012

kpiTable
 #2444 <span title="TotalRank: 2999 Jobs: 103 Users: 2797 Facts: 1924 Links: 972">on PLDB</span>
 11 Years Old
 0 <span title="Books about or leveraging g-expressions">Books</span>
 0 <span title="Academic publications about or leveraging g-expressions">Papers</span>

* The GNU Guix project invented G-Expressions to make it easier to "stage" data or code, in the form of S-Expressions, for later manipulation or evaluation. They are similar to S-Expressions, hence the name, but they provide useful code staging features beyond what can be easily accomplished with just "quasiquote" and "unquote". A high-level object (such as a Guix package) can be included in a G-Expression; the transitive dependencies of that high-level object will then be automatically carried along with the G-Expression. When the G-Expression is converted to an S-Expression and stored on disk for later manipulation or evaluation, the high-level object will be automatically "lowered" to an appropriate representation (such as the package's output path) via a "compiler". Compared to direct manipulation of S-Expressions, G-Expressions can provide a simpler and more intuitive way to stage data or code.

- g-expressions first developed in <a href="../lists/originCommunities.html#httpsGuixGnuOrgEnContact">https://guix.gnu.org/en/contact/</a>
- Read more about g-expressions on the web: 1.
 https://fosdem.org/2020/schedule/event/gexpressionsguile/ 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/g-expressions">Improve our g-expressions file</a>

html <br>

codeWithHeader Example from the web:
 (define build-exp
   #~(begin
       (mkdir #$output)
       (chdir #$output)
       (symlink (string-append #$coreutils &quot;/bin/ls&quot;)
                &quot;list-files&quot;)))

endColumns

keyboardNav das.html metaweb-query-language.html

import ../footer.scroll
