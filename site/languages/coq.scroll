import header.scroll

title Coq

title Coq - Programming language
 hidden

html
 <a class="prevLang" href="occam.html">&lt;</a>
 <a class="nextLang" href="autoit.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/coq.pldb

startColumns 4

html <div class="quickLinks"><a href="https://en.wikipedia.org/wiki/Coq"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/Coq"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="https://coq.inria.fr/documentation"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Coq is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1989.
 link ../lists/languages.html?filter=1989 1989

kpiTable
 #183 <span title="TotalRank: 502 Jobs: 103 Users: 249 Facts: 193 Links: 206">on PLDB</span>
 34 Years Old
 3.6k <span title="Crude user estimate from a linear model.">Users</span>
 3 <span title="Books about or leveraging Coq">Books</span>
 27 <span title="Academic publications about or leveraging Coq">Papers</span>
 5k <span title="Coq repos on GitHub.">Repos</span>

* In computer science, Coq is an interactive theorem prover. It allows the expression of mathematical assertions, mechanically checks proofs of these assertions, helps to find formal proofs, and extracts a certified program from the constructive proof of its formal specification. Coq works within the theory of the calculus of inductive constructions, a derivative of the calculus of constructions. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Coq Read more on Wikipedia...

- Coq Wikipedia page
 https://en.wikipedia.org/wiki/Coq
- Coq docs
 https://coq.inria.fr/documentation
- There are at least 5,206 Coq repos on <a href="https://github.com/search?q=language:Coq">GitHub</a>
- Coq first developed in <a href="../lists/originCommunities.html#theCoqDevelopmentTeam">The Coq development team</a>
- file extensions for Coq include coq and v
- The  Google BigQuery Public Dataset GitHub snapshot shows 793 users using Coq in 1k repos on <a href="https://api.github.com/search/repositories?q=language:Coq">GitHub</a>
- There are 2,066 members in the <a href="https://reddit.com/r/Coq">Coq subreddit</a>
- Explore Coq snippets on <a href="http://www.rosettacode.org/wiki/Category:Coq">Rosetta Code</a>
- Coq on HOPL
 https://hopl.info/showlanguage.prx?exp=6970
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/theorem.py">syntax highlighting</a> for Coq
- GitHub supports <a href="https://github.com/mkolosick/Sublime-Coq" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Coq
- See also: (5 related languages)<a href="ocaml.html">OCaml</a>, <a href="agda.html">Agda</a>, <a href="idris.html">Idris</a>, <a href="c.html">C</a>, <a href="isabelle.html">Isabelle</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/coq">Improve our Coq file</a>

html <br>

codeWithHeader Example from <a href='https://github.com/mkolosick/Sublime-Coq'>Linguist</a>:
 Require Import FunctionNinjas.All.
 Require Import ListString.All.
 Require Import Computation.
 
 Import C.Notations.
 
 Definition error (message : LString.t) : C.t :=
   do_call! Command.ShowError message in
   ret.
 
 Definition main : C.t :=
   call! card_is_valid := Command.AskCard in
   if card_is_valid then
     call! pin := Command.AskPIN in
     match pin with
     | None =&gt; error @@ LString.s &quot;No PIN given.&quot;
     | Some pin =&gt;
       call! pin_is_valid := Command.CheckPIN pin in
       if pin_is_valid then
         call! ask_amount := Command.AskAmount in
         match ask_amount with
         | None =&gt; error @@ LString.s &quot;No amount given.&quot;
         | Some amount =&gt;
           call! amount_is_valid := Command.CheckAmount amount in
           if amount_is_valid then
             call! card_is_given := Command.GiveCard in
             if card_is_given then
               call! amount_is_given := Command.GiveAmount amount in
               if amount_is_given then
                 ret
               else
                 error @@ LString.s &quot;Cannot give you the amount. Please contact your bank.&quot;
             else
               error @@ LString.s &quot;Cannot give you back the card. Please contact your bank.&quot;
           else
             error @@ LString.s &quot;Invalid amount.&quot;
         end
       else
         error @@ LString.s &quot;Invalid PIN.&quot;
     end
   else
     error @@ LString.s &quot;Invalid card.&quot;.
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example

## Books about Coq from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Certified Programming with Dependent Types: A Pragmatic Introduction to the Coq Proof Assistant (The MIT Press)|https://isbndb.com/book/9780262026659|Chlipala, Adam|2013-12-06T00:00:01Z|The MIT Press
 Certified Programming with Dependent Types: A Pragmatic Introduction to the Coq Proof Assistant|https://isbndb.com/book/9780262545747|Chlipala, Adam|2022|MIT Press
 Computer Arithmetic and Formal Proofs: Verifying Floating-point Algorithms with the Coq System (Computer Engineering)|https://isbndb.com/book/9780081011706|Boldo, Sylvie and Melquiond, Guillaume|2017|ISTE Press - Elsevier

## Publications about Coq from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Extending Coq with Imperative Features and Its Application to SAT Verification|https://www.semanticscholar.org/paper/62a54d650f4e872c333164a03a02809bb5033c8b|Michaël Armand and B. Grégoire and A. Spiwack and Laurent Théry|2010|76|6
 Strongly Typed Term Representations in Coq|https://www.semanticscholar.org/paper/addf7c769cc3b08ed853e76605c266ab51010fdb|Nick Benton and C. Hur and A. Kennedy and Conor McBride|2012|74|3
 Canonical Structures for the Working Coq User|https://www.semanticscholar.org/paper/1f151ce64779eb673b5b06a4211480968e211452|A. Mahboubi and E. Tassi|2013|55|0
 Œuf: minimizing the Coq extraction TCB|https://www.semanticscholar.org/paper/ef537a2cd3b2a2d28e8ec07195265a61a9ad4c26|Eric Mullen and Stuart Pernsteiner and James R. Wilcox and Zachary Tatlock and D. Grossman|2018|35|1
 Weak Call-by-Value Lambda Calculus as a Model of Computation in Coq|https://www.semanticscholar.org/paper/adba80bbf7c50743fda436ef1919baff64fb1bf7|Y. Forster and G. Smolka|2017|34|3
 Verification of PLC Properties Based on Formal Semantics in Coq|https://www.semanticscholar.org/paper/d30c9e9c8749b7e5e408804ae4ce9a446ea1c725|J. Blech and Sidi Ould Biha|2011|32|1
 Verifying Object-Oriented Programs with Higher-Order Separation Logic in Coq|https://www.semanticscholar.org/paper/b6d3405002dcd052327c7052e83753a407477a59|J. Bengtson and J. B. Jensen and Filip Sieczkowski and L. Birkedal|2011|31|3
 Aliasing Restrictions of C11 Formalized in Coq|https://www.semanticscholar.org/paper/7ecd6f0e29de44baa17072f68225349c90c39871|R. Krebbers|2013|27|1
 Mtac2: typed tactics for backward reasoning in Coq|https://www.semanticscholar.org/paper/d6b3a74639659f59cf6e36a653669fee84dd1aef|Jan-Oliver Kaiser and Beta Ziliani and R. Krebbers and Y. Régis-Gianas and Derek Dreyer|2018|24|1
 An Introduction to Programming and Proving with Dependent Types in Coq|https://www.semanticscholar.org/paper/6ca05b1d04e65c1c34eb0565ec44ce47605efed3|A. Chlipala|2010|21|0
 ConCert: a smart contract certification framework in Coq|https://www.semanticscholar.org/paper/4d656733e7205530d78a8887d429b41f9c789be0|D. Annenkov and Bas Spitters|2019|21|2
 Calculating Parallel Programs in Coq Using List Homomorphisms|https://www.semanticscholar.org/paper/adb8b0667728336d881a19f6c7defe51deb1c642|F. Loulergue and Wadoud Bousdira and J. Tesson|2017|16|1
 Verified programming of Turing machines in Coq|https://www.semanticscholar.org/paper/5ad36475e45e3f17be1d5cd5a77154cfba2a6994|Y. Forster and F. Kunze and Maximilian Wuttke|2020|16|0
 A Formalization of the C99 Standard in HOL, Isabelle and Coq|https://www.semanticscholar.org/paper/4f5516f1cc9d97769e44abc5ea6250e050174839|R. Krebbers and F. Wiedijk|2011|14|0
 Computational Verification of Network Programs in Coq|https://www.semanticscholar.org/paper/0549085a388b2772b3eedb8a62c3efd5654d4a1c|Gordon Stewart|2013|13|1
 A unification algorithm for Coq featuring universe polymorphism and overloading|https://www.semanticscholar.org/paper/61664cd31fa465ababe6c1ce8e0d10d2a15bb0b9|Beta Ziliani and Matthieu Sozeau|2015|12|0
 Bringing Coq into the World of GCM Distributed Applications|https://www.semanticscholar.org/paper/0e8ec78725517d4cbfc667b04a8f6f16bed1c9e9|Nuno Gaspar and L. Henrio and E. Madelaine|2014|11|1
 A Hybrid Formal Verification System in Coq for Ensuring the Reliability and Security of Ethereum-Based Service Smart Contracts|https://www.semanticscholar.org/paper/29f39232b4fdd69f22c9212d41bdc2e14690a22c|Zheng Yang and Hang Lei and Weizhong Qian|2019|11|0
 30 years of research and development around Coq|https://www.semanticscholar.org/paper/b46004f9d17e3720845c833fbb05c012c9134df3|G. Huet and Hugo Herbelin|2014|10|0
 Call-by-Value Lambda Calculus as a Model of Computation in Coq|https://www.semanticscholar.org/paper/95dba68b129ba0a617ca4f328420f8f9259af4b0|Y. Forster and G. Smolka|2018|7|0
 An operational foundation for the tactic language of Coq|https://www.semanticscholar.org/paper/b32892ebcba24dc35ca26bfce86f45fd216888ef|Wojciech Jedynak and Malgorzata Biernacka and Dariusz Biernacki|2013|7|0
 Translating Higher-Order Specifications to Coq Libraries Supporting Hybrid Proofs|https://www.semanticscholar.org/paper/037ea8aa6131e318d4c9732a8f6f3c251f3301c6|Nada Habli and A. Felty|2013|3|0
 Coq à la carte: a practical approach to modular syntax with binders|https://www.semanticscholar.org/paper/3a0e6a70d01db87f52ba81100d4ade869aac6a9a|Y. Forster and Kathrin Stark|2020|3|0
 Towards a Framework for Building Formally Verified Supercompilers in Coq|https://www.semanticscholar.org/paper/e56ffb2a1acae3e4d6a9bafd206d33068cfb562f|D. Krustev|2012|1|0
 Programming with Effects in Coq|https://www.semanticscholar.org/paper/c890394f4a24dafbaae3546839efb5bc3ba15106|J. G. Morrisett|2008|1|0
 Type- Theoretical Foundations of the Derivation System in Coq|https://www.semanticscholar.org/paper/c22ba6504f78cedede886be7bee43165da9f58fa|Vasyl Lenko and V. Pasichnyk and N. Kunanets and Y. Shcherbyna|2018|1|0
 Interactive typed tactic programming in the Coq proof assistant|https://www.semanticscholar.org/paper/4b34dede898a0e7108beb16f1e0aba20bd16d4f5|Beta Ziliani|2015|1|0

keyboardNav occam.html autoit.html

import ../footer.scroll
