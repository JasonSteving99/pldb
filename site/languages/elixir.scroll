import header.scroll

title Elixir

title Elixir - Programming language
 hidden

html
 <a class="prevLang" href="mathematica.html">&lt;</a>
 <a class="nextLang" href="visual-basic.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/elixir.pldb

startColumns 4

html <div class="quickLinks"><a href="https://elixir-lang.org"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/elixir-lang/elixir"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a> <a href="https://en.wikipedia.org/wiki/Elixir_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/elixir"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="https://twitter.com/elixirlang"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="https://devdocs.io/elixir~1.5/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Elixir is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2011 by José Valim.
 link ../lists/languages.html?filter=2011 2011
 link ../lists/creators.html#joseValim José Valim

kpiTable
 #46 <span title="TotalRank: 149 Jobs: 64 Users: 43 Facts: 42 Links: 132">on PLDB</span>
 12 Years Old
 55.9k <span title="Crude user estimate from a linear model.">Users</span>
 31 <span title="Books about or leveraging Elixir">Books</span>
 3 <span title="Academic publications about or leveraging Elixir">Papers</span>
 89k <span title="Elixir repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/elixir">Riju</a> · <a href="https://tio.run/#elixir">TIO</a>

monacoEditor elixir
 IO.puts("Hello, world!")
 

* Elixir is a functional, concurrent, general-purpose programming language that runs on the Erlang virtual machine (BEAM). Elixir builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications. Elixir also provides a productive tooling and an extensible design. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Elixir_(programming_language) Read more on Wikipedia...

- Elixir website
 https://elixir-lang.org
- Elixir downloads page
 https://elixir-lang.org/install.html
- Elixir Wikipedia page
 https://en.wikipedia.org/wiki/Elixir_(programming_language)
- Elixir is developed on <a href="https://github.com/elixir-lang/elixir">GitHub</a> and has 20,394 stars
- PLDB has 2 documentation sites for Elixir: <a href="https://elixir-lang.org/docs.html">elixir-lang.org</a>, <a href="https://devdocs.io/elixir~1.5/">devdocs.io</a>
- There are at least 89,242 Elixir repos on <a href="https://github.com/search?q=language:Elixir">GitHub</a>
- Elixir first developed in <a href="../lists/originCommunities.html#theElixirTeam">The Elixir Team</a>
- PLDB estimates there are currently 214 job openings for Elixir programmers.
- file extensions for Elixir include ex, exs and eex
- Elixir is written in <a href="elixir.html">Elixir</a>
- Elixir on Twitter
 https://twitter.com/elixirlang
- The  Google BigQuery Public Dataset GitHub snapshot shows 5k users using Elixir in 7k repos on <a href="https://api.github.com/search/repositories?q=language:Elixir">GitHub</a>
- Check out the 211 <a href="https://www.meetup.com/topics/elixir/">Elixir meetup groups</a> on Meetup.com.
- There are 23,468 members in the <a href="https://reddit.com/r/elixir">Elixir subreddit</a>
- There are 173 <a href="https://projecteuler.net/language=Elixir">Project Euler</a> users using Elixir
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Elixir programmers reported a median salary of $80,077. 2% of respondents reported using Elixir. 1,438 programmers reported using Elixir, and 3,374 said they wanted to use it
- Explore Elixir snippets on <a href="http://www.rosettacode.org/wiki/Category:Elixir">Rosetta Code</a>
- Elixir appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Elixir Ubuntu package
 https://packages.ubuntu.com/jammy/elixir
- Elixir <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/elixir-lsp/elixir-ls">implementation</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/elixir">package</a> for syntax highlighting Elixir
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/erlang.py">syntax highlighting</a> for Elixir
- GitHub supports <a href="https://github.com/elixir-editors/elixir-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Elixir
- Elixir appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/pprzetacznik/IElixir">Kernel</a> for Elixir
- There is a <a href="https://hex.pm/">central package repository</a> for Elixir
- Official Blog page for Elixir
 https://elixir-lang.org/blog/
- Indeed.com has 214 matches for <a href="https://www.indeed.com/jobs?q=elixir developer">"elixir developer"</a>.
- See also: (6 related languages)<a href="erlang.html">Erlang</a>, <a href="ruby.html">Ruby</a>, <a href="clojure.html">Clojure</a>, <a href="lfe.html">LFE</a>, <a href="unicode.html">Unicode</a>, <a href="utf-8.html">UTF-8</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/elixir">Improve our Elixir file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/elixir'>Riju</a>:
 IO.puts(&quot;Hello, world!&quot;)
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/e/Elixir.exs'>hello-world</a>:
 #!/usr/bin/env elixir
 IO.puts &quot;Hello World&quot;
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Elixir'>the Hello World Collection</a>:
 # Hello world in Elixir
 
 defmodule HelloWorld do
   IO.puts &quot;Hello, World!&quot;
 end

codeWithHeader Example from <a href='https://github.com/elixir-editors/elixir-tmbundle'>Linguist</a>:
 %{&quot;cowboy&quot;: {:hex, :cowboy, &quot;1.0.0&quot;},
   &quot;cowlib&quot;: {:hex, :cowlib, &quot;1.0.1&quot;},
   &quot;hackney&quot;: {:hex, :hackney, &quot;0.14.3&quot;},
   &quot;hound&quot;: {:hex, :hound, &quot;0.6.0&quot;},
   &quot;httpoison&quot;: {:hex, :httpoison, &quot;0.5.0&quot;},
   &quot;idna&quot;: {:hex, :idna, &quot;1.0.1&quot;},
   &quot;phoenix&quot;: {:hex, :phoenix, &quot;0.10.0&quot;},
   &quot;plug&quot;: {:hex, :plug, &quot;0.11.1&quot;},
   &quot;poison&quot;: {:hex, :poison, &quot;1.3.1&quot;},
   &quot;ranch&quot;: {:hex, :ranch, &quot;1.0.0&quot;}}
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Elixir_(programming_language)'>Wikipedia</a>:
 task = Task.async fn -&gt; perform_complex_action() end
 other_time_consuming_action()
 Task.await task

## <a href="../lists/keywords.html?filter=elixir">Keywords</a> in Elixir
* after and catch do else end false fn in nil not or rescue true when

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Unicode Identifiers
  FeatureLink ../features/hasUnicodeIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   δ = 0.00001
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Exceptions
  FeatureLink ../features/hasExceptions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   raise "oops, something went wrong"
 row
  Feature Pattern Matching
  FeatureLink ../features/hasPatternMatching.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   def fib(0), do: 1
   def fib(1), do: 1
   def fib(n) when n >= 2, do: fib(n-1) + fib(n-2)
 row
  Feature Runtime Guards
  FeatureLink ../features/hasRunTimeGuards.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   def abs(number) when number > 0, do: number
   def abs(number), do: -number
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Multiline Strings
  FeatureLink ../features/hasMultilineStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   template = """
   This is the first line.
   This is the second line.
   This is the third line.
   """
 row
  Feature Infix Notation
  FeatureLink ../features/hasInfixNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   seven = 3 + 4
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1.23e45
 row
  Feature Anonymous Functions
  FeatureLink ../features/hasAnonymousFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   fn -> IO.puts("hello world") end
 row
  Feature Pipes
  FeatureLink ../features/hasPipes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "Elixir" |> String.graphemes() |> Enum.frequencies()
 row
  Feature Streams
  FeatureLink ../features/hasStreams.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   https://hexdocs.pm/elixir/Stream.html
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # https://hexdocs.pm/elixir/Macro.html
   defmodule Example do
     defmacro macro_inspect(value) do
       IO.inspect(value)
       value
     end
     def fun_inspect(value) do
       IO.inspect(value)
       value
     end
   end
 row
  Feature Polymorphism
  FeatureLink ../features/hasPolymorphism.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   https://hexdocs.pm/elixir/Protocol.html
 row
  Feature Range Operator
  FeatureLink ../features/hasRangeOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1..3
 row
  Feature Single Dispatch
  FeatureLink ../features/hasSingleDispatch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Maps
  FeatureLink ../features/hasMaps.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   %{key: "value"}
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # 0b[01]+
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \d(_?\d)*
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \d(_?\d)*\.\d(_?\d)*([eE][-+]?\d(_?\d)*)?
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # 0x[\da-fA-F]+
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # 0o[0-7]+
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Lists
  FeatureLink ../features/hasLists.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   my_list = [1, 2, 3, 4, 5]
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ~r/integer: \d+/
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token IO.puts
  Example
 row
  Feature Message Passing
  FeatureLink ../features/hasMessagePassing.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   send(pid, :ping)
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Default Parameters Pattern
  FeatureLink ../features/hasDefaultParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   def multiply(a, b \\ 1) do
     a * b
   end
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if true do
     IO.puts("Hello world")
   end
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   name = "John"
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # Alias the module so it can be called as Bar instead of Foo.Bar
   alias Foo.Bar, as: Bar
   
   # Require the module in order to use its macros
   require Foo
   
   # Import functions from Foo so they can be called without the `Foo.` prefix
   import Foo
   
   # Invokes the custom code defined in Foo as an extension point
   use Foo
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # this is a comment
 row
  Feature Disk Output
  FeatureLink ../features/canWriteToDisk.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   File.write!("helloworld.txt", "Hello, world!\n")
 row
  Feature Shebang
  FeatureLink ../features/canDoShebang.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   #!/usr/bin/env elixir
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Dispatch
  FeatureLink ../features/hasMultipleDispatch.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Units of Measure
  FeatureLink ../features/hasUnitsOfMeasure.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Elixir from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Learning Elixir|https://isbndb.com/book/9781785881749|Ballou, Kenny|2016|Packt Publishing
 "Programming Elixir 1.2: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680501667|Thomas, Dave|2016|Pragmatic Bookshelf
 "Programming Elixir 1.3: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680502008|Thomas, Dave|2016|Pragmatic Bookshelf
 "Programming Elixir ≥ 1.6: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680502992|Thomas, Dave|2018|Pragmatic Bookshelf
 The Little Elixir & OTP Guidebook|https://isbndb.com/book/9781633430112|Tan Wei Hao, Benjamin|2016|Manning Publications
 Elixir Cookbook|https://isbndb.com/book/9781784397517|Pereira, Paulo A|2015|Packt Publishing
 Elixir in Action|https://isbndb.com/book/9781617292019|Juric, Saša|2015|Manning
 Programming Phoenix LiveView: Interactive Elixir Web Programming Without Writing Any JavaScript|https://isbndb.com/book/9781680508215|Tate, Bruce A. and DeBenedetto, Sophie|2022|Pragmatic Bookshelf
 Learning Elixir|https://isbndb.com/book/9781785883477|Ballou, Kenny|2016|Packt Publishing
 Erlang and Elixir for Imperative Programmers|https://isbndb.com/book/9781484223949|Loder, Wolfgang|2016|Apress
 Phoenix Web Development: Create rich web applications using functional programming techniques with Phoenix and Elixir|https://isbndb.com/book/9781787284777|Voloz, Mike and Richey, Brandon|2018|Packt Publishing
 Adopting Elixir|https://isbndb.com/book/9781680505849|Ben Marx; Jose Valim; Bruce Tate|20180314|Pragmatic Bookshelf
 Introducing Elixir|https://isbndb.com/book/9781491956854|Simon St. Laurent; J. David Eisenberg|20161222|O'Reilly Media, Inc.
 Introducing Elixir|https://isbndb.com/book/9781449369996|Laurent, Simon St.; Eisenberg, J. David|20151216|O'Reilly Media, Inc.
 Introducing Elixir|https://isbndb.com/book/9781449369972|Simon St. Laurent|20140910|O'Reilly Media, Inc.
 Mastering Elixir|https://isbndb.com/book/9781788472241|Andre Albuquerque; Daniel Caixinha|30-07-2018|Packt Publishing
 Programming Ecto: Build Database Apps in Elixir for Scalability and Performance|https://isbndb.com/book/9781680502824|Wilson, Darin and Meadows-Jonsson, Eric|20190416|Pragmatic Bookshelf
 Programmer Passport: Elixir|https://isbndb.com/book/9781680509625|Bruce Tate|20220622|Pragmatic Bookshelf
 Designing Elixir Systems With OTP|https://isbndb.com/book/9781680507379|James Edward Gray II; Bruce A. Tate|20191202|Pragmatic Bookshelf
 Concurrent Data Processing in Elixir|https://isbndb.com/book/9781680508963|Svilen Gospodinov|20210725|Pragmatic Bookshelf
 Craft GraphQL APIs in Elixir with Absinthe|https://isbndb.com/book/9781680505931|Bruce Williams; Ben  Wilson|20180327|Pragmatic Bookshelf
 Build a Weather Station with Elixir and Nerves|https://isbndb.com/book/9781680509472|Alexander Koutmos; Bruce Tate; Frank Hunleth|20220106|Pragmatic Bookshelf
 Build a Binary Clock with Elixir and Nerves|https://isbndb.com/book/9781680509236|Frank Hunleth; Bruce Tate|20220802|Pragmatic Bookshelf
 Property-Based Testing with PropEr, Erlang, and Elixir|https://isbndb.com/book/9781680506549|Fred Hebert|20190117|Pragmatic Bookshelf
 Designing Elixir Systems With OTP|https://isbndb.com/book/9781680507379|James Edward Gray II; Bruce A. Tate|20191202|Pragmatic Bookshelf
 Genetic Algorithms in Elixir|https://isbndb.com/book/9781680507942|Sean Moriarity|20210120|Pragmatic Bookshelf
 Exploring Graphs With Elixir|https://isbndb.com/book/9781680508406|Tony Hammond|20221025|Pragmatic Bookshelf
 Testing Elixir|https://isbndb.com/book/9781680507829|Andrea Leopardi; Jeffrey Matthias|20210330|Pragmatic Bookshelf
 Metaprogramming Elixir|https://isbndb.com/book/9781680500417|Chris McCord|20150129|Pragmatic Bookshelf
 Learn Functional Programming with Elixir|https://isbndb.com/book/9781680502459|Ulisses Almeida|20180201|Pragmatic Bookshelf
 Functional Web Development with Elixir, OTP, and Phoenix|https://isbndb.com/book/9781680502435|Lance Halvorsen|20180101|Pragmatic Bookshelf

## Publications about Elixir from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Elixir programming language evaluation for IoT|https://www.semanticscholar.org/paper/bb548cf88bde14637e67dce390ed5c4b1e339d11|Geovane Fedrecheski and L. Costa and M. Zuffo|2016|6|0
 A Gradual Type System for Elixir|https://www.semanticscholar.org/paper/2f7b1940b91bc5a13cc44e0dc6ff0fa26298de3d|Mauricio Cassola and Agustín Talagorria and Alberto Pardo and Marcos Viera|2020|2|0
 An Elixir library for programming concurrent and distributed embedded systems|https://www.semanticscholar.org/paper/8b499715223c14b95dcbac77fdf03c0bb285a833|Humberto Rodríguez-Avila and E. G. Boix and W. Meuter|2017|1|0

keyboardNav mathematica.html visual-basic.html

import ../footer.scroll
