import header.scroll

title Elm

title Elm - Programming language
 hidden

html
 <a class="prevLang" href="maple.html">&lt;</a>
 <a class="nextLang" href="ocaml.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/elm.pldb

startColumns 4

html <div class="quickLinks"><a href="http://elm-lang.org"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/elm-lang/elm-compiler"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a> <a href="https://en.wikipedia.org/wiki/Elm_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://twitter.com/elmlang"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="https://elm-lang.org/docs"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Elm is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2012 by Evan Czaplicki.
 link ../lists/languages.html?filter=2012 2012
 link ../lists/creators.html#evanCzaplicki Evan Czaplicki

kpiTable
 #67 <span title="TotalRank: 244 Jobs: 70 Users: 110 Facts: 64 Links: 120">on PLDB</span>
 11 Years Old
 11.4k <span title="Crude user estimate from a linear model.">Users</span>
 5 <span title="Books about or leveraging Elm">Books</span>
 2 <span title="Academic publications about or leveraging Elm">Papers</span>
 20k <span title="Elm repos on GitHub.">Repos</span>

* Try now: <a href="http://elm-lang.org/try">Web</a> Â· <a href="https://riju.codes/elm">Riju</a>

* Elm is a domain-specific programming language for declaratively creating web browser-based graphical user interfaces. Elm is purely functional, and is developed with emphasis on usability, performance, and robustness. It advertises "no runtime exceptions in practice," made possible by the Elm compiler's static type checking.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Elm_(programming_language) Read more on Wikipedia...

- Elm website
 http://elm-lang.org
- Elm Wikipedia page
 https://en.wikipedia.org/wiki/Elm_(programming_language)
- Elm is developed on <a href="https://github.com/elm-lang/elm-compiler">GitHub</a> and has 6,875 stars
- Elm docs
 https://elm-lang.org/docs
- There are at least 19,905 Elm repos on <a href="https://github.com/search?q=language:Elm">GitHub</a>
- Elm first developed in <a href="../lists/originCommunities.html#httpsGithubComElm">https://github.com/elm</a>
- PLDB estimates there are currently 127 job openings for Elm programmers.
- file extensions for Elm include elm
- Elm compiles to <a href="javascript.html">JavaScript</a>
- Elm is written in <a href="haskell.html">Haskell</a>
- Elm on Twitter
 https://twitter.com/elmlang
- The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using Elm in 3k repos on <a href="https://api.github.com/search/repositories?q=language:Elm">GitHub</a>
- There are 4 <a href="https://projecteuler.net/language=Elm">Project Euler</a> users using Elm
- Explore Elm snippets on <a href="http://www.rosettacode.org/wiki/Category:Elm">Rosetta Code</a>
- Elm appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Elm <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/elm-tooling/elm-language-server">implementation</a>
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/elm">package</a> for syntax highlighting Elm
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/elm.py">syntax highlighting</a> for Elm
- GitHub supports <a href="https://github.com/elm-community/Elm.tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Elm
- There is a <a href="https://package.elm-lang.org/">central package repository</a> for Elm
- Official Blog page for Elm
 https://elm-lang.org/news
- Frequently Asked Questions for Elm
 https://faq.elm-community.org/
- Indeed.com has 127 matches for <a href="https://www.indeed.com/jobs?q=elm engineer">"elm engineer"</a>.
- <a href="http://elm-lang.org">elm-lang.org</a> was registered in 2011
- See also: (7 related languages)<a href="haskell.html">Haskell</a>, <a href="standard-ml.html">Standard ML</a>, <a href="ocaml.html">OCaml</a>, <a href="f-sharp.html">F#</a>, <a href="vuejs.html">Vue</a>, <a href="javascript.html">JavaScript</a>, <a href="typescript.html">TypeScript</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/elm">Improve our Elm file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/elm'>Riju</a>:
 module Main exposing (..)
 
 output : String
 output = &quot;Hello, world!&quot;
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/e/Elm.elm'>hello-world</a>:
 import Html exposing (text)
 
 main =
   text &quot;Hello World&quot;
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Elm'>the Hello World Collection</a>:
 -- Hello world in Elm
 
 import Text
 
 main = Text.plainText &quot;Hello, world!&quot;

codeWithHeader Example from <a href='https://github.com/elm-community/Elm.tmLanguage'>Linguist</a>:
 
 main = asText (qsort [3,9,1,8,5,4,7])
 
 qsort lst =
   case lst of
     x:xs -&gt; qsort (filter ((&gt;=)x) xs) ++ [x] ++ qsort (filter ((&lt;)x) xs)
     [] -&gt; []
 
 
 {---------------------
 
 QuickSort works as follows:
  - Choose a pivot element which be placed in the &quot;middle&quot; of the sorted list.
    In our case we are choosing the first element as the pivot.
  - Gather all of the elements less than the pivot (the first filter).
    We know that these must come before our pivot element in the sorted list.
    Note: ((&gt;=)x) === (\y -&gt; (&gt;=) x y) === (\y -&gt; x &gt;= y)
  - Gather all of the elements greater than the pivot (the second filter).
    We know that these must come after our pivot element in the sorted list.
  - Run `qsort` on the lesser elements, producing a sorted list that contains
    only elements less than the pivot. Put these before the pivot.
  - Run `qsort` on the greater elements, producing a sorted list. Put these
    after the pivot.
 
 Note that choosing a bad pivot can have bad effects. Take a sorted list with
 N elements. The pivot will always be the lowest member, meaning that it does
 not divide the list very evenly. The list of lessers has 0 elements
 and the list of greaters has N-1 elements. This means qsort will be called
 N times, each call looking through the entire list. This means, in the worst
 case, QuickSort will make N^2 comparisons.
 
 ----------------------}
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Elm_(programming_language)'>Wikipedia</a>:
 -- This is a single line comment
 
 {- This is a multi-line comment.
    It can span multiple lines.
 -}
 
 {- It is possible to {- nest -} multi-line comments -}
 
 -- Here we define a value named &#39;&#39;greeting&#39;&#39;. The type is inferred as a String.
 greeting =
     &quot;Hello World!&quot;
 
  -- It is best to add type annotations to top-level declarations.
 hello : String
 hello =
     &quot;Hi there.&quot;
 
 -- Functions are declared the same way, with arguments following the function name.
 add x y =
     x + y
 
 -- Again, it is best to add type annotations.
 hypotenuse : Float -&gt; Float -&gt; Float
 hypotenuse a b =
     sqrt (a^2 + b^2)
 
 -- Functions are also curried; here we&#39;ve curried the multiplication 
 -- infix operator with a `2`
 multiplyBy2 : number -&gt; number
 multiplyBy2 =
     (*) 2
 
 -- If-expressions are used to branch on values
 absoluteValue : number -&gt; number
 absoluteValue number =
     if number &lt; 0 then negate number else number
 
  -- Records are used to hold values with named fields
 book : { title : String, author : String, pages : Int }
 book =
     { title = &quot;Steppenwolf&quot;
     , author = &quot;Hesse&quot;
     , pages = 237 
     }
 
 -- Record access is done with `.`
 title : String
 title =
     book.title
 
 -- Record access `.` can also be used as a function
 author : String
 author =
     .author book
 
 -- We can create entirely new types with the `type` keyword.
 -- The following value represents a binary tree.
 type Tree a
     = Empty
     | Node a (Tree a) (Tree a)
 
 -- It is possible to inspect these types with case-expressions.
 depth : Tree a -&gt; Int
 depth tree =
     case tree of
         Empty -&gt;
             0
 
         Node value left right -&gt;
             1 + max (depth left) (depth right)

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   -- _?\d+
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   -- _?\d+\.(?=\d+)
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">â</span>
  Token "
  Example
   "Hello world"
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">â</span>
  Token {- -}
  Example
   {- A comment
   -}
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">â</span>
  Token --
  Example
   -- A comment
 row
  Feature Type Inference
  FeatureLink ../features/hasTypeInference.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Elm from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Practical Elm For A Busy Developer|https://isbndb.com/book/9780473484309|Alex S. Korban|2019|
 Programming Elm|https://isbndb.com/book/9781680507171|Jeremy Fairbank|20190702|O'Reilly Media, Inc.
 Elm Web Development|https://isbndb.com/book/9781788292375|Ajdin Imsirovic|2018-03-30|Packt Publishing
 Elm in Action|https://isbndb.com/book/9781638355885|Richard Feldman|20200404|Manning Publications
 Web Applications with Elm|https://isbndb.com/book/9781484226100|Wolfgang Loder|20180821|Springer Nature

## Publications about Elm from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Model-View-Update-Communicate: Session Types meet the Elm Architecture|https://www.semanticscholar.org/paper/0c500a3661fe5ef06e09ccc26e9252863d499ca6|S. Fowler|2019|5|2
 Using Elm to Introduce Algebraic Thinking to K-8 Students|https://www.semanticscholar.org/paper/9b5288f0d7cbdc8481abb055574008c8e34dd1c2|Curtis D'Alves and Tanya Bouman and Christopher W. Schankula and J. Hogg and Levin Noronha and Emily Horsman and R. Siddiqui and C. Anand|2018|4|0

keyboardNav maple.html ocaml.html

import ../footer.scroll
