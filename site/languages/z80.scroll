import header.scroll

title z80

title z80 - Assembly language
 hidden

html
 <a class="prevLang" href="nice.html">&lt;</a>
 <a class="nextLang" href="json-graph-spec.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/z80.pldb

startColumns 4

html <div class="quickLinks"></div>

* z80 is an <a href="../lists/languages.html?filter=assembly">assembly language</a> created in 1976.
 link ../lists/languages.html?filter=1976 1976

kpiTable
 #1378 <span title="TotalRank: 1898 Jobs: 103 Users: 1841 Facts: 823 Links: 972">on PLDB</span>
 47 Years Old
 50 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging z80">Books</span>
 0 <span title="Academic publications about or leveraging z80">Papers</span>

* 

- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/z80">package</a> for syntax highlighting z80
- Read more about z80 on the web: 1.
 https://en.wikipedia.org/wiki/Zilog_Z80#Z80_assembly_language 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/z80">Improve our z80 file</a>

html <br>

codeWithHeader Example from the web:
  ; memcpy --
  ; Copy a block of memory from one location to another.
  ;
  ; Entry registers
  ;      BC - Number of bytes to copy
  ;      DE - Address of source data block
  ;      HL - Address of target data block
  ;
  ; Return registers
  ;      BC - Zero
 
              org     1000h       ;Origin at 1000h
  memcpy      public
  loop        ld      a,b         ;Test BC,
              or      c           ;If BC = 0,
              ret     z           ;Return
              ld      a,(de)      ;Load A from (DE)
              ld      (hl),a      ;Store A into (HL)
              inc     de          ;Increment DE
              inc     hl          ;Increment HL
              dec     bc          ;Decrement BC
              jp      loop        ;Repeat the loop
              end

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token ;
  Example
   ; A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav nice.html json-graph-spec.html

import ../footer.scroll
