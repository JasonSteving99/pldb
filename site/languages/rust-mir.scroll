import header.scroll

title Rust MIR

title Rust MIR - Intermediate representation language
 hidden

html
 <a class="prevLang" href="volt.html">&lt;</a>
 <a class="nextLang" href="simple-binary-encoding.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/rust-mir.pldb

startColumns 4

html <div class="quickLinks"><a href="https://www.rust-lang.org"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://blog.rust-lang.org/2016/04/19/MIR.html"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Rust MIR, aka Rust Mid-level Intermediate Representation, is an <a href="../lists/languages.html?filter=ir">intermediate representation language</a> created in 2016.
 link ../lists/languages.html?filter=2016 2016

kpiTable
 #575 <span title="TotalRank: 1135 Jobs: 103 Users: 2404 Facts: 365 Links: 667">on PLDB</span>
 7 Years Old
 0 <span title="Books about or leveraging Rust MIR">Books</span>
 0 <span title="Academic publications about or leveraging Rust MIR">Papers</span>

* Try now: <a href="https://play.rust-lang.org/">Web</a>

* 

- Rust MIR website
 https://www.rust-lang.org
- Rust MIR docs
 https://blog.rust-lang.org/2016/04/19/MIR.html
- Rust MIR compiles to <a href="llvmir.html">LLVM IR</a>
- <a href="https://www.rust-lang.org">rust-lang.org</a> was registered in 2010
- See also: (1 related languages)<a href="swift-il.html">SIL</a>
- Read more about Rust MIR on the web: 1. 2.
 https://rustc-dev-guide.rust-lang.org/hir.html 1.
 https://blog.rust-lang.org/2016/04/19/MIR.html 2.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/rust-mir">Improve our Rust MIR file</a>

html <br>

codeWithHeader Example from the web:
 // WARNING: This output format is intended for human consumers only
 // and is subject to change without notice. Knock yourself out.
 fn main() -&gt; () {
     let mut _0: ();                      // return place in scope 0 at src/main.rs:1:11: 1:11
     let mut _1: std::vec::Vec&lt;i32&gt;;      // in scope 0 at src/main.rs:2:9: 2:16
     let _2: ();                          // in scope 0 at src/main.rs:3:5: 3:16
     let mut _3: &amp;mut std::vec::Vec&lt;i32&gt;; // in scope 0 at src/main.rs:3:5: 3:16
     let _4: ();                          // in scope 0 at src/main.rs:4:5: 4:16
     let mut _5: &amp;mut std::vec::Vec&lt;i32&gt;; // in scope 0 at src/main.rs:4:5: 4:16
     scope 1 {
         debug vec =&gt; _1;                 // in scope 1 at src/main.rs:2:9: 2:16
     }
 
     bb0: {
         _1 = Vec::&lt;i32&gt;::new() -&gt; bb1;   // scope 0 at src/main.rs:2:19: 2:29
                                          // mir::Constant
                                          // + span: src/main.rs:2:19: 2:27
                                          // + user_ty: UserType(0)
                                          // + literal: Const { ty: fn() -&gt; Vec&lt;i32&gt; {Vec::&lt;i32&gt;::new}, val: Value(Scalar(&lt;ZST&gt;)) }
     }
 
     bb1: {
         _3 = &amp;mut _1;                    // scope 1 at src/main.rs:3:5: 3:16
         _2 = Vec::&lt;i32&gt;::push(move _3, const 1_i32) -&gt; [return: bb2, unwind: bb5]; // scope 1 at src/main.rs:3:5: 3:16
                                          // mir::Constant
                                          // + span: src/main.rs:3:9: 3:13
                                          // + literal: Const { ty: for&lt;&#39;r&gt; fn(&amp;&#39;r mut Vec&lt;i32&gt;, i32) {Vec::&lt;i32&gt;::push}, val: Value( Scalar(&lt;ZST&gt;)) }
     }
 
     bb2: {
         _5 = &amp;mut _1;                    // scope 1 at src/main.rs:4:5: 4:16
         _4 = Vec::&lt;i32&gt;::push(move _5, const 2_i32) -&gt; [return: bb3, unwind: bb5]; // scope 1 at src/main.rs:4:5: 4:16
                                          // mir::Constant
                                          // + span: src/main.rs:4:9: 4:13
                                          // + literal: Const { ty: for&lt;&#39;r&gt; fn(&amp;&#39;r mut Vec&lt;i32&gt;, i32) {Vec::&lt;i32&gt;::push}, val: Value( Scalar(&lt;ZST&gt;)) }
     }
 
     bb3: {
         drop(_1) -&gt; bb4;                 // scope 0 at src/main.rs:5:1: 5:2
     }
 
     bb4: {
         return;                          // scope 0 at src/main.rs:5:2: 5:2
     }
 
     bb5 (cleanup): {
         drop(_1) -&gt; bb6;                 // scope 0 at src/main.rs:5:1: 5:2
     }
 
     bb6 (cleanup): {
         resume;                          // scope 0 at src/main.rs:1:1: 5:2
     }
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav volt.html simple-binary-encoding.html

import ../footer.scroll
