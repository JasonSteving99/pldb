import header.scroll

title UnQL

title UnQL - Query language
 hidden

html
 <a class="prevLang" href="spill.html">&lt;</a>
 <a class="nextLang" href="wgsl.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/unql-lang.pldb

startColumns 4

html <div class="quickLinks"></div>

* UnQL, aka Unstructured Query Language, is a <a href="../lists/languages.html?filter=queryLanguage">query language</a> created in 2011 by Richard Hipp and Damien Katz.
 link ../lists/languages.html?filter=2011 2011
 link ../lists/creators.html#richardHipp Richard Hipp
 link ../lists/creators.html#damienKatz Damien Katz

kpiTable
 #2991 <span title="TotalRank: 3647 Jobs: 103 Users: 2797 Facts: 2572 Links: 972">on PLDB</span>
 12 Years Old
 0 <span title="Books about or leveraging UnQL">Books</span>
 1 <span title="Academic publications about or leveraging UnQL">Papers</span>

* UnQL is a database query language, akin to SQL, but designed for modern document-oriented databases. SQL assumes a rigidly defined data schema. Each table has a fixed number of columns and each column has a defined datatype. UnQL assumes a more flexible approach to storing data. Instead of "tables", UnQL uses "collections". (The concept is the same, but the name is changed since "tables" are square whereas "collections" can be of varying shape.) Each collection consists of zero or more documents represented as JSON strings. A document in UnQL corresponds to a row in SQL

- Read more about UnQL on the web: 1.
 http://unql.sqlite.org/index.html/timeline?y=w 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/unql-lang">Improve our UnQL file</a>

html <br>

codeWithHeader Example from the web:
 SELECT {articleout:cool_nosql_collection.docNumber} FROM cool_nosql_collection

endColumns

## Publications about UnQL from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Iteration Algebras for UnQL Graphs and Completeness for Bisimulation|https://www.semanticscholar.org/paper/00b6072ba7ecf7d1281c1aaa7bac7a82bc6a277e|Makoto Hamana|2015|3|0

keyboardNav spill.html wgsl.html

import ../footer.scroll
