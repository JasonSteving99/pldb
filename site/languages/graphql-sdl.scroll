import header.scroll

title GraphQL Schema Definition Language

title GraphQL Schema Definition Language - Interface design language
 hidden

html
 <a class="prevLang" href="lav-format.html">&lt;</a>
 <a class="nextLang" href="stos-basic.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/graphql-sdl.pldb

startColumns 4

html <div class="quickLinks"></div>

* GraphQL Schema Definition Language is an <a href="../lists/languages.html?filter=idl">interface design language</a> created in 2018.
 link ../lists/languages.html?filter=2018 2018

kpiTable
 #1295 <span title="TotalRank: 1806 Jobs: 103 Users: 2797 Facts: 731 Links: 972">on PLDB</span>
 5 Years Old
 0 <span title="Books about or leveraging GraphQL Schema Definition Language">Books</span>
 0 <span title="Academic publications about or leveraging GraphQL Schema Definition Language">Papers</span>

* A type definition syntax to the GraphQL specification.

- GraphQL Schema Definition Language first developed in <a href="../lists/originCommunities.html#httpsGithubComGraphql">https://github.com/graphql/</a>
- Read more about GraphQL Schema Definition Language on the web: 1.
 https://github.com/graphql/graphql-spec/pull/90 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/graphql-sdl">Improve our GraphQL Schema Definition Language file</a>

html <br>

codeWithHeader Example from the web:
 # Enumeration type for a level of priority
 enum Priority {
   LOW
   MEDIUM
   HIGH
 }
 # Our main todo type
 type Todo {
   id: ID!
   name: String!
   description: String
   priority: Priority!
 }
 type Query {
   # Get one todo item
   todo(id: ID!): Todo
   # Get all todo items
   allTodos: [Todo!]!
 }
 type Mutation {
   addTodo(name: String!, priority: Priority = LOW): Todo!
   removeTodo(id: ID!): Todo!
 }
 schema {
   query: Query
   mutation: Mutation
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token “””
  Example
   “”” A comment
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav lav-format.html stos-basic.html

import ../footer.scroll
