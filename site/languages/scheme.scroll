import header.scroll

title Scheme

title Scheme - Programming language
 hidden

html
 <a class="prevLang" href="cuda.html">&lt;</a>
 <a class="nextLang" href="dart.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/scheme.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.scheme-reports.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://docs.scheme.org/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Scheme is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1970 by Guy Steele and Gerald Jay Sussman.
 link ../lists/languages.html?filter=1970 1970
 link ../lists/creators.html#guySteele Guy Steele
 link ../lists/creators.html#geraldJaySussman Gerald Jay Sussman

kpiTable
 #50 <span title="TotalRank: 155 Jobs: 44 Users: 239 Facts: 93 Links: 18">on PLDB</span>
 53 Years Old
 3.8k <span title="Crude user estimate from a linear model.">Users</span>
 24 <span title="Books about or leveraging Scheme">Books</span>
 23 <span title="Academic publications about or leveraging Scheme">Papers</span>
 17k <span title="Scheme repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/scheme">Riju</a> Â· <a href="https://repl.it/languages/scheme">Replit</a>

monacoEditor scheme
 (display "Hello, world!")
 (newline)
 

* Scheme is a functional programming language and one of the two main dialects of the programming language Lisp. Unlike Common Lisp, the other main dialect, Scheme follows a minimalist design philosophy specifying a small standard core with powerful tools for language extension. Scheme was created during the 1970s at the MIT AI Lab and released by its developers, Guy L. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Scheme_(programming_language) Read more on Wikipedia...

- Scheme website
 http://www.scheme-reports.org/
- Scheme Wikipedia page
 https://en.wikipedia.org/wiki/Scheme_(programming_language)
- Scheme docs
 https://docs.scheme.org/
- There are at least 16,742 Scheme repos on <a href="https://github.com/search?q=language:Scheme">GitHub</a>
- Scheme first developed in <a href="../lists/originCommunities.html#httpsCommunitySchemeOrg">https://community.scheme.org/</a>
- PLDB estimates there are currently 1k job openings for Scheme programmers.
- file extensions for Scheme include scm, ss, sch, sld, sls and sps
- The  Google BigQuery Public Dataset GitHub snapshot shows 5k users using Scheme in 7k repos on <a href="https://api.github.com/search/repositories?q=language:Scheme">GitHub</a>
- There are 817 <a href="https://projecteuler.net/language=Scheme">Project Euler</a> users using Scheme
- Explore Scheme snippets on <a href="http://www.rosettacode.org/wiki/Category:Scheme">Rosetta Code</a>
- Scheme on HOPL
 https://hopl.info/showlanguage.prx?exp=694
- Scheme appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Scheme Ubuntu package
 https://packages.ubuntu.com/jammy/guile-2.0
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/scheme">package</a> for syntax highlighting Scheme
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/scheme">package</a> for syntax highlighting Scheme
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/lisp.py">syntax highlighting</a> for Scheme
- GitHub supports <a href="https://github.com/textmate/scheme.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Scheme
- Scheme appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/Calysto/calysto_scheme">Kernel</a> for Scheme
- Release Notes for Scheme
 https://www.scheme.com/csv6.9c/6.9c.html
- Official Blog page for Scheme
 https://planet.scheme.org/
- Events page for Scheme
 https://events.scheme.org/
- Frequently Asked Questions for Scheme
 http://community.schemewiki.org/?scheme-faq
- Indeed.com has 1,174 matches for <a href="https://www.indeed.com/jobs?q=scheme engineer">"scheme engineer"</a>.
- <a href="http://www.scheme-reports.org/">scheme-reports.org</a> was registered in 2009
- See also: (27 related languages)<a href="t.html">T</a>, <a href="lisp.html">Lisp</a>, <a href="algol.html">Algol</a>, <a href="clojure.html">Clojure</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="dylan.html">Dylan</a>, <a href="eulisp.html">EuLisp</a>, <a href="haskell.html">Haskell</a>, <a href="javascript.html">JavaScript</a>, <a href="julia.html">Julia</a>, <a href="lua.html">Lua</a>, <a href="r.html">R</a>, <a href="s.html">S</a>, <a href="racket.html">Racket</a>, <a href="ruby.html">Ruby</a>, <a href="rust.html">Rust</a>, <a href="scala.html">Scala</a>, <a href="planner.html">PLANNER</a>, <a href="ikarus.html">Ikarus Scheme implementation</a>, <a href="larceny.html">Larceny Scheme implementation</a>, <a href="unicode.html">Unicode</a>, <a href="s-expressions.html">S-expressions</a>, <a href="fortran.html">Fortran</a>, <a href="c.html">C</a>, <a href="guile.html">Guile</a>, <a href="emacs-lisp.html">Emacs Lisp</a>, <a href="android.html">Android</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/scheme">Improve our Scheme file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/scheme'>Riju</a>:
 (display &quot;Hello, world!&quot;)
 (newline)
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/s/Scheme.scm'>hello-world</a>:
 (display &quot;Hello World&quot;) (newline)
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Scheme'>the Hello World Collection</a>:
 ; Hello World in Scheme
 
 (display &quot;Hello, world!&quot;)
 (newline)

codeWithHeader Example from <a href='https://github.com/textmate/scheme.tmbundle'>Linguist</a>:
 (define-library (libs basic)
     (export list2 x)
     (begin
         (define (list2 . objs)  objs)
         (define x &#39;libs-basic)
         (define not-exported &#39;should-not-be-exported)
         ))
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Scheme_(programming_language)'>Wikipedia</a>:
 (set! +
       (let ((original+ +))
         (lambda args
           (if (and (not (null? args)) (string? (car args)))
               (apply string-append args)
               (apply original+ args)))))
 (+ 1 2 3)
 ===&gt; 6
 (+ &quot;1&quot; &quot;2&quot; &quot;3&quot;)
 ===&gt; &quot;123&quot;

## <a href="../lists/keywords.html?filter=scheme">Keywords</a> in Scheme
* case do let loop if else when cons car cdr cond lambda lambda* syntax-rules format set! quote eval append list list? member? load

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">â</span>
  Token "
  Example
   "Hello world"
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">â</span>
  Token #| |#
  Example
   #| A comment
   |#
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">â</span>
  Token display
  Example
 row
  Feature Homoiconicity
  FeatureLink ../features/hasHomoiconicity.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Prefix Notation
  FeatureLink ../features/hasPrefixNotation.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   (+ 1 2 3)
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   (define-syntax backwards
    (syntax-rules ()
      ((_) (syntax-error "(backwards) not allowed"))
      ((_ e) e)
      ((_ e1 ... e2)
       (begin e2 (backwards e1 ...)))))
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">â</span>
  Token ;
  Example
   ; A comment
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Lispy
  FeatureLink ../features/isLisp.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Scheme from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Programming And Meta-programming In Scheme|https://isbndb.com/book/9780387983202|Jon Pearce and D. Gries and F. B. Schneider|1997|Springer-verlag New York Inc.
 Scheme and the Art of Programming|https://isbndb.com/book/9780262192880|Springer, George and Friedman, Daniel P.|1989|Mit Pr
 The Scheme Programming Language|https://isbndb.com/book/9780262541480|Dybvig, R. Kent|2003|The MIT Press
 INTRODUCTION TO PROGRAMMING LANGUAGES: PRINCIPLES, C, C++, SCHEME AND PROLOG|https://isbndb.com/book/9780757503672|Yinong Chen|2003|Kendall Hunt Publishing
 The Scheme Programming Language,  ANSI Scheme|https://isbndb.com/book/9780134546469|Dybvig, R. Kent|1996|Prentice Hall
 SCHEME PROGRAMMING LANGUAGE, THE, 4TH ED. [Paperback] DYBVIG|https://isbndb.com/book/9788120343009|DYBVIG|2022|PHI Publisher
 An Introduction to Scheme|https://isbndb.com/book/9780134967127|Smith, Jerry D.|1988|Prentice Hall
 Scheme And The Art Of Programming|https://isbndb.com/book/9780262691369|Springer and George|1989|The Mit Press 1989-09-13
 An Introduction to Functional Programming with Scheme|https://isbndb.com/book/9781934188996||2021|Linus Publications, Inc.
 Chaos-based Encryption: A highly preferable Encryption Scheme|https://isbndb.com/book/9783659193880|Sohail, Shahab Saquib and Ahmad, Musheer|2012|LAP LAMBERT Academic Publishing
 Introduction to Programming Languages: Programming in C C++ Scheme Prolog C# and Python|https://isbndb.com/book/9781792407994|Chen, Yinong|2019-11-15T00:00:01Z|Kendall Hunt Pub Co
 The Scheme Programming Language, fourth edition|https://isbndb.com/book/9780262258166|Dybvig, R. Kent|2009|The MIT Press
 The Scheme Programming Language, fourth edition (The MIT Press)|https://isbndb.com/book/9780262512985|Dybvig, R. Kent|2009|The MIT Press
 Simply Scheme - 2nd Edition: Introducing Computer Science|https://isbndb.com/book/9780262082815|Harvey, Brian and Wright, Matthew|1999|The MIT Press
 Programming in Scheme (The MIT Press)|https://isbndb.com/book/9780262550178|Eisenberg, Michael|1990|The MIT Press
 Programming and Meta-Programming in Scheme (Undergraduate Texts in Computer Science)|https://isbndb.com/book/9781461216827|Pearce, Jon|2012|Springer
 Concrete Abstractions: An Introduction to Computer Science Using Scheme|https://isbndb.com/book/9780534952112|Hailperin, Max and Kaiser, Barbara and Knight, Karl|1998|Course Technology
 INTRODUCTION TO PROGRAMMING LANGUAGES: PRINCIPLES, C, C++, SCHEME AND PROLOG|https://isbndb.com/book/9780757529740|CHEN  YINONG and TSAI  WEI-TEK|2012-01-26T00:00:01Z|Kendall Hunt Publishing
 Scheme and the Art of Programming|https://isbndb.com/book/9780070605220|George Springer and Daniel P. Friedman|1983-05-01T00:00:01Z|Mcgraw Hill
 Exploring Computer Science with Scheme (Undergraduate Texts in Computer Science)|https://isbndb.com/book/9781475729375|Grillmeyer, Oliver|2013|Springer
 Programming and Meta-Programming in Scheme (Undergraduate Texts in Computer Science)|https://isbndb.com/book/9781461272434|Pearce, Jon|2012|Springer
 The Scheme Programming Language|https://isbndb.com/book/9780137918645|Dybvig, R. Kent|1995|Prentice Hall
 IEEE Standard for the Scheme Programming Language/Std 1178-1990|https://isbndb.com/book/9781559371254||1991-05-01T00:00:01Z|Inst of Elect & Electronic
 Subcarrier/Power allocation Scheme for OFDMA Networks: Load Adaptive, Decentralized and Time Efficient|https://isbndb.com/book/9783659804083|Shahzad, Muhammad Adil and Hasan Ali, Aamir|2015|LAP LAMBERT Academic Publishing

## Publications about Scheme from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Revised5 Report on the Algorithmic Language Scheme|https://www.semanticscholar.org/paper/cb447a69faf544c9047492fdb44e4c47c1cfdee1|H. Abelson and R. K. Dybvig and C. T. Haynes and G. Rozas and IV N.I.Adams and D. Friedman and E. Kohlbecker and G. Steele and D. H. Bartley and R. Halstead and D. Oxley and G. Sussman and G. Brooks and C. Hanson and K. Pitman and M. Wand|1986|570|60
 Revised4 report on the algorithmic language scheme|https://www.semanticscholar.org/paper/23cc11e91a6eb4c748995a8b7f5641930372d267|H. Abelson and R. K. Dybvig and C. T. Haynes and G. Rozas and N. Adams and D. Friedman and E. Kohlbecker and G. Steele and D. H. Bartley and R. Halstead and D. Oxley and G. Sussman and G. Brooks and C. Hanson and K. Pitman and M. Wand and W. Clinger and J. Rees|1991|440|24
 DrScheme: a programming environment for Scheme|https://www.semanticscholar.org/paper/d8086b8d23801013482c2e571b387dee81bc1817|R. Findler and John Clements and C. Flanagan and M. Flatt and S. Krishnamurthi and P. Steckler and M. Felleisen|2002|328|19
 The design and implementation of typed scheme|https://www.semanticscholar.org/paper/1b4df92d7f0d9393103cafbdbc512c52a90296b8|Sam Tobin-Hochstadt and M. Felleisen|2008|297|35
 Revised3 report on the algorithmic language scheme|https://www.semanticscholar.org/paper/43b2bcd702c7a2228814f59e393ab6c730c3ca29|J. Rees and W. Clinger|1986|209|20
 Revised6 Report on the Algorithmic Language Scheme|https://www.semanticscholar.org/paper/b22d0c0a48e755098ff3bb4cf185a79847e32464|Michael Sperber and R. K. Dybvig and M. Flatt and A. V. Straaten and R. Findler and Jacob Matthews|2009|151|14
 IEEE standard for the Scheme programming language|https://www.semanticscholar.org/paper/41289b96500579c567de1ad9a62b26e9bc9c35ae|Microcomputer Standards Subcommittee|1991|117|6
 Adaptive Protection Coordination Scheme Using Numerical Directional Overcurrent Relays|https://www.semanticscholar.org/paper/5d4f3a0aa3980cfe18f5e7081b421684258719fd|M. Alam|2019|84|1
 inGAP-sv: a novel scheme to identify and visualize structural variation from paired end mapping data|https://www.semanticscholar.org/paper/bf96c20e3672fb6bed09e9db4b1986f84c61bb6f|J. Qi and F. Zhao|2011|79|4
 Partitioned EDF scheduling for multiprocessors using a C=D task splitting scheme|https://www.semanticscholar.org/paper/0087e4167285d7c66c067de4a87567764ee99a17|A. Burns and Robert I. Davis and P. Wang and Fengxiang Zhang|2011|76|8
 An automatic grading scheme for simple programming exercises|https://www.semanticscholar.org/paper/cbbc8f3d96d80a67bbb44b98b982a1af6281fe48|J. Hext and J. W. Winings|1969|56|3
 Object-oriented programming in scheme|https://www.semanticscholar.org/paper/ee3bcdeccb98e446d3b9933a59600e511f0afbb9|N. Adams and J. Rees|1988|52|1
 Concurrency oriented programming in termite scheme|https://www.semanticscholar.org/paper/55088ec7fa27a01ddfe42566baacb2c7ca6e7e4c|G. Germain|2006|45|3
 A Modular Scheme for Deadlock Prevention in an Object-Oriented Programming Model|https://www.semanticscholar.org/paper/851892ef4cf5ce2dc4e75cac11552dfcedefc2db|Scott West and Sebastian Nanz and B. Meyer|2010|22|0
 An Equational Specification for the Scheme Language|https://www.semanticscholar.org/paper/ea7c32092b5674db19f7283d04ae2feb33252333|Marcelo dâAmorim and G. Rosu|2005|19|2
 Programming World Wide Web pages in scheme|https://www.semanticscholar.org/paper/5b85af04e42aad6999c822a7dd49d15bb0487a3e|K. NÃ¸rmark|1999|17|2
 An adaptive, agent-based protection scheme for radial distribution networks based on IEC 61850 and IEC 61499|https://www.semanticscholar.org/paper/ab95c06583442609ca79bacdc9c77b20dc9e1ca8|D. Pala and C. Tornelli and G. Proserpio|2012|15|0
 Bee: an integrated development environment for the Scheme programming language|https://www.semanticscholar.org/paper/f0250b025f5405ddfeace27d5064c7e2ed84b210|M. Serrano|2000|14|0
 Towards Compatible and Interderivable Semantic Specifications for the Scheme Programming Language, Part II: Reduction Semantics and Abstract Machines|https://www.semanticscholar.org/paper/ba374a28af09de2b858218ce61505622d8d4657a|Malgorzata Biernacka and O. Danvy|2009|11|0
 Compiling a Functional Logic Language: The Basic Scheme|https://www.semanticscholar.org/paper/7f9e1f99f01557d9f77a5507f075cad3e76086e2|S. Antoy and Arthur Peters|2012|8|0
 Bringing Scheme programming to the iPhoneâExperience|https://www.semanticscholar.org/paper/e4fafba1a9b6cceb6900afbe58b7d2fe0e5dfef9|Engineer Bainomugisha and Jorge Vallejos and E. G. Boix and Pascal Costanza and T. D'Hondt and W. Meuter|2012|4|0
 Programming graphical user interfaces with Scheme|https://www.semanticscholar.org/paper/412762582c8b78d290f9a7a6a17de3e904b89249|Erick Gallesio and M. Serrano|2003|3|0
 The Scheme Programming Language|https://www.semanticscholar.org/paper/e7273e4b345308eebaecead6e8306215da661ebe|J. Franco and D. Friedman and O. Danvy|1992|1|0

keyboardNav cuda.html dart.html

import ../footer.scroll
