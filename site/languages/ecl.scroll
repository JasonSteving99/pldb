import header.scroll

title ECL

title ECL - Programming language
 hidden

html
 <a class="prevLang" href="objective-j.html">&lt;</a>
 <a class="nextLang" href="pod.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/ecl.pldb

startColumns 4

html <div class="quickLinks"><a href="http://hpccsystems.com/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/hpcc-systems/HPCC-Platform"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a> <a href="https://en.wikipedia.org/wiki/ECL,_data-centric_programming_language_for_Big_Data"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a></div>

* ECL is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2000.
 link ../lists/languages.html?filter=2000 2000

kpiTable
 #324 <span title="TotalRank: 753 Jobs: 103 Users: 398 Facts: 252 Links: 972">on PLDB</span>
 23 Years Old
 1.7k <span title="Crude user estimate from a linear model.">Users</span>
 1 <span title="Books about or leveraging ECL">Books</span>
 0 <span title="Academic publications about or leveraging ECL">Papers</span>
 234 <span title="ECL repos on GitHub.">Repos</span>

* ECL is a declarative, data centric programming language designed in 2000 to allow a team of programmers to process big data across a high performance computing cluster without the programmer being involved in many of the lower level, imperative decisions.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/ECL,_data-centric_programming_language_for_Big_Data Read more on Wikipedia...

- ECL website
 http://hpccsystems.com/
- ECL Wikipedia page
 https://en.wikipedia.org/wiki/ECL,_data-centric_programming_language_for_Big_Data
- ECL is developed on <a href="https://github.com/hpcc-systems/HPCC-Platform">GitHub</a> and has 521 stars
- There are at least 234 ECL repos on <a href="https://github.com/search?q=language:ECL">GitHub</a>
- ECL first developed in <a href="../lists/originCommunities.html#lexisNexisRiskSolutionsGroup">LexisNexis Risk Solutions Group</a>
- file extensions for ECL include ecl and eclxml
- The  Google BigQuery Public Dataset GitHub snapshot shows 25 users using ECL in 25 repos on <a href="https://api.github.com/search/repositories?q=language:ECL">GitHub</a>
- Explore ECL snippets on <a href="http://www.rosettacode.org/wiki/Category:ECL">Rosetta Code</a>
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/ecl">package</a> for syntax highlighting ECL
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/ecl.py">syntax highlighting</a> for ECL
- GitHub supports <a href="https://github.com/hpcc-systems/ecl-tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for ECL
- <a href="http://hpccsystems.com/">hpccsystems.com</a> was registered in 2010
- See also: (5 related languages)<a href="linux.html">Linux</a>, <a href="prolog.html">Prolog</a>, <a href="pascal.html">Pascal</a>, <a href="sql.html">SQL</a>, <a href="clarion.html">Clarion</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/ecl">Improve our ECL file</a>

html <br>

codeWithHeader Example from <a href='https://github.com/hpcc-systems/ecl-tmLanguage'>Linguist</a>:
 /* 
  * Multi-line comment
  */
 #option (&#39;slidingJoins&#39;, true);
 
 namesRecord :=
             RECORD
 string20        surname;
 string10        forename;
 integer2        age;
 integer2        dadAge;
 integer2        mumAge;
             END;
 
 namesRecord2 :=
             record
 string10        extra;
 namesRecord;
             end;
 
 namesTable := dataset(&#39;x&#39;,namesRecord,FLAT);
 namesTable2 := dataset(&#39;y&#39;,namesRecord2,FLAT);
 
 integer2 aveAgeL(namesRecord l) := (l.dadAge+l.mumAge)/2;
 integer2 aveAgeR(namesRecord2 r) := (r.dadAge+r.mumAge)/2;
 
 // Standard join on a function of left and right
 output(join(namesTable, namesTable2, aveAgeL(left) = aveAgeR(right)));
 
 //Several simple examples of sliding join syntax
 output(join(namesTable, namesTable2, left.age &gt;= right.age - 10 and left.age &lt;= right.age +10));
 output(join(namesTable, namesTable2, left.age between right.age - 10 and right.age +10));
 output(join(namesTable, namesTable2, left.age between right.age + 10 and right.age +30));
 output(join(namesTable, namesTable2, left.age between (right.age + 20) - 10 and (right.age +20) + 10));
 output(join(namesTable, namesTable2, aveAgeL(left) between aveAgeR(right)+10 and aveAgeR(right)+40));
 
 //Same, but on strings.  Also includes age to ensure sort is done by non-sliding before sliding.
 output(join(namesTable, namesTable2, left.surname between right.surname[1..10]+&#39;AAAAAAAAAA&#39; and right.surname[1..10]+&#39;ZZZZZZZZZZ&#39; and left.age=right.age));
 output(join(namesTable, namesTable2, left.surname between right.surname[1..10]+&#39;AAAAAAAAAA&#39; and right.surname[1..10]+&#39;ZZZZZZZZZZ&#39; and left.age=right.age,all));
 
 //This should not generate a self join
 output(join(namesTable, namesTable, left.age between right.age - 10 and right.age +10));
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/ECL,_data-centric_programming_language_for_Big_Data'>Wikipedia</a>:
 D := DATASET([{&#39;ECL&#39;},{&#39;Declarative&#39;},{&#39;Data&#39;},{&#39;Centric&#39;},{&#39;Programming&#39;},{&#39;Language&#39;}],{STRING Value;});

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about ECL from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Ecl Programming Language|https://isbndb.com/book/9786133156937|Surhone and Lambert M. and Tennoe and Mariam T. and Henssonow and Susan F.||

keyboardNav objective-j.html pod.html

import ../footer.scroll
