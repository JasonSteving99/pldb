import header.scroll

title TypeScript

title TypeScript - Programming language
 hidden

html
 <a class="prevLang" href="haskell.html">&lt;</a>
 <a class="nextLang" href="lisp.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/typescript.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.typescriptlang.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/microsoft/TypeScript"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a> <a href="https://en.wikipedia.org/wiki/TypeScript"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/typescript"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="https://twitter.com/typescript"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="https://devdocs.io/typescript/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* TypeScript is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2012 by Anders Hejlsberg.
 link ../lists/languages.html?filter=2012 2012
 link ../lists/creators.html#andersHejlsberg Anders Hejlsberg

kpiTable
 #32 <span title="TotalRank: 104 Jobs: 42 Users: 25 Facts: 37 Links: 46">on PLDB</span>
 11 Years Old
 217.0k <span title="Crude user estimate from a linear model.">Users</span>
 56 <span title="Books about or leveraging TypeScript">Books</span>
 8 <span title="Academic publications about or leveraging TypeScript">Papers</span>
 3m <span title="TypeScript repos on GitHub.">Repos</span>

* Try now: <a href="https://playcode.io/typescript/">Web</a> · <a href="https://riju.codes/typescript">Riju</a> · <a href="https://tio.run/#typescript">TIO</a>

monacoEditor typescript
 console.log("Hello, world!");
 

* TypeScript is a free and open-source programming language developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript, and adds optional static typing to the language. Anders Hejlsberg, lead architect of C# and creator of Delphi and Turbo Pascal, has worked on the development of TypeScript. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/TypeScript Read more on Wikipedia...

- TypeScript website
 http://www.typescriptlang.org/
- TypeScript downloads page
 https://www.typescriptlang.org/download
- TypeScript Wikipedia page
 https://en.wikipedia.org/wiki/TypeScript
- TypeScript is developed on <a href="https://github.com/microsoft/TypeScript">GitHub</a> and has 88,139 stars
- PLDB has 2 documentation sites for TypeScript: <a href="https://www.typescriptlang.org/docs/">www.typescriptlang.org</a>, <a href="https://devdocs.io/typescript/">devdocs.io</a>
- There are at least 3,281,749 TypeScript repos on <a href="https://github.com/search?q=language:TypeScript">GitHub</a>
- TypeScript is a superset of <a href="javascript.html">JavaScript</a>
- TypeScript first developed in <a href="../lists/originCommunities.html#microsoft">Microsoft</a>
- PLDB estimates there are currently 2k job openings for TypeScript programmers.
- file extensions for TypeScript include ts, tsx, cts and mts
- TypeScript on Twitter
 https://twitter.com/typescript
- The  Google BigQuery Public Dataset GitHub snapshot shows 36k users using TypeScript in 48k repos on <a href="https://api.github.com/search/repositories?q=language:TypeScript">GitHub</a>
- There are 87,839 members in the <a href="https://reddit.com/r/typescript">TypeScript subreddit</a>
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> TypeScript programmers reported a median salary of $59,172. 30% of respondents reported using TypeScript. 24,909 programmers reported using TypeScript, and 26,905 said they wanted to use it
- Explore TypeScript snippets on <a href="http://www.rosettacode.org/wiki/Category:TypeScript">Rosetta Code</a>
- TypeScript appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- TypeScript Ubuntu package
 https://packages.ubuntu.com/jammy/node-typescript
- TypeScript <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/theia-ide/typescript-language-server">implementation</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/typescript">package</a> for syntax highlighting TypeScript
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/javascript.py">syntax highlighting</a> for TypeScript
- GitHub supports <a href="https://github.com/Microsoft/TypeScript-TmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for TypeScript
- TypeScript appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/nearbydelta/itypescript">Kernel</a> for TypeScript
- There is a <a href="https://npmjs.org/">central package repository</a> for TypeScript
- Release Notes for TypeScript
 https://www.typescriptlang.org/docs/handbook/release-notes/
- Official Blog page for TypeScript
 https://devblogs.microsoft.com/typescript/
- Indeed.com has 1,542 matches for <a href="https://www.indeed.com/jobs?q=typescript developer">"typescript developer"</a>.
- <a href="http://www.typescriptlang.org/">typescriptlang.org</a> was registered in 2012
- See also: (19 related languages)<a href="javascript.html">JavaScript</a>, <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="delphi.html">Delphi</a>, <a href="turbo-pascal.html">Turbo Pascal</a>, <a href="jquery.html">JQuery</a>, <a href="mongodb.html">MongoDB</a>, <a href="d3.html">D3.js</a>, <a href="visual-studio-editor.html">Visual Studio</a>, <a href="eclipse-editor.html">Eclipse</a>, <a href="emacs-editor.html">Emacs</a>, <a href="vim-editor.html">Vim</a>, <a href="sublime-editor.html">Sublime Text</a>, <a href="visual-studio-code-editor.html">Visual Studio Code</a>, <a href="ecmascript.html">ECMAScript</a>, <a href="maven-pom.html">Apache Maven</a>, <a href="dart.html">Dart</a>, <a href="coffeescript.html">CoffeeScript</a>, <a href="elm.html">Elm</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/typescript">Improve our TypeScript file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/typescript'>Riju</a>:
 console.log(&quot;Hello, world!&quot;);
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/TypeScript.ts'>hello-world</a>:
 console.log(&quot;Hello World&quot;);
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#TypeScript'>the Hello World Collection</a>:
 // Hello world in TypeScript
 
 alert(&#39;Hello world!&#39;);

codeWithHeader Example from <a href='https://github.com/Microsoft/TypeScript-TmLanguage'>Linguist</a>:
 console.log(&quot;Hello, World!&quot;);
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/TypeScript'>Wikipedia</a>:
 class Person {
     private name: string;
     private age: number;
     private salary: number;
 
     constructor(name: string, age: number, salary: number) {
         this.name = name;
         this.age = age;
         this.salary = salary;
     }
 
     toString(): string {
         return `${this.name} (${this.age}) (${this.salary})`; // As of version 1.4
     }
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Algebraic Data Type
  FeatureLink ../features/hasAlgebraicTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   declare type numOrString = string | number
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Union Types
  FeatureLink ../features/hasUnionTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   declare type numOrString = string | number
 row
  Feature Single-Type Arrays
  FeatureLink ../features/hasSingleTypeArrays.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const scores: int[]
 row
  Feature Type Inference
  FeatureLink ../features/hasTypeInference.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "hello world"
 row
  Feature Type Parameters
  FeatureLink ../features/hasTypeParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function identity<T>(arg: T): T {
      return arg;
   }
 row
  Feature Static Typing
  FeatureLink ../features/hasStaticTyping.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Inheritance
  FeatureLink ../features/hasInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class B {}
   class A extends B {}
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token console.log
  Example
   console.log("Hi")
 row
  Feature Namespaces
  FeatureLink ../features/hasNamespaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Typescript even supports splitting namespaces across multiple files:
   // Validation.ts
   namespace Validation {
       export interface StringValidator {
           isAcceptable(s: string): boolean;
       }
   }
   // LettersOnlyValidator.ts
   /// <reference path="Validation.ts" />
   namespace Validation {
       const lettersRegexp = /^[A-Za-z]+$/;
       export class LettersOnlyValidator implements StringValidator {
           isAcceptable(s: string) {
               return lettersRegexp.test(s);
           }
       }
   }
 row
  Feature Mixins
  FeatureLink ../features/hasMixins.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // https://www.typescriptlang.org/docs/handbook/mixins.html
   class SmartObject implements Disposable, Activatable {
   }
   // Note: still need to do some runtime ops to make that work.
 row
  Feature Interfaces
  FeatureLink ../features/hasInterfaces.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // https://www.typescriptlang.org/docs/handbook/interfaces.html
   interface SquareConfig {
      color?: string;
      width?: number;
   }
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   import { ZipCodeValidator } from "./ZipCodeValidator";
   /// <reference path="../typings/jquery.d.ts"/>
   /// <reference path="components/someclass.ts"/>
   import moo = module('moo');
   /// <amd-dependency path="legacy/moduleA" name="moduleA"/>
 row
  Feature Type Casting
  FeatureLink ../features/hasExplicitTypeCasting.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   <number>something;
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const result = true
 row
  Feature Generics
  FeatureLink ../features/hasGenerics.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function identity<T>(arg: T): T {
      return arg;
   }
 row
  Feature Abstract Types
  FeatureLink ../features/hasAbstractTypes.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   abstract class Animal {}
   class Dog extends Animal
 row
  Feature Access Modifiers
  FeatureLink ../features/hasAccessModifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
     private _age = 2
     public get age() {
       return _age
     }
     protected year = 1990
   }
 row
  Feature Static Methods
  FeatureLink ../features/hasStaticMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
     static sayHi() {
       console.log("Hello world")
     }
   }
 row
  Feature Enums
  FeatureLink ../features/hasEnums.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   enum Direction {
    Up,
    Down
   }
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[bB][01]+n?
   0b100110100000110011110010010
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // (\.[0-9]+|[0-9]+\.[0-9]*|[0-9]+)([eE][-+]?[0-9]+)?
   80766866.0
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[xX][0-9a-fA-F]+n?
   0x4D06792
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // 0[oO]?[0-7]+n?
   0o464063622
 row
  Feature Sets
  FeatureLink ../features/hasSets.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   set = new Set()
   set.add("foo")
 row
  Feature Function Composition
  FeatureLink ../features/hasFunctionComposition.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function o(f, g) {
      return function(x) {
          return f(g(x));
      }
   }
 row
  Feature Destructuring
  FeatureLink ../features/hasDestructuring.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const o = {p: 42, q: true};
   const {p, q} = o;
 row
  Feature Default Parameters Pattern
  FeatureLink ../features/hasDefaultParameters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function multiply(a, b = 1) {
    return a * b;
   }
 row
  Feature Increment and decrement operators
  FeatureLink ../features/hasIncrementAndDecrementOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = 0
   i++
   i--
 row
  Feature Methods
  FeatureLink ../features/hasMethods.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    method1() {}
    method2() {}
   }
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function helloWorld() {console.log("hi")}
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Zero-based numbering
  FeatureLink ../features/hasZeroBasedNumbering.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let times = 10
   while (times) {times--}
   console.log("done")
 row
  Feature Ternary operators
  FeatureLink ../features/hasTernaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let i = true ? 1 : 0
 row
  Feature Switch Statements
  FeatureLink ../features/hasSwitch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var animal = "dog"
   switch (animal) {
    case "dog": console.log("yay"); break;
    case "cat": console.log("oh"); break;
   }
 row
  Feature Letter-first Identifiers
  FeatureLink ../features/letterFirstIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature References
  FeatureLink ../features/hasReferences.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Multiline Strings
  FeatureLink ../features/hasMultilineStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const lines = `one
   two`
 row
  Feature Anonymous Functions
  FeatureLink ../features/hasAnonymousFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (() => console.log("hello world"))()
 row
  Feature Infix Notation
  FeatureLink ../features/hasInfixNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const six = 2 + 2 + 2
 row
  Feature Implicit Type Casting
  FeatureLink ../features/hasImplicitTypeConversions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("hello " + 2)
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var name = "John"
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "use strict";
   "use asm";
 row
  Feature Generators
  FeatureLink ../features/hasGenerators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   function* fibonacci(limit) {
       let [prev, curr] = [0, 1];
       while (!limit || curr <= limit) {
           yield curr;
           [prev, curr] = [curr, prev + curr];
       }
   }
   // bounded by upper limit 10
   for (let n of fibonacci(10)) {
       console.log(n);
   }
   // generator without an upper bound limit
   for (let n of fibonacci()) {
       console.log(n);
       if (n > 10000) break;
   }
   // manually iterating
   let fibGen = fibonacci();
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 1
   console.log(fibGen.next().value); // 2
   console.log(fibGen.next().value); // 3
   console.log(fibGen.next().value); // 5
   console.log(fibGen.next().value); // 8
   // picks up from where you stopped
   for (let n of fibGen) {
       console.log(n);
       if (n > 10000) break;
   }
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature First-Class Functions
  FeatureLink ../features/hasFirstClassFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [2.0,1.1].map(Math.round)
 row
  Feature Exceptions
  FeatureLink ../features/hasExceptions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   try {
    undefinedFn()
   } catch (err) {
    console.log(err)
   }
 row
  Feature hasDynamicTyping
  FeatureLink ../features/hasDynamicTyping.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const one = 1
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {
    constructor(name) {
      this._name = name
    }
   }
   new Person("Jane")
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (true)
    console.log("hi!")
 row
  Feature Method Chaining
  FeatureLink ../features/hasMethodChaining.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "hello world".toString().substr(0, 1).length
 row
  Feature Magic Getters and Setters
  FeatureLink ../features/hasMagicGettersAndSetters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // Can be implemented in ES6 using proxies:
   "use strict";
   if (typeof Proxy == "undefined") {
       throw new Error("This browser doesn't support Proxy");
   }
   let original = {
       "foo": "bar"
   };
   let proxy = new Proxy(original, {
       get(target, name, receiver) {
           let rv = Reflect.get(target, name, receiver);
           if (typeof rv === "string") {
               rv = rv.toUpperCase();
           }
           return rv;
         }
   });
   console.log(`original.foo = ${original.foo}`); // "original.foo = bar"
   console.log(`proxy.foo = ${proxy.foo}`);       // "proxy.foo = BAR"
 row
  Feature Dynamic Properties
  FeatureLink ../features/hasDynamicProperties.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   class Person {}
   const person = new Person()
   person.age = 50
 row
  Feature Source Maps
  FeatureLink ../features/hasSourceMaps.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   {
    version: 3,
    file: 'min.js',
    names: ['bar', 'baz', 'n'],
    sources: ['one.js', 'two.js'],
    sourceRoot: 'http://example.com/www/js/',
    mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'
   };
 row
  Feature Bitwise Operators
  FeatureLink ../features/hasBitWiseOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   var x = 5 & 1;
 row
  Feature Single Dispatch
  FeatureLink ../features/hasSingleDispatch.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Polymorphism
  FeatureLink ../features/hasPolymorphism.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   "a" + "b"; 1 + 2
 row
  Feature Merges Whitespace
  FeatureLink ../features/mergesWhitespace.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Lists
  FeatureLink ../features/hasLists.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const list = [1,2,3]
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   80766866
 row
  Feature Breakpoints
  FeatureLink ../features/supportsBreakpoints.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   if (false)
     debugger
 row
  Feature Partial Application
  FeatureLink ../features/hasPartialApplication.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   const addNumbers = (num1, num2) => num1 + num2
   const add5 = num => addNumbers(10, num)
 row
  Feature Map Functions
  FeatureLink ../features/hasMapFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   [1,2.1].map(Math.round)
 row
  Feature Binary Operators
  FeatureLink ../features/hasBinaryOperators.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Async Await
  FeatureLink ../features/hasAsyncAwait.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   async doSomething => await somethingElse()
 row
  Feature Expressions
  FeatureLink ../features/hasExpressions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   1 + 1
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../features/hasRegularExpressionsSyntaxSugar.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   console.log("Hello World".match(/\w/))
 row
  Feature Statements
  FeatureLink ../features/hasStatements.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   let x = 3;
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Function Overloading
  FeatureLink ../features/hasFunctionOverloading.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Processor Registers
  FeatureLink ../features/hasProcessorRegisters.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Multiple Dispatch
  FeatureLink ../features/hasMultipleDispatch.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Variable Substitution Syntax
  FeatureLink ../features/hasVariableSubstitutionSyntax.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about TypeScript on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 TypeScript for C# programmers|https://www.goodreads.com/search?q=TypeScript for C# programmers Steve  Fenton|Steve  Fenton|2013|3|9|3.67
 TypeScript for JavaScript Programmers|https://www.goodreads.com/search?q=TypeScript for JavaScript Programmers Steve  Fenton|Steve  Fenton|2012|1|4|3.50

## Books about TypeScript from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 TypeScript Blueprints|https://isbndb.com/book/9781785887017|Wolff, Ivo Gabe de|2016|Packt Publishing
 Beginning Angular 2 with Typescript|https://isbndb.com/book/9781542916677|Lim, Greg|2017|CreateSpace Independent Publishing Platform
 Mastering TypeScript: Build enterprise-ready, modular web applications using TypeScript 4 and modern frameworks, 4th Edition|https://isbndb.com/book/9781800561601|Rozentals, Nathan|2021|Packt Publishing
 Learn React with TypeScript 3: Beginner's guide to modern React web development with TypeScript 3|https://isbndb.com/book/9781789618129|Rippon, Carl|2018|Packt Publishing
 Vue.js 3 Cookbook: Discover actionable solutions for building modern web apps with the latest Vue features and TypeScript|https://isbndb.com/book/9781838827397|Ribeiro, Heitor Ramon|2020|Packt Publishing
 The TypeScript Workshop: A practical guide to confident, effective TypeScript programming|https://isbndb.com/book/9781838828493|Grynhaus, Ben and Hudgens, Jordan and Hunte, Rayon and Morgan, Matt and Stefanovski, Wekoslav|2021|Packt Publishing
 TypeScript 4 Design Patterns and Best Practices: Discover effective techniques and design patterns for every programming task|https://isbndb.com/book/9781800563421|Despoudis, Theo|2021|Packt Publishing
 Essential TypeScript 4: From Beginner to Pro|https://isbndb.com/book/9781484270110|Freeman, Adam|2021|Apress
 Advanced TypeScript Programming Projects: Build 9 different apps with TypeScript 3 and JavaScript frameworks such as Angular, React, and Vue|https://isbndb.com/book/9781788991018|O'Hanlon, Peter|2019|Packt Publishing
 Programming with Types: Examples in TypeScript|https://isbndb.com/book/9781638350262|Riscutia, Vlad|2019|Manning
 Advanced TypeScript Programming Projects: Build 9 different apps with TypeScript 3 and JavaScript frameworks such as Angular, React, and Vue|https://isbndb.com/book/9781789133042|O'Hanlon, Peter|2019|Packt Publishing
 Hands-On Functional Programming with TypeScript: Explore functional and reactive programming to create robust and testable TypeScript applications|https://isbndb.com/book/9781788831437|Jansen, Remo H.|2019-01-30T00:00:01Z|Packt Publishing
 TypeScript Design Patterns|https://isbndb.com/book/9781785882289|Vane, Vilic|2016|Packt Publishing
 Angular Projects: Build nine real-world applications from scratch using Angular 8 and TypeScript|https://isbndb.com/book/9781838550387|Mohammed, Zama Khan|2019|Packt Publishing
 Deno Web Development: Write, test, maintain, and deploy JavaScript and TypeScript web applications using Deno|https://isbndb.com/book/9781800201149|Santos, Alexandre Portela dos|2021|Packt Publishing
 Beginning Angular with Typescript (updated to Angular 5)|https://isbndb.com/book/9781981969913|Lim, Greg|2017|CreateSpace Independent Publishing Platform
 Mastering TypeScript|https://isbndb.com/book/9781786468710|Rozentals, Nathan|2017|Packt Publishing
 TypeScript Design Patterns|https://isbndb.com/book/9781785280832|Vane, Vilic|2016|Packt Publishing
 TypeScript Revealed|https://isbndb.com/book/9781430257264|Maharry, Dan|2013|Apress
 Angular for Material Design: Leverage Angular Material and TypeScript to Build a Rich User Interface for Web Apps|https://isbndb.com/book/9781484254349|Kotaru, Venkata Keerti|2019|Apress
 TypeScript Blueprints|https://isbndb.com/book/9781785888779|Wolff, Ivo Gabe de|2016|Packt Publishing
 TypeScript 2.x By Example: Build engaging applications with TypeScript, Angular, and NativeScript on the Azure platform|https://isbndb.com/book/9781787280878|Ohri, Sachin|2017|Packt Publishing
 Learning TypeScript 2.x: Develop and maintain captivating web applications with ease, 2nd Edition|https://isbndb.com/book/9781788396608|Jansen, Remo H.|2018|Packt Publishing
 Building Chatbots in TypeScript with the Microsoft Bot Framework: Programming Useful Bots in the Node.JS SDK|https://isbndb.com/book/9780578513492|Szul, Michael|2019|The October Foundation
 TypeScript High Performance: Code for performance, use asynchronous programming, and deliver resources efficiently|https://isbndb.com/book/9781785288647|Kher, Ajinkya|2017-08-24T00:00:01Z|Packt Publishing
 PROGRAMMING TYPESCRIPT|https://isbndb.com/book/9789352138340|||SHROFF
 Design Patterns In Typescript|https://isbndb.com/book/9781078401661|Deepak Sukdeo Sapkale|2019|Independently Published
 TypeScript Programming(Chinese Edition)|https://isbndb.com/book/9787519845964|[ MEI ] BAO LI SI QIE ER NI|2020|China Electric Power Press
 "TypeScript Programming Notebook: A TypeScript Programming Notebook|Journal|Diary For Daily Use"|https://isbndb.com/book/9781686791451|LLC Publishing, Sanders Industries|2019|Independently published
 Typescript Programming|https://isbndb.com/book/9781118705377|Zoltan Arvai and Attila Hajdrik|2013|Wrox
 Refactoring TypeScript|https://isbndb.com/book/9781839218415|James Hickey|20191018|Packt Publishing
 TypeScript Microservices|https://isbndb.com/book/9781788836852|Parth Ghiya|30-05-2018|Packt Publishing
 Mastering TypeScript|https://isbndb.com/book/9781784393991|Nathan Rozentals|2015-04-23|Packt Publishing
 Effective TypeScript|https://isbndb.com/book/9781492053699|Dan  Vanderkam|20191017|O'Reilly Media, Inc.
 Learning TypeScript|https://isbndb.com/book/9781098110284|Josh  Goldberg|20220603|O'Reilly Media, Inc.
 TypeScript Quickly|https://isbndb.com/book/9781638351436|Anton Moiseev; Yakov Fain|20200210|Simon & Schuster
 Programming TypeScript|https://isbndb.com/book/9781492037606|Boris Cherny|20190425|O'Reilly Media, Inc.
 TypeScript Essentials|https://isbndb.com/book/9781783985777|Christopher Nance|20141021|Packt Publishing
 TypeScript High Performance|https://isbndb.com/book/9781782174387|Ajinkya Kher|2017-08-24|Packt Publishing
 The TypeScript Workshop|https://isbndb.com/book/9781838826765|Ben Grynhaus; Jordan Hudgens; Rayon Hunte; Matt Morgan; Wekoslav Stefanovski|29-07-2021|Packt Publishing
 Mastering Typescript Programming Techniques|https://isbndb.com/book/9781787121416|Tamas Piros|2018|
 TypeScript for Beginners|https://isbndb.com/book/9781000539967|Sufyan bin Uzayr|20220323|Taylor & Francis
 Mastering TypeScript 3|https://isbndb.com/book/9781789537475|Nathan Rozentals|28-02-2019|Packt Publishing
 Typescript Programming Language|https://isbndb.com/book/9781708839802|Typescript Publishing|2019-11-18|Independently Published
 Design Patterns In Typescript|https://isbndb.com/book/9781789347951|Dimitris Loukas||
 TypeScript 3.0 Quick Start Guide|https://isbndb.com/book/9781789347937|Patrick Desjardins|2018-08-30|Packt Publishing
 Mastering TypeScript - Second Edition|https://isbndb.com/book/9781786467485|Nathan Rozentals|2017-02-24|Packt Publishing
 Angular Development with TypeScript|https://isbndb.com/book/9781638355250|Anton Moiseev; Yakov Fain|20181205|Simon & Schuster
 Developing Web Components with TypeScript|https://isbndb.com/book/9781484268407|Jörg Krause|20210312|Springer Nature
 Hands-On Functional Programming with TypeScript|https://isbndb.com/book/9781788838184|Remo H. Jansen|30-01-2019|Packt Publishing
 TypeScript 2.x for Angular Developers|https://isbndb.com/book/9781786464361|Christian Nwamba|20171207|Packt Publishing
 TypeScript 4 Design Patterns and Best Practices|https://isbndb.com/book/9781800565418|Theo Despoudis|15-09-2021|Packt Publishing
 Learn TypeScript 3 by Building Web Applications|https://isbndb.com/book/9781789617863|Sebastien Dubois; Alexis Georges; Basarat Ali Syed|22-11-2019|Packt Publishing
 Hands-On TypeScript for C# and .NET Core Developers|https://isbndb.com/book/9781789133325|Francesco Abbruzzese|31-10-2018|Packt Publishing

## Publications about TypeScript from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Understanding TypeScript|https://www.semanticscholar.org/paper/1469b0cbb109c2a788a346dd0480070de8334dea|G. Bierman and M. Abadi and Mads Torgersen|2014|158|23
 Safe & Efficient Gradual Typing for TypeScript|https://www.semanticscholar.org/paper/26ac3ad840d8d773eec2ab7fc60d441b34c6adc5|Aseem Rastogi and N. Swamy and C. Fournet and G. Bierman and Panagiotis Vekris|2015|93|12
 Concrete Types for TypeScript|https://www.semanticscholar.org/paper/0b9d9312d42ee79ff09d47be9146bea121dac3c2|G. Richards and Francesco Zappa Nardelli and J. Vitek|2015|46|7
 Checking correctness of TypeScript interfaces for JavaScript libraries|https://www.semanticscholar.org/paper/0c85abd759cbe878b186a8b01f202a38f048f445|Asger Feldthaus and Anders Møller|2014|38|0
 An empirical investigation of the effects of type systems and code completion on API usability using TypeScript and JavaScript in MS visual studio|https://www.semanticscholar.org/paper/2020498cd27feb41069b39a0982b65d033e49ffb|Lars Fischer and Stefan Hanenberg|2015|14|0
 Mixed Messages: Measuring Conformance and Non-Interference in TypeScript|https://www.semanticscholar.org/paper/aac07bd3202a7da8ab2d627bf15a2ac97c1837cd|Jack Williams and J. Garrett Morris and P. Wadler and Jakub Zalewski|2017|11|1
 Static TypeScript: an implementation of a static compiler for the TypeScript language|https://www.semanticscholar.org/paper/80fedaa1921bb6e42069f83679ae2c42f863a68e|T. Ball and J. D. Halleux and Michal Moskal|2019|5|1
 To Type or Not to Type? A Systematic Comparison of the Software Quality of JavaScript and TypeScript Applications on GitHub|https://www.semanticscholar.org/paper/475615b230f0fe5a8dffa5970a90c0d98c94827c|J. Bogner and Manuel Merkel|2022|1|0

keyboardNav haskell.html lisp.html

import ../footer.scroll
