import header.scroll

title Volt

title Volt - Programming language
 hidden

html
 <a class="prevLang" href="qr-code.html">&lt;</a>
 <a class="nextLang" href="rust-mir.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/volt.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.volt-lang.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/VoltLang/Volta"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a></div>

* Volt is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2011.
 link ../lists/languages.html?filter=2011 2011

kpiTable
 #574 <span title="TotalRank: 1134 Jobs: 103 Users: 883 Facts: 148 Links: 972">on PLDB</span>
 12 Years Old
 365 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Volt">Books</span>
 0 <span title="Academic publications about or leveraging Volt">Papers</span>
 158 <span title="Volt repos on GitHub.">Repos</span>

* Volt is a C-inspired programming language that toes the line between expressiveness and control.

- Volt website
 http://www.volt-lang.org/
- Volt is developed on <a href="https://github.com/VoltLang/Volta">GitHub</a> and has 142 stars
- There are at least 158 Volt repos on <a href="https://github.com/search?q=language:Volt">GitHub</a>
- file extensions for Volt include volt
- The  Google BigQuery Public Dataset GitHub snapshot shows 298 users using Volt in 351 repos on <a href="https://api.github.com/search/repositories?q=language:Volt">GitHub</a>
- GitHub supports <a href="https://github.com/textmate/d.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Volt
- <a href="http://www.volt-lang.org/">volt-lang.org</a> was registered in 2013
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/volt">Improve our Volt file</a>

html <br>

codeWithHeader Example from <a href='https://github.com/textmate/d.tmbundle'>Linguist</a>:
 // Copyright © 2012-2013, Jakob Bornecrantz.  All rights reserved.
 // See copyright notice in src/volt/license.d (BOOST ver. 1.0).
 module main;
 
 import core.stdc.stdio;
 import core.stdc.stdlib;
 
 import watt.process;
 import watt.path;
 
 import results;
 import list;
 import cmd;
 
 int main()
 {
 	auto cmdGroup = new CmdGroup();
 	bool printOk = true;
 	bool printImprovements = true;
 	bool printFailing = true;
 	bool printRegressions = true;
 	string compiler = getEnv(&quot;VOLT&quot;);
 
 	if (compiler is null) {
 		printf(&quot;compiler envar not set\n&quot;.ptr);
 		return -1;
 	}
 
 	/// @todo Scan for files
 	auto tests = testList;
 
 	int total;
 	int passed;
 	int failed;
 	int improved;
 	int regressed;
 
 	auto rets = new Result[] (tests.length);
 	for (size_t i; i &lt; tests.length; i++) {
 		rets[i] = new Result();
 		rets[i].runTest(cmdGroup, tests[i], compiler);
 	}
 
 	cmdGroup.waitAll();
 
 	for (size_t i; i &lt; tests.length; i++) {
 		auto ret = rets[i];
 		total++;
 		if (ret.ok) {
 			passed++;
 			improved += cast(int)!ret.hasPassed;
 
 			if (!ret.hasPassed &amp;&amp; printImprovements) {
 				printf(&quot;%s: %s, improved!\n&quot;.ptr, ret.test.ptr, ret.msg.ptr);
 			} else if (printOk) {
 				printf(&quot;%s: %s\n&quot;.ptr, ret.test.ptr, ret.msg.ptr);
 			}
 		} else {
 			failed++;
 			regressed += cast(int)ret.hasPassed;
 
 
 			if (ret.hasPassed &amp;&amp; printRegressions) {
 				printf(&quot;%s: %s, regressed!\n&quot;.ptr, ret.test.ptr, ret.msg.ptr);
 			} else if (printFailing) {
 				printf(&quot;%s: %s\n&quot;.ptr, ret.test.ptr, ret.msg.ptr);
 			}
 		}
 		fflush(stdout);
 	}
 
 	auto xml = fopen(&quot;results.xml&quot;.ptr, &quot;w+&quot;.ptr);
 	if (xml !is null) {
 		fprintf(xml, &quot;&lt;testsuites errors=\&quot;%u\&quot; failures=\&quot;%u\&quot; tests=\&quot;%u\&quot;&gt;\n&quot;.ptr,
 				regressed, failed - regressed, total);
 		for (size_t i; i &lt; rets.length; i++) {
 			rets[i].xmlLog(xml);
 		}
 		fprintf(xml, &quot;&lt;/testsuites&gt;\n&quot;.ptr);
 		fflush(xml);
 		fclose(xml);
 		xml = null;
 	}
 
 	auto rate = cast(float)passed / cast(float)total * 100.f;
 	printf(&quot;Summary: %i tests, %i pass%s, %i failure%s, %.2f%% pass rate, %i regressions, %i improvements.\n&quot;.ptr,
 	       total,
 	       passed, (passed == 1 ? &quot;&quot;.ptr : &quot;es&quot;.ptr),
 	       failed, (failed == 1 ? &quot;&quot;.ptr : &quot;s&quot;.ptr),
 	       cast(double)rate, regressed, improved);
 
 	return regressed ? -1 : 0;
 }
 

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token printf
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav qr-code.html rust-mir.html

import ../footer.scroll
