import header.scroll

title Bel

title Bel - Programming language
 hidden

html
 <a class="prevLang" href="blitzplus.html">&lt;</a>
 <a class="nextLang" href="cpl.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/bel.pldb

startColumns 4

html <div class="quickLinks"><a href="http://paulgraham.com/bel.html"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://sep.yimg.com/ty/cdn/paulgraham/bellanguage.txt?t=1595850613&"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Bel is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2019 by Paul Graham.
 link ../lists/languages.html?filter=2019 2019
 link ../lists/creators.html#paulGraham Paul Graham

kpiTable
 #595 <span title="TotalRank: 1161 Jobs: 103 Users: 2404 Facts: 391 Links: 667">on PLDB</span>
 4 Years Old
 0 <span title="Books about or leveraging Bel">Books</span>
 0 <span title="Academic publications about or leveraging Bel">Papers</span>

* 

- Bel website
 http://paulgraham.com/bel.html
- Bel docs
 https://sep.yimg.com/ty/cdn/paulgraham/bellanguage.txt?t=1595850613&
- See also: (1 related languages)<a href="arc.html">Arc</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/bel">Improve our Bel file</a>

html <br>

codeWithHeader Example from the web:
 ; Bel in Bel. 9 October 2019, 9:14 GMT
 (def no (x)
   (id x nil))
 (def atom (x)
   (no (id (type x) &#39;pair)))
 (def all (f xs)
   (if (no xs)      t
       (f (car xs)) (all f (cdr xs))
                    nil))
 (def some (f xs)
   (if (no xs)      nil
       (f (car xs)) xs
                    (some f (cdr xs))))
 (def reduce (f xs)
   (if (no (cdr xs))
       (car xs)
       (f (car xs) (reduce f (cdr xs)))))
 (def cons args
   (reduce join args))
 (def append args
   (if (no (cdr args)) (car args)
       (no (car args)) (apply append (cdr args))
                       (cons (car (car args))
                             (apply append (cdr (car args))
                                           (cdr args)))))

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A macro is essentially a function that generates code. I would have 
   ; liked the first example of a macro to be something simpler, but fn
   ; is the one we need first. So I'll introduce macros using a simpler 
   ; macro that isn't part of Bel, then explain fn.
   ; Here is a very simple macro:
   (mac nilwith (x)
     (list 'cons nil x))
   
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (\h \e \l \l \o)
   ; can also be represented as
   "hello"
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; The symbol nil represents falsity as well as the empty list.
   ; The symbol t is the default representation for truth, but any object other than nil also counts as true. 
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (fn (x) (+ x 1))
 row
  Feature Expressions
  FeatureLink ../features/hasExpressions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (+ 1 2)
 row
  Feature Streams
  FeatureLink ../features/hasStreams.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Lists
  FeatureLink ../features/hasLists.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; here is a list of a, b, and c:
   (a . (b . (c . nil)))
   ; can be written as
   (a b c)
 row
  Feature Characters
  FeatureLink ../features/hasCharacters.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   \p
   ; Characters that aren't letters may have longer names. For example the bell character, after which Bel is named, is
   \bel
 row
  Feature hasSymbols
  FeatureLink ../features/hasSymbols.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   foo
 row
  Feature Pairs
  FeatureLink ../features/hasPairs.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (foo . bar)
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token prn
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   ; A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token ;
  Example
   ; A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav blitzplus.html cpl.html

import ../footer.scroll
