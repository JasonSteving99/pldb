import header.scroll

title OCaml

title OCaml - Programming language
 hidden

html
 <a class="prevLang" href="elm.html">&lt;</a>
 <a class="nextLang" href="powerpc.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/ocaml.pldb

startColumns 4

html <div class="quickLinks"><a href="http://ocaml.org"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/OCaml"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://twitter.com/ocamllang"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="https://devdocs.io/ocaml/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* OCaml is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1996 by Xavier Leroy.
 link ../lists/languages.html?filter=1996 1996
 link ../lists/creators.html#xavierLeroy Xavier Leroy

kpiTable
 #68 <span title="TotalRank: 246 Jobs: 103 Users: 264 Facts: 93 Links: 50">on PLDB</span>
 27 Years Old
 3.3k <span title="Crude user estimate from a linear model.">Users</span>
 11 <span title="Books about or leveraging OCaml">Books</span>
 14 <span title="Academic publications about or leveraging OCaml">Papers</span>
 27k <span title="OCaml repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/ocaml">Riju</a> · <a href="https://tio.run/#ocaml">TIO</a>

* OCaml ( oh-KAM-əl), originally named Objective Caml, is the main implementation of the programming language Caml, created by Xavier Leroy, Jérôme Vouillon, Damien Doligez, Didier Rémy, Ascánder Suárez and others in 1996. A member of the ML language family, OCaml extends the core Caml language with object-oriented programming constructs. OCaml's toolset includes an interactive top-level interpreter, a bytecode compiler, a reversible debugger, a package manager (OPAM), and an optimizing native code compiler. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/OCaml Read more on Wikipedia...

- OCaml website
 http://ocaml.org
- OCaml Wikipedia page
 https://en.wikipedia.org/wiki/OCaml
- PLDB has 2 documentation sites for OCaml: <a href="https://ocaml.org/docs">ocaml.org</a>, <a href="https://devdocs.io/ocaml/">devdocs.io</a>
- There are at least 27,376 OCaml repos on <a href="https://github.com/search?q=language:OCaml">GitHub</a>
- OCaml first developed in <a href="../lists/originCommunities.html#institutNationalDeRechercheEnSciencesEtTechnologiesDuNumerique">Institut national de recherche en sciences et technologies du numérique</a>
- file extensions for OCaml include ml, mli, eliom, eliomi, ml4, mll and mly
- OCaml on Twitter
 https://twitter.com/ocamllang
- The  Google BigQuery Public Dataset GitHub snapshot shows 4k users using OCaml in 6k repos on <a href="https://api.github.com/search/repositories?q=language:OCaml">GitHub</a>
- Check out the 87 <a href="https://www.meetup.com/topics/ocaml-programming/">OCaml meetup groups</a> on Meetup.com.
- There are 219 <a href="https://projecteuler.net/language=OCaml">Project Euler</a> users using OCaml
- Explore OCaml snippets on <a href="http://www.rosettacode.org/wiki/Category:OCaml">Rosetta Code</a>
- OCaml on HOPL
 https://hopl.info/showlanguage.prx?exp=2294
- OCaml appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- OCaml Ubuntu package
 https://packages.ubuntu.com/jammy/ocaml
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/ml.py">syntax highlighting</a> for OCaml
- GitHub supports <a href="https://github.com/textmate/ocaml.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for OCaml
- OCaml appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- PLDB has 2 <a href="jupyter-notebook.html">Jupyter</a> Kernels for OCaml: <a href="https://github.com/andrewray/iocaml">github.com</a>, <a href="https://github.com/akabe/ocaml-jupyter">github.com</a>
- There is a <a href="https://opam.ocaml.org/">central package repository</a> for OCaml
- Release Notes for OCaml
 https://ocaml.org/releases
- Official Blog page for OCaml
 https://ocaml.org/blog
- Frequently Asked Questions for OCaml
 https://opam.ocaml.org/doc/FAQ.html
- <a href="http://ocaml.org">ocaml.org</a> was registered in 2000
- See also: (36 related languages)<a href="occam.html">Occam</a>, <a href="c.html">C</a>, <a href="ia-32.html">IA-32</a>, <a href="sparc.html">SPARC</a>, <a href="arm.html">ARM</a>, <a href="unix.html">Unix</a>, <a href="f-sharp.html">F#</a>, <a href="caml.html">Caml</a>, <a href="cool.html">Classroom Object Oriented Language</a>, <a href="standard-ml.html">Standard ML</a>, <a href="ats.html">ATS</a>, <a href="elm.html">Elm</a>, <a href="fstar.html">F*</a>, <a href="haxe.html">Haxe</a>, <a href="opa.html">Opa</a>, <a href="rust.html">Rust</a>, <a href="scala.html">Scala</a>, <a href="ml.html">ML</a>, <a href="python.html">Python</a>, <a href="perl.html">Perl</a>, <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="fortran.html">Fortran</a>, <a href="javascript.html">JavaScript</a>, <a href="jvm.html">JVM</a>, <a href="pic-microcontroller.html">PIC microcontroller</a>, <a href="emacs-editor.html">Emacs</a>, <a href="vim-editor.html">Vim</a>, <a href="opengl.html">OpenGL</a>, <a href="hack.html">Hack</a>, <a href="php.html">PHP</a>, <a href="ios.html">iOS</a>, <a href="android.html">Android</a>, <a href="coq.html">Coq</a>, <a href="wasm.html">WebAssembly</a>, <a href="haskell.html">Haskell</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/ocaml">Improve our OCaml file</a>

html <br>

codeWithHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
 let square x = x * x
 

codeWithHeader Example from <a href='https://riju.codes/ocaml'>Riju</a>:
 ;;
 print_string &quot;Hello, world!\n&quot;
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/o/OCaml.ml'>hello-world</a>:
 print_string &quot;Hello World\n&quot;

codeWithHeader Example from <a href='http://helloworldcollection.de/#OCaml'>the Hello World Collection</a>:
 (* Hello World in OCaml *)
 print_string &quot;Hello World!\n&quot;;;

codeWithHeader Example from <a href='https://github.com/textmate/ocaml.tmbundle'>Linguist</a>:
 (*
  * Copyright (c) 2013 Jeremy Yallop.
  *
  * This file is distributed under the terms of the MIT License.
  * See the file LICENSE for details.
  *)
 let string_of format v =
   let buf = Buffer.create 100 in
   let fmt = Format.formatter_of_buffer buf in begin
     format fmt v;
     Format.pp_print_flush fmt ();
     Buffer.contents buf
   end

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/OCaml'>Wikipedia</a>:
 fun x_1 -&gt; (x_1 *
      let y_3 =
          let y_2 = (x_1 * 1)
          in (y_2 * y_2)
      in (y_3 * y_3))

## <a href="../lists/keywords.html?filter=ocaml">Keywords</a> in OCaml
* as assert begin class constraint do done downto else end exception external false for fun function functor if in include inherit initializer lazy let match method module mutable new object of open private raise rec sig struct then to true try type value val virtual when while with

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Classes
  FeatureLink ../features/hasClasses.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token true false
  Example
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token print_string
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token (* *)
  Example
   (* A comment
   *)
 row
  Feature Module Pattern
  FeatureLink ../features/hasModules.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (* In OCaml, every piece of code is wrapped into a module. *)
   (* amodule.ml *)
   let hello () = print_endline "Hello"
   (* bmodule.ml *)
   Amodule.hello ()
 row
  Feature Type Inference
  FeatureLink ../features/hasTypeInference.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Multiple Inheritance
  FeatureLink ../features/hasMultipleInheritance.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   (* This is a single-line comment. *)
   (* This is a
    * multi-line
    * comment.
    *)
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about OCaml on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Real World OCaml: Functional programming for the masses|https://www.goodreads.com/search?q=Real World OCaml: Functional programming for the masses Yaron Minsky|Yaron Minsky|2013|7|88|4.28
 Unix System Programming in OCaml|https://www.goodreads.com/search?q=Unix System Programming in OCaml Xavier Leroy|Xavier Leroy|1994|0|1|4.00
 Apprendre à programmer avec OCaml|https://www.goodreads.com/search?q=Apprendre à programmer avec OCaml Sylvain Conchon|Sylvain Conchon|2014|0|1|4.00
 Using, Understanding, and Unraveling The OCaml Language: From Practice to Theory and vice versa|https://www.goodreads.com/search?q=Using, Understanding, and Unraveling The OCaml Language: From Practice to Theory and vice versa Didier Rémy|Didier Rémy||0|1|5.00
 Apprendre à programmer avec OCaml: Algorithms et structures de données (Noire)|https://www.goodreads.com/search?q=Apprendre à programmer avec OCaml: Algorithms et structures de données (Noire) Jean-Christophe Filliatre|Jean-Christophe Filliatre||0|0|0.0

## Books about OCaml from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Concepts and Semantics of Programming Languages 1: A Semantical Approach with OCaml and Python|https://isbndb.com/book/9781786305305|Hardin, The¿re¿se and Jaume, Mathieu and Pessaux, François and Viguie Donzeau-Gouge, Ve¿ronique|2021|Wiley-ISTE
 OCaml Scientific Computing: Functional Programming in Data Science and Artificial Intelligence (Undergraduate Topics in Computer Science)|https://isbndb.com/book/9783030976446|Wang, Liang and Zhao, Jianxin and Mortier, Richard|2022|Springer
 Practical OCaml|https://isbndb.com/book/9781590596203|Smith, Joshua B.|2006|Apress
 Practical OCaml|https://isbndb.com/book/9781430202448|Joshua B. Smith|20080103|Springer Nature
 OCaml Scientific Computing|https://isbndb.com/book/9783030976453|Liang Wang; Jianxin Zhao; Richard Mortier|20220526|Springer Nature
 Ocaml Programming Language Family: Ocaml Software, Objective Caml, Marionnet, Fftw, Mldonkey, Unison, Frama-c, Hol Light, Coq, Geneweb|https://isbndb.com/book/9781158073269|Books Llc and Books and LLC|2010|

## Publications about OCaml from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Using, Understanding, and Unraveling the OCaml Language. From Practice to Theory and Vice Versa|https://www.semanticscholar.org/paper/dbf92034106f3c26488946a043a48c9187bc0821|Didier Rémy|2000|42|2
 Type-safe distributed programming for OCaml|https://www.semanticscholar.org/paper/7a3fe7e9246140a6e07aeb07841a8b052d0784b5|John N. Billings and Peter Sewell and Mark R. Shinwell and Rok Strnisa|2006|25|2
 Typed Embedding of a Relational Language in OCaml|https://www.semanticscholar.org/paper/f11043b0ebaa3923e39d3e1010fd8f87bda5552e|D. Kosarev and D. Boulytchev|2018|14|2
 Retrofitting effect handlers onto OCaml|https://www.semanticscholar.org/paper/fbf84ef1173647b7bdf7f674c8acff9f61180728|K. Sivaramakrishnan and Stephen Dolan and Leo White and T. Kelly and S. Jaffer and A. Madhavapeddy|2021|13|2
 Merlin: a language server for OCaml (experience report)|https://www.semanticscholar.org/paper/83af07fe7334441c22973321127459731403cfa6|Frédéric Bour and Thomas Refis and G. Scherer|2018|12|0
 GOSPEL - Providing OCaml with a Formal Specification Language|https://www.semanticscholar.org/paper/96745e021ccaeb721d1854b7dea4eceb75d71357|A. Charguéraud and J. Filliâtre and C. Lourenço and Mário Pereira|2019|8|0
 GPGPU Composition with OCaml|https://www.semanticscholar.org/paper/3a54d960ab04fddb451800a65b55970a1c2e4382|M. Bourgoin and E. Chailloux|2014|4|0
 Improving Type Error Messages in OCaml|https://www.semanticscholar.org/paper/8d994f1118904a90ede5abefec8c8b8c0ba5ab6e|A. Charguéraud|2015|4|0
 Caml-Shcaml: an ocaml library for unix shell programming|https://www.semanticscholar.org/paper/4ec33572f58d0f2a0411abdc88e483a7bdc9fde7|A. Heller and Jesse A. Tov|2008|4|1
 Chemoinformatics and structural bioinformatics in OCaml|https://www.semanticscholar.org/paper/b10743378eabcbc7d3415e4c43c6dcad192604f2|F. Berenger and Kam Y. J. Zhang and Yoshihiro Yamanishi|2019|4|0
 Retrofitting parallelism onto OCaml|https://www.semanticscholar.org/paper/0202d541aadfe56d9cce09c1c5c609098778b908|K. Sivaramakrishnan and Stephen Dolan and Leo White and S. Jaffer and T. Kelly and Anmol Sahoo and S. Parimala and Atul Dhiman and A. Madhavapeddy|2020|4|1
 WCET of OCaml Bytecode on Microcontrollers: An Automated Method and Its Formalisation|https://www.semanticscholar.org/paper/8b3c59637fb8f5c4d181125aa03b9fe48792a4c8|S. Varoumas and T. Crolard|2019|2|0
 Using camlp4 for presenting dynamic mathematics on the web: DynaMoW, an OCaml language extension for the run-time generation of mathematical contents and their presentation on the web|https://www.semanticscholar.org/paper/2fbcc662edca887550e0ce0463695b3ecfcf0381|F. Chyzak and Alexis Darrasse|2011|1|0
 Cameleer: a Deductive Verification Tool for OCaml|https://www.semanticscholar.org/paper/00ba0130dc4666ce2b3aa584dbf32ec325cbd0ba|Mário Pereira and A. Ravara|2021|1|0

keyboardNav elm.html powerpc.html

import ../footer.scroll
