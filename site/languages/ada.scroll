import header.scroll

title Ada

title Ada - Programming language
 hidden

html
 <a class="prevLang" href="swift.html">&lt;</a>
 <a class="nextLang" href="rust.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/ada.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.adaic.org"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/Ada_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/ada"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="http://www.ada-auth.org/comment.html"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-2.023 2.309-3.178 3.927-1.964L5.455 4.64 12 9.548l6.545-4.91 1.528-1.145C21.69 2.28 24 3.434 24 5.457z"/></svg></a> <a href="https://pyjarrett.github.io/programming-with-ada/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Ada is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1980 by Jean Ichbiah.
 link ../lists/languages.html?filter=1980 1980
 link ../lists/creators.html#jeanIchbiah Jean Ichbiah

kpiTable
 #23 <span title="TotalRank: 73 Jobs: 38 Users: 107 Facts: 12 Links: 23">on PLDB</span>
 43 Years Old
 12.1k <span title="Crude user estimate from a linear model.">Users</span>
 64 <span title="Books about or leveraging Ada">Books</span>
 50 <span title="Academic publications about or leveraging Ada">Papers</span>
 5k <span title="Ada repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/ada">Riju</a>

* Ada is a structured, statically typed, imperative, wide-spectrum, and object-oriented high-level computer programming language, extended from Pascal and other languages. It has built-in language support for design-by-contract, extremely strong typing, explicit concurrency, offering tasks, synchronous message passing, protected objects, and non-determinism. Ada improves code safety and maintainability by using the compiler to find errors in favor of runtime errors. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Ada_(programming_language) Read more on Wikipedia...

- Ada website
 http://www.adaic.org
- Ada Wikipedia page
 https://en.wikipedia.org/wiki/Ada_(programming_language)
- Ada docs
 https://pyjarrett.github.io/programming-with-ada/
- Ada mailing list
 http://www.ada-auth.org/comment.html
- There are at least 4,785 Ada repos on <a href="https://github.com/search?q=language:Ada">GitHub</a>
- Ada first developed in <a href="../lists/originCommunities.html#ciiHoneywellBull">CII Honeywell Bull</a>
- PLDB estimates there are currently 2k job openings for Ada programmers.
- file extensions for Ada include adb, ads and ada
- The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using Ada in 2k repos on <a href="https://api.github.com/search/repositories?q=language:Ada">GitHub</a>
- There are 8,055 members in the <a href="https://reddit.com/r/ada">Ada subreddit</a>
- There are 129 <a href="https://projecteuler.net/language=Ada">Project Euler</a> users using Ada
- Explore Ada snippets on <a href="http://www.rosettacode.org/wiki/Category:Ada">Rosetta Code</a>
- Ada is supported by the <a href="https://www.sourceware.org/gdb/">GDB</a>
- Ada on HOPL
 https://hopl.info/showlanguage.prx?exp=840
- Ada ranks #28 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Ada Ubuntu package
 https://packages.ubuntu.com/jammy/gnat
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/ada.py">syntax highlighting</a> for Ada
- GitHub supports <a href="https://github.com/textmate/ada.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Ada
- Ada appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- Indeed.com has 2,184 matches for <a href="https://www.indeed.com/jobs?q=ada developer">"ada developer"</a>.
- <a href="http://www.adaic.org">adaic.org</a> was registered in 1998
- See also: (22 related languages)<a href="spark.html">SPARK</a>, <a href="ravenscar-profile.html">Ravenscar profile</a>, <a href="algol-68.html">ALGOL 68</a>, <a href="pascal.html">Pascal</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="java.html">Java</a>, <a href="eiffel.html">Eiffel</a>, <a href="chapel.html">Chapel</a>, <a href="nim.html">Nim</a>, <a href="pl-sql.html">PL/SQL</a>, <a href="plpgsql.html">PL/pgSQL</a>, <a href="ruby.html">Ruby</a>, <a href="rust.html">Rust</a>, <a href="seed7.html">Seed7</a>, <a href="sql-psm.html">SQL/PSM</a>, <a href="vhdl.html">VHDL</a>, <a href="unicode.html">Unicode</a>, <a href="lisp.html">Lisp</a>, <a href="setl.html">SETL</a>, <a href="algol.html">Algol</a>, <a href="algol-60.html">ALGOL 60</a>, <a href="apse.html">APSE</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/ada">Improve our Ada file</a>

html <br>

codeWithHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
 -- This pragma will remove the warning produced by the default
 -- CE filename and the procedure name differing,
 -- see : https://gcc.gnu.org/onlinedocs/gcc-8.2.0/gnat_rm/Pragma-Source_005fFile_005fName.html#Pragma-Source_005fFile_005fName
 pragma Source_File_Name (Square, Body_File_Name =&gt; &quot;example.adb&quot;);
 
 -- Type your code here, or load an example.
 function Square(num : Integer) return Integer is
 begin
     return num**2;
 end Square;
 
 -- Ada 2012 also provides Expression Functions
 -- (http://www.ada-auth.org/standards/12rm/html/RM-6-8.html)
 -- as a short hand for functions whose body consists of a
 -- single return statement. However they cannot be used as a
 -- compilation unit.
 -- function Square(num : Integer) return Integer is (num**2);
 

codeWithHeader Example from <a href='https://riju.codes/ada'>Riju</a>:
 with Ada.Text_IO;
 
 procedure Main is
 begin
    Ada.Text_IO.Put_Line(&quot;Hello, world!&quot;);
 end Main;
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/a/Ada.adb'>hello-world</a>:
 with Ada.Text_IO;
 
 procedure Hello_World is
    use Ada.Text_IO;
 begin
    Put_line (&quot;Hello World&quot;);
 end Hello_World;
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Ada'>the Hello World Collection</a>:
 -- Hello World in Ada
 
 with Text_IO;
 procedure Hello_World is
 
 begin
   Text_IO.Put_Line(&quot;Hello World!&quot;);
 end Hello_World;
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Ada_(programming_language)'>Wikipedia</a>:
 with Ada.Text_IO; use Ada.Text_IO;
 
 procedure Traffic is
 
    type Airplane_ID is range 1..10;             -- 10 airplanes
 
    task type Airplane (ID: Airplane_ID);        -- task representing airplanes, with ID as initialisation parameter
    type Airplane_Access is access Airplane;     -- reference type to Airplane
 
    protected type Runway is                     -- the shared runway (protected to allow concurrent access)
       entry Assign_Aircraft (ID: Airplane_ID);  -- all entries are guaranteed mutually exclusive
       entry Cleared_Runway (ID: Airplane_ID);
       entry Wait_For_Clear;
    private
       Clear: Boolean := True;                   -- protected private data - generally more than just a flag...
    end Runway;
    type Runway_Access is access all Runway;
 
    -- the air traffic controller task takes requests for takeoff and landing
    task type Controller (My_Runway: Runway_Access) is
       -- task entries for synchronous message passing
       entry Request_Takeoff (ID: in Airplane_ID; Takeoff: out Runway_Access);
       entry Request_Approach(ID: in Airplane_ID; Approach: out Runway_Access);
    end Controller;
 
    --  allocation of instances
    Runway1    : aliased Runway;              -- instantiate a runway
    Controller1: Controller (Runway1&#39;Access); -- and a controller to manage it
 
    ------ the implementations of the above types ------
    protected body Runway is
       entry Assign_Aircraft (ID: Airplane_ID)
  when Clear is   -- the entry guard - calling tasks are blocked until the condition is true
       begin
        Clear := False;
        Put_Line (Airplane_ID&#39;Image (ID) &amp; &quot; on runway &quot;);
       end;
 
       entry Cleared_Runway (ID: Airplane_ID)
  when not Clear is
       begin
          Clear := True;
          Put_Line (Airplane_ID&#39;Image (ID) &amp; &quot; cleared runway &quot;);
       end;
 
       entry Wait_For_Clear
  when Clear is
       begin
          null;      -- no need to do anything here - a task can only enter if &quot;Clear&quot; is true
       end;
    end Runway;
 
    task body Controller is
    begin
       loop
          My_Runway.Wait_For_Clear;   -- wait until runway is available (blocking call)
          select                      -- wait for two types of requests (whichever is runnable first)
             when Request_Approach&#39;count = 0 =&gt;  -- guard statement - only accept if there are no tasks queuing on Request_Approach
              accept Request_Takeoff (ID: in Airplane_ID; Takeoff: out Runway_Access)
              do                                 -- start of synchronized part
                My_Runway.Assign_Aircraft (ID);  -- reserve runway (potentially blocking call if protected object busy or entry guard false)
                Takeoff := My_Runway;            -- assign &quot;out&quot; parameter value to tell airplane which runway
              end Request_Takeoff;               -- end of the synchronised part
          or
             accept Request_Approach (ID: in Airplane_ID; Approach: out Runway_Access) do
                My_Runway.Assign_Aircraft (ID);
                Approach := My_Runway;
             end Request_Approach;
          or                          -- terminate if no tasks left who could call
             terminate;
          end select;
       end loop;
    end;
 
    task body Airplane is
       Rwy : Runway_Access;
    begin
       Controller1.Request_Takeoff (ID, Rwy); -- This call blocks until Controller task accepts and completes the accept block
       Put_Line (Airplane_ID&#39;Image (ID) &amp; &quot;  taking off...&quot;);
       delay 2.0;
       Rwy.Cleared_Runway (ID);               -- call will not block as &quot;Clear&quot; in Rwy is now false and no other tasks should be inside protected object
       delay 5.0; -- fly around a bit...
       loop
          select   -- try to request a runway
             Controller1.Request_Approach (ID, Rwy); -- this is a blocking call - will run on controller reaching accept block and return on completion
             exit; -- if call returned we&#39;re clear for landing - leave select block and proceed...
          or
             delay 3.0;  -- timeout - if no answer in 3 seconds, do something else (everything in following block)
             Put_Line (Airplane_ID&#39;Image (ID) &amp; &quot;   in holding pattern&quot;);  -- simply print a message
          end select;
       end loop;
       delay 4.0;  -- do landing approach...
       Put_Line (Airplane_ID&#39;Image (ID) &amp; &quot;            touched down!&quot;);
       Rwy.Cleared_Runway (ID);  -- notify runway that we&#39;re done here.
    end;
 
    New_Airplane: Airplane_Access;
 
 begin
    for I in Airplane_ID&#39;Range loop  -- create a few airplane tasks
       New_Airplane := new Airplane (I); -- will start running directly after creation
       delay 4.0;
    end loop;
 end Traffic;

## <a href="../lists/keywords.html?filter=ada">Keywords</a> in Ada
* abort else new return abs elsif not reverse abstract end null accept entry select access exception of separate aliased exit or some all others subtype and for out synchronized array function overriding at tagged generic package task begin goto pragma terminate body private then if procedure type case in protected constant interface until is raise use declare range delay limited record when delta loop rem while digits renames with do mod requeue xor

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Scientific Notation
  FeatureLink ../features/hasScientificNotation.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Fixed Point Numbers
  FeatureLink ../features/hasFixedPoint.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- [0-9_]+
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- [0-9_]+\.[0-9_]*
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   -- [0-9_]+#[0-9a-f_\.]+#
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">✓</span>
  Token True False
  Example
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Assignment
  FeatureLink ../features/hasAssignment.html
  Supported <span class="hasFeature">✓</span>
  Token :=
  Example
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token Text_IO.Put_Line
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token --
  Example
   -- A comment
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Directives
  FeatureLink ../features/hasDirectives.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Generics
  FeatureLink ../features/hasGenerics.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   generic
      Max_Size : Natural; -- a generic formal value
      type Element_Type is private; -- a generic formal type; accepts any nonlimited type
   package Stacks is
      type Size_Type is range 0 .. Max_Size;
      type Stack is limited private;
      procedure Create (S : out Stack;
                        Initial_Size : in Size_Type := Max_Size);
      procedure Push (Into : in out Stack; Element : in Element_Type);
      procedure Pop (From : in out Stack; Element : out Element_Type);
      Overflow : exception;
      Underflow : exception;
   private
      subtype Index_Type is Size_Type range 1 .. Max_Size;
      type Vector is array (Index_Type range <>) of Element_Type;
      type Stack (Allocated_Size : Size_Type := 0) is record
         Top : Index_Type;
         Storage : Vector (1 .. Allocated_Size);
      end record;
   end Stacks;
 row
  Feature Pointers
  FeatureLink ../features/hasPointers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Case Sensitivity
  FeatureLink ../features/isCaseSensitive.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Ada from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Programming in Ada 2012|https://isbndb.com/book/9781107424814|Barnes, John|2014|Cambridge University Press
 Ada 95: Problem Solving and Program Design (3rd Edition)|https://isbndb.com/book/9780201361230|Feldman, Michael B. and Koffman, Elliot B.|1999|Addison-Wesley
 The Calculating Passion of Ada Byron|https://isbndb.com/book/9780208021199|Baum, Joan|1986|Archon Books
 Programming in Ada 2005 with CD|https://isbndb.com/book/9780321340788|Barnes, John|2006|Pearson
 Power Programming With Ada For The Ibm Pc|https://isbndb.com/book/9780830679027|Winters and John W.|1987|Tab Books
 Ada For Multi-microprocessors (the Ada Companion Series)|https://isbndb.com/book/9780521301039|M. Tedd|1984|Cambridge University Press
 Rendezvous with ADA 95 2e|https://isbndb.com/book/9780471012764|J. Naiditch, David|1995|John Wiley &Sons
 Dreaming in Code: Ada Byron Lovelace, Computer Pioneer|https://isbndb.com/book/9780763693565|McCully, Emily Arnold|2019|Candlewick
 Programming in Ada: Plus an Overview of Ada 9X (International computer science series)|https://isbndb.com/book/9780201624076|Barnes, J. G. P.|1993|Addison-Wesley
 Ada Programming With Applications|https://isbndb.com/book/9780205087440|Eugen N Vasilescu|1986|Allyn And Bacon
 Ada|https://isbndb.com/book/9780929306087|Gehani, Narain|1991|Silicon Press
 Distributed Programming in ADA with Protected Objects|https://isbndb.com/book/9781581120349|Ledru, Pascal|1998|Dissertation.Com.
 Ada Programming Success In A Day|https://isbndb.com/book/9781329461680|Sam Key|2015|Lulu.com
 Consolidated Ada reference manual: language and standard libraries : international standard ISO/IEC 8652/1995(E) with technical corrigendum 1|https://isbndb.com/book/9783540430384|N/a|2002|Springer
 Programming And Problem Solving With Ada|https://isbndb.com/book/9780669294279|Nell Dale and Et Al|1994|Jones And Bartlett Publishers, Inc
 Consolidated Ada Reference Manual|https://isbndb.com/book/9783540453406|Erhard Ploedereder; S. Tucker Taft; Randall L. Brukardt|20030806|Springer Nature
 Beginning Ada Programming: From Novice to Professional|https://isbndb.com/book/9781484254271|Shvets, Andrew T.|2019|Apress
 Beginning Ada Programming: From Novice to Professional|https://isbndb.com/book/9781484254288|Shvets, Andrew T.|2019|Apress
 Ada 2012 Reference Manual. Language and Standard Libraries|https://isbndb.com/book/9783642454196|L. Loh|20140114|Springer Nature
 Ada Lace and the Suspicious Artist (5) (An Ada Lace Adventure)|https://isbndb.com/book/9781534416888|Calandrelli, Emily|2019|Simon & Schuster Books for Young Readers
 Introduction to Ada Programming, 2nd Edition|https://isbndb.com/book/9781987673852|Shvets, Andrew T.|2018|CreateSpace Independent Publishing Platform
 Ada Lovelace: The Making of a Computer Scientist|https://isbndb.com/book/9781851244881|Hollings, Christopher and Martin, Ursula and Rice, Adrian|2018|Bodleian Library, University of Oxford
 Programming in Ada 2012 with a Preview of Ada 2022|https://isbndb.com/book/9781009181341|Barnes, John|2022|Cambridge University Press
 Programming in Ada 95 (2nd Edition) (International Computer Science Series)|https://isbndb.com/book/9780201342932|Barnes, John|1998|Addison-Wesley Professional
 Ada Programmer's Handbook and Language Reference Manual|https://isbndb.com/book/9780805325287|Gonzalez, Dean W.|1990|Addison-Wesley
 Ada 95 for C and C ++ Programmers (International Computer Science Series)|https://isbndb.com/book/9780201403633|Johnston, Simon|1997|Addison-Wesley
 Real Time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time C/POSIX (3rd Edition)|https://isbndb.com/book/9780201729887|Burns, Alan and Wellings, Andy|2001-04-05T00:00:01Z|Addison Wesley
 Programming Pioneer Ada Lovelace (STEM Trailblazer Bios)|https://isbndb.com/book/9781512413038|Bodden, Valerie|2016|LernerClassroom
 Concurrent and Real-Time Programming in Ada|https://isbndb.com/book/9780521866972|Burns, Alan and Wellings, Andy|2007|Cambridge University Press
 Programming and Problem Solving with Ada 95|https://isbndb.com/book/9780792376767|Nell B. Dale and Chip Weems and John W. McCormick|2000|Jones & Bartlett Learning
 Programming and Problem Solving with Ada 95|https://isbndb.com/book/9780763707927|Nell B. Dale and Chip Weems and John W. McCormick|2000|Jones & Bartlett Learning
 Building Parallel, Embedded, and Real-Time Applications with Ada|https://isbndb.com/book/9780521197168|McCormick, John W. and Singhoff, Frank and Hugues, Jérôme|2011-05-16T00:00:01Z|Cambridge University Press
 Programming in Ada 95 (International Computer Science Series)|https://isbndb.com/book/9780201877007|Barnes, John|1995|Pearson Education
 Programming in ADA (International computer science series)|https://isbndb.com/book/9780201137996|Barnes, J. G. P|1984T|Addison-Wesley
 Software Construction and Data Structures with Ada 95 (2nd Edition)|https://isbndb.com/book/9780201887952|Feldman, Michael B.|1996|Addison-Wesley
 Ada 95: The Craft of Object-Oriented Programming|https://isbndb.com/book/9780132303507|English, John|1996-10-24T00:00:01Z|Prentice Hall
 ADA Programming Success In A Day: Beginner’s guide to fast, easy and efficient learning of ADA programming|https://isbndb.com/book/9781515371328|Key, Sam|2015|CreateSpace Independent Publishing Platform
 Programming in ADA (International computer science series)|https://isbndb.com/book/9780201175660|Barnes, J. G. P|1989T|Addison-Wesley
 Introduction to Programming Using Ada|https://isbndb.com/book/9780134935294|Volper, Dennis and Katz, Martin D.|1990|Prentice Hall
 Programming in ADA|https://isbndb.com/book/9780471870890|Sincovec, Richard F. and Wiener, Richard|1983|Horizon Pubs & Distributors Inc
 File Structures With Ada (Benjamin Cummings Series in Computer Science)|https://isbndb.com/book/9780805304404|Miller, Nancy E. and Petersen, Charles G.|1990|Benjamin-Cummings Pub Co
 The Ada programming language: A guide for programmers|https://isbndb.com/book/9780130039217|Pyle, I. C|1981|Prentice Hall International
 Computer Programming: From ADA Lovelace to Mark Zuckerberg (Stem Stories)|https://isbndb.com/book/9781532115455|Doudna, Kelly|2018|Abdo Publishing
 Ada 95 Rationale: The Language - The Standard Libraries (Lecture Notes in Computer Science, 1247)|https://isbndb.com/book/9783540631439||1997|Springer
 Ada 2012 Rationale: The Language -- The Standard Libraries (Lecture Notes in Computer Science (8338))|https://isbndb.com/book/9783642452093|Barnes, John|2013|Springer
 The Programming Languages: Pascal, Modula, Chill and Ada|https://isbndb.com/book/9780137297566|Smedema, Kees|1983|Prentice Hall
 Programming in Ada Plus Language Reference Manual (International Computer Science Series)|https://isbndb.com/book/9780201565393|Barnes|1991|Addison-Wesley
 Rationale for the Design of the Ada Programming Language (The Ada Companion Series)|https://isbndb.com/book/9780521392679|Ichbiah, J.|1991|Cambridge University Press
 Concepts and Semantics of Programming Languages 2: Modular and Object-oriented Constructs with OCaml, Python, C++, Ada and Java|https://isbndb.com/book/9781786306029|Hardin, Therese and Jaume, Mathieu and Pessaux, Françis and Viguie Donzeau-Gouge, Veronique|2021|Wiley-ISTE
 Introduction to Ada|https://isbndb.com/book/9780412448102|Cooling, J. E. and Cooling, N.|1993-03-01T00:00:01Z|Chapman & Hall
 Reliable Software Technologies - Ada Europe 96: 1996 Ada-Europe International Conference on Reliable Software Technologies, Montreux, Switzerland, ... (Lecture Notes in Computer Science, 1088)|https://isbndb.com/book/9783540613176||1996|Springer
 Programming Embedded Systems With Ada|https://isbndb.com/book/9780137300105|Downes, Valerie A.|1982|Prentice Hall
 Ada, an advanced introduction: Including reference manual for the Ada programming language (Prentice-Hall software series)|https://isbndb.com/book/9780130039972|Gehani, Narain|1984T|Prentice-Hall
 Ada Minimanual to Accompany Programming Languages|https://isbndb.com/book/9780070053182|Benjamin|1996|McGraw-Hill College
 Problem Solving with ADA (Wiley Medical Publication)|https://isbndb.com/book/9780471100256|Mayoh, B. H.|1982|John Wiley & Sons
 Programming Languages: Paradigm and Practice: Ada Mini-Manual|https://isbndb.com/book/9780070025783|Appleby|1991-11-01|McGraw Hill Higher Education
 Distributed Ada: Developments and Experiences: Proceedings of the Distributed Ada '89 Symposium, University of Southampton, 11–12 December 1989|https://isbndb.com/book/9780521392518|Bishop, Judy M.|1990|Cambridge University Press
 Programming with Specifications: An Introduction to ANNA, A Language for Specifying Ada Programs (Monographs in Computer Science)|https://isbndb.com/book/9780387972541|Luckham, David|1990|Springer
 Programming and Problem Solving With Ada|https://isbndb.com/book/9780763702939|Nell B. Dale and Chip Weems and John W. McCormick|1996|Jones & Bartlett Learning
 Introduction to Abstract Data Types Using Ada|https://isbndb.com/book/9780130459497|Hillam, Bruce|1993|Prentice Hall
 Reference Manual for the ADA Programming Language|https://isbndb.com/book/9780719400971|Ichbiah, Jean D. & etc.|1983|Castle House Publications Ltd
 Building Parallel, Embedded, And Real-time Applications With Ada|https://isbndb.com/book/9781139500005|John W. McCormick and Frank Singhoff and Jérôme Hugues|2011|Cambridge University Press
 Ada Programming Language: Ada|https://isbndb.com/book/9781156382783|Books and LLC|2010|
 Ada|https://isbndb.com/book/9782212084214|Narain Gehani|1988|Eyrolles

## Publications about Ada from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 The Programming Language Ada Reference Manual American National Standards Institute, Inc. ANSI/MIL-STD-1815A-1983|https://www.semanticscholar.org/paper/0db8635ac2161a3eda9e69ccb3cbfcdcd443597f|G. Goos and J. Hartmanis and D. Barstow and W. Brauer and P. B. Hansen and D. Gries and D. Luckham and C. Moler and A. Pnueli and G. Seegmüller and J. Store and N. Wirth|1983|478|0
 Rationale for the design of the Ada programming language|https://www.semanticscholar.org/paper/5bd19234d0c46775d07fe9e98c157f4f6d3f13f3|J. Ichbiah and B. Krieg-Brueckner and B. Wichmann and J. Barnes and O. Roubine and J. Heliard|1979|423|16
 The Programming Language Ada|https://www.semanticscholar.org/paper/06e41d8bfca86aacba4779fa57533b0ad483fcd9|G. Goos and J. Hartmanis and W. Brauer and P. B. Hansen and D. Gries and C. Moler and G. Seegmüller and J. Store and N. Wirth|1983|146|1
 Programming with Specifications: An Introduction to ANNA, A Language for Specifying Ada Programs|https://www.semanticscholar.org/paper/c7cf8a74d165939386c2f2ba991788a4946b8f84|D. Luckham|1990|95|1
 The programming language ADA reference manual: Springer-Verlag (1981) pp 243, $7.90, DM 16.50|https://www.semanticscholar.org/paper/1fa0aff383fa6dc0aefcdcc166d320135c0d4e49|S. J. Young|1982|74|1
 "Review of ""The Ada programming language by Ian C. Pyle"", Prentice-Hall, Inc., Englewood Cliffs, N.J., 1981."|https://www.semanticscholar.org/paper/a31990b9ccfaac5a80229de9c27ff645a8f92c1c|P. Hilfinger|1982|53|0
 Reference Manual for the Ada Programming Language. Proposed Standard Document|https://www.semanticscholar.org/paper/c84bede16ef707b5ad9c00aad0bf9b0382b5ead5|J. Ichbiah and B. Krieg-Brueckner and B. Wichmann and H. Ledgard and J. Heliard|1980|49|0
 The ada programming language|https://www.semanticscholar.org/paper/c94126df9ae162da0ca25ffccdbd8c52cb362e55|S. Saib and R. E. Fritz|1983|46|2
 Guidance for the use of the Ada programming language in high integrity systems|https://www.semanticscholar.org/paper/c1efd5c0dcab29a50cdcc5bca94438957e50f9d4|B. Wichmann|1998|44|1
 The ada programming language|https://www.semanticscholar.org/paper/7c5fd21c5143acea788ddd1b6e8d93096785239f|I. Pyle|1985|42|1
 The ADA programming language: Pyle, I C, Prentice-Hall International (1981) pp 293, £8.95|https://www.semanticscholar.org/paper/189da10ccf871122d736fd3fa1d140c7f4e44554|S. J. Young|1982|39|0
 Object-Based Computing and the Ada Programming Language|https://www.semanticscholar.org/paper/093f95ae840dfc4bd827b6be63540490ecd359f4|G. Buzzard and T. Mudge|1985|34|0
 Using Ada as a programming language for robot-based manufacturing cells|https://www.semanticscholar.org/paper/fd8a692903506c79ce2f47cf00867d2f14265228|R. Volz and T. Mudge and D. A. Gal|1984|26|0
 Programming in Ada 2012|https://www.semanticscholar.org/paper/5754a4c9f110e8307609d2bc91533d9ecb82843c|J. Barnes|2014|17|0
 Why Ada is not just another programming language|https://www.semanticscholar.org/paper/51b9e742858f056959914fd7ee1150968a5eb922|J. Sammet|1983|17|0
 A Survey of Real-Time Performance Benchmarks for the Ada Programming Language|https://www.semanticscholar.org/paper/d50947c4e453bb3d420201bbec758c5201769477|P. Donohoe|1987|15|0
 Safe parallel programming in ada with language extensions|https://www.semanticscholar.org/paper/9c325ccd1c05de79bbcdee1cdf0de80e5d0396c8|S. Taft and B. Moore and L. M. Pinho and S. Michell|2014|13|0
 Implementing Ada as the primary programming language|https://www.semanticscholar.org/paper/14081e6ebabd4b930f1363603693c3fbdfe4a30c|Howard Evans and W. Patterson|1985|9|1
 Converging safety and high-performance domains: Integrating OpenMP into Ada|https://www.semanticscholar.org/paper/ccd833915d5d2cace0c6a0d34760b60eab5a393e|Sara Royuela and L. M. Pinho and E. Quiñones|2018|8|0
 The importance of Ada programming support environments|https://www.semanticscholar.org/paper/e8416288ccd237bc5f36258cd2e32bd7a46edefa|T. Standish|1899|7|0
 Ada 95: An Effective Concurrent Programming Language|https://www.semanticscholar.org/paper/a5dfb43a52ea2d24ef3494facc711fef4d1ff1a4|A. Burns and A. Wellings|1996|7|0
 Using Ada as the first programming language: a retrospective|https://www.semanticscholar.org/paper/b3f100b2320a6417d4bef3fa0ef13f5558e2202c|R. K. Allen and D. Grant and R. Smith|1996|6|0
 Self-assessment procedure VIII: a self-assessment procedure dealing with the programming language Ada|https://www.semanticscholar.org/paper/d6f3c64b6625b582f3603be26b39dc0dd9352bea|P. Wegner|1981|6|0
 Built-in reliability in the Ada programming language|https://www.semanticscholar.org/paper/7668ba4ae828a5b23e074a61a230edbbe54c5aa4|T. Wu|1990|6|1
 Towards a Runtime Verification Framework for the Ada Programming Language|https://www.semanticscholar.org/paper/627769c65b4bac6649b4d27cd3a22dd8ad6c294c|A. Pedro and D. Pereira and L. M. Pinho and J. Pinto|2014|6|0
 Engineering VAX Ada for a multi-language programming environment|https://www.semanticscholar.org/paper/4abecab1498a0b7b7b436ebf08b31a1a04e3664a|C. Mitchell|1986|5|0
 Ada as a language for programming clusters of SMPs|https://www.semanticscholar.org/paper/33d24df6203b4bc474d0afedd756908094c402d2|Przemysław Stpiczyński|2003|5|1
 TCOL Ada : an intermediate representation for the DOD standard programming language|https://www.semanticscholar.org/paper/3c67231ccae5f9cd14d681fb2a5835f03e1db3ff|B. Schatz|1979|5|0
 Experience with Ada as a first programming language|https://www.semanticscholar.org/paper/a837805d46632f54180fe817c444aa1003608d73|Atanas Radensky and Emilia Zivkova and V. Petrova and Rumiana Lesseva and Christina Zascheva|1988|5|0
 Some comments on ADA as a real-time programming language|https://www.semanticscholar.org/paper/fd95d78b0a63c2e2cb47663c42fb38e624bb9959|A. Mahjoub|1981|5|0
 Can Ada be used as a primary programming language?: major problems and their solutions by means of subsets|https://www.semanticscholar.org/paper/0156665673118b67b8bb9e7cfb0a41aa22771092|Atanas Radensky|1990|5|0
 Is Ada an object oriented programming language?|https://www.semanticscholar.org/paper/c2ce45f92d0d58ddc890af5d39c3154cff2c0703|H. Touati|1987|5|0
 Ada programming language for numerical computation|https://www.semanticscholar.org/paper/fcf479a134e593ff4a3eb783e8a9aa3957757938|T. Wu|1994|5|0
 The use of the Ada language for programming a distributed system|https://www.semanticscholar.org/paper/a8ff42da6c1b74bae3b975a3271ea31644316409|V. Downes and S. Goldsack|1980|4|1
 Types in the Programming Language Ada|https://www.semanticscholar.org/paper/1afeaecca6f9c07f6909fee5894203b3dbc54d03|B. Krieg-Brückner|1982|4|0
 Information Technology. Programming Language. The SQL Ada Module Description Language (SAMeDL).|https://www.semanticscholar.org/paper/d5067e3310269f48c6035eee6db9d4e0e52f7b6e|M. Graham|1995|4|1
 ADDS - A Dialogue Development System for the Ada Programming Language|https://www.semanticscholar.org/paper/6669b65c09d65260d81ecf52b8658bed78f0655b|A. Burns and J. Robinson|1986|4|0
 The Evolution of Real-Time Programming Revisited: Programming the Giotto Model in Ada 2005|https://www.semanticscholar.org/paper/c01cde4d526b8709ed928528407923db38c0a7d7|A. Wellings and A. Burns|2010|3|0
 AdaStreams: A Type-Based Programming Extension for Stream-Parallelism with Ada 2005|https://www.semanticscholar.org/paper/f8c945e0eee3e1ab9373f31cad42c6c4c77b9456|Jingun Hong and Kirak Hong and Bernd Burgstaller and Johann Blieberger|2010|3|0
 VADS APSE: an integrated Ada programming support environment|https://www.semanticscholar.org/paper/43bbe6388f88d2f0f43eaf93055a4c3c6a3b46a6|E. Matthews and G. Burns|1991|3|0
 Some short comments on the definition and the documentation of the ADA programming language|https://www.semanticscholar.org/paper/84a27f3e956cbcd7aa367a00e61e8042802e999c|R. Nicolescu|1980|3|0
 Rationale For The Design Of The Ada Programming Language|https://www.semanticscholar.org/paper/8369c68a3c6ac543c134a0b1a5f963acdd62eada|S. Eberhart|2016|3|1
 IAda: A language for robot programming based on Ada|https://www.semanticscholar.org/paper/9a3f9e15e26b683b05c8c217f7a07c015b9d2803|D. Duhaut and P. Bidaud and D. Fontaine|1992|2|0
 The current programming language standards scene VIIIA: ADA|https://www.semanticscholar.org/paper/eb47d46be8baa713fcff66e57b49913fe74ef813|A. McGettrick|1983|2|0
 Why the Expressive Power of Programming Languages Such as Ada Is Needed for Future Cyber Physical Systems|https://www.semanticscholar.org/paper/acf36a8fd5e2952ae9d72212984c3c15c3daebce|A. Burns|2016|2|0
 Proposals for enhancement of the Ada programming language|https://www.semanticscholar.org/paper/caeecffdc6baeb1440fb40466206636d307b9563|Mats Weber|1994|2|0
 "Comments on the suggested implementation of tasking facilities in the ""rationale for the design of the ADA programming language"""|https://www.semanticscholar.org/paper/574e48b95a03cce88e8a1e5b37448ec1bba7baa8|K. Tai and K. Garrard|1980|2|0
 Teaching 'Concepts of Programming Languages' with Ada|https://www.semanticscholar.org/paper/b5d480c144de0f4f5a7f9c7bd9b5b46fda97f705|T. Tempelmeier|2012|1|0
 Ada programming language standardization|https://www.semanticscholar.org/paper/de9b22cf99188af170f37770f8160c6819240b6c|Paul M. Cohen|1981|1|0
 From Byron to the Ada Programming Language|https://www.semanticscholar.org/paper/e73889075e3ca97186208255c7a359c106f527c6|J. Barnes|2015|1|0

keyboardNav swift.html rust.html

import ../footer.scroll
