import header.scroll

title halide

title halide - Programming language
 hidden

html
 <a class="prevLang" href="autohotkey.html">&lt;</a>
 <a class="nextLang" href="g-code.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/halide.pldb

startColumns 4

html <div class="quickLinks"><a href="http://halide-lang.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/halide/Halide"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a></div>

* halide is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2010.
 link ../lists/languages.html?filter=2010 2010

kpiTable
 #319 <span title="TotalRank: 742 Jobs: 103 Users: 132 Facts: 507 Links: 972">on PLDB</span>
 13 Years Old
 7.9k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging halide">Books</span>
 12 <span title="Academic publications about or leveraging halide">Papers</span>

* a language for fast, portable computation on images and tensors

- halide website
 http://halide-lang.org/
- halide is developed on <a href="https://github.com/halide/Halide">GitHub</a> and has 4,985 stars
- halide first developed in <a href="../lists/originCommunities.html#httpsGithubComHalide">https://github.com/halide</a>
- <a href="http://halide-lang.org/">halide-lang.org</a> was registered in 2012
- Read more about halide on the web: 1.
 https://news.ycombinator.com/item?id=7544855 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/halide">Improve our halide file</a>

html <br>

codeWithHeader Example from the web:
 Func blur_3x3(Func input) {
  Func blur_x, blur_y;
  Var x, y, xi, yi;
 
  // The algorithm - no storage or order
  blur_x(x, y) = (input(x-1, y) + input(x, y) + input(x+1, y))/3;
  blur_y(x, y) = (blur_x(x, y-1) + blur_x(x, y) + blur_x(x, y+1))/3;
 
  // The schedule - defines order, locality; implies storage
  blur_y.tile(x, y, xi, yi, 256, 32)
        .vectorize(xi, 8).parallel(y);
  blur_x.compute_at(blur_y, x).vectorize(x, 8);
 
  return blur_y;
 }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Publications about halide from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Automatically scheduling halide image processing pipelines|https://www.semanticscholar.org/paper/9b240a87b11d085641d6640f73cc3cc2d678e305|Ravi Teja Mullapudi and Andrew Adams and Dillon Sharlet and Jonathan Ragan-Kelley and Kayvon Fatahalian|2016|133|17
 Learning to optimize halide with tree search and random programs|https://www.semanticscholar.org/paper/f90a7bc396e205b204d5d6066a10162f84b128f9|Andrew Adams and Karima Ma and Luke Anderson and Riyadh Baghdadi and Tzu-Mao Li and Michaël Gharbi and Benoit Steiner and Steven Johnson and Kayvon Fatahalian and F. Durand and Jonathan Ragan-Kelley|2019|128|19
 Differentiable programming for image processing and deep learning in halide|https://www.semanticscholar.org/paper/c1c8d15520d84ed6d9a701e18627ded4d8f1eb2a|Tzu-Mao Li and Michaël Gharbi and Andrew Adams and F. Durand and Jonathan Ragan-Kelley|2018|78|8
 Halide|https://www.semanticscholar.org/paper/93bb58cfdd34521c59e593d8f4332a75a18e3448|Jonathan Ragan-Kelley and Andrew Adams and Dillon Sharlet and Connelly Barnes and Sylvain Paris and M. Levoy and S. Amarasinghe and F. Durand|2017|48|0
 Helium: lifting high-performance stencil kernels from stripped x86 binaries to halide DSL code|https://www.semanticscholar.org/paper/62e3781d9aa0a2dc5845f5cb06466ba9e83f9241|Charith Mendis and Jeffrey Bosboom and Kevin Wu and S. Kamil and Jonathan Ragan-Kelley and Sylvain Paris and Qin Zhao and Saman P. Amarasinghe|2015|28|3
 Automatically translating image processing libraries to halide|https://www.semanticscholar.org/paper/8a52c0852c1a38c9f24a14704e1fb749b55ddbba|Maaz Bin Safeer Ahmad and Jonathan Ragan-Kelley and Alvin Cheung and S. Kamil|2019|21|1
 Extending Halide to Improve Software Development for Imaging DSPs|https://www.semanticscholar.org/paper/213533b755b70e4754b2f11f39c766db17aa71a9|Sander Vocke and H. Corporaal and Roel Jordans and R. Corvino and Rick J. M. Nas|2017|8|0
 Easy optimization of image transformation using sFFT algorithm with HALIDE language|https://www.semanticscholar.org/paper/cc86e7bc4031e7ce45d3af516ba15c7345e146b4|C. Thirumoorthi and T. Karthikeyan|2014|7|0
 Accelerate DNN Performance with Sparse Matrix Compression in Halide|https://www.semanticscholar.org/paper/0056c33177043161aaf81565191dac14bb8c5c6a|Chao-Lin Lee and Chen-Ting Chao and Jenq-Kuen Lee and Ming-Yu Hung and Chung-Wen Huang|2019|6|0
 Locality-Aware Scheduling for Stencil Code in Halide|https://www.semanticscholar.org/paper/58f7375ba591a446d5ff44d08cf9aaf143441d8b|Shih-Wei Liao and Sheng-Jun Tsai and Chieh-Hsun Yang and C. Lo|2016|3|0
 Sparse-Matrix Compression Primitives with OpenCL Framework to Support Halide|https://www.semanticscholar.org/paper/2fa067b5a7bccbb6abcd5a813416fee9202f2989|Chao-Lin Lee and Chen-Ting Chao and Jenq-Kuen Lee and Chung-Wen Huang and Ming-Yu Hung|2019|3|0
 Halide and OpenMP for generating high-performance recursive filters|https://www.semanticscholar.org/paper/e14b46621e0c04bd4b877e11a71d76b56e1396d7|Yuta Tsuji and Norishige Fukushima|2020|1|0

keyboardNav autohotkey.html g-code.html

import ../footer.scroll
