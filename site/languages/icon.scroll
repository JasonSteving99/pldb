import header.scroll

title Icon

title Icon - Programming language
 hidden

html
 <a class="prevLang" href="x10.html">&lt;</a>
 <a class="nextLang" href="turing.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/icon.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.cs.arizona.edu/icon"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/Icon_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://www2.cs.arizona.edu/icon/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Icon is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1977 by Ralph Griswold.
 link ../lists/languages.html?filter=1977 1977
 link ../lists/creators.html#ralphGriswold Ralph Griswold

kpiTable
 #202 <span title="TotalRank: 544 Jobs: 103 Users: 999 Facts: 205 Links: 236">on PLDB</span>
 46 Years Old
 271 <span title="Crude user estimate from a linear model.">Users</span>
 3 <span title="Books about or leveraging Icon">Books</span>
 19 <span title="Academic publications about or leveraging Icon">Papers</span>

* Try now: <a href="https://riju.codes/icon">Riju</a> · <a href="https://tio.run/#icon">TIO</a>

* Icon is a very high-level programming language featuring goal-directed execution and many facilities for managing strings and textual patterns. It is related to SNOBOL and SL5, string processing languages. Icon is not object-oriented, but an object-oriented extension called Idol was developed in 1996 which eventually became Unicon.. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Icon_(programming_language) Read more on Wikipedia...

- Icon website
 http://www.cs.arizona.edu/icon
- Icon Wikipedia page
 https://en.wikipedia.org/wiki/Icon_(programming_language)
- Icon docs
 https://www2.cs.arizona.edu/icon/
- Icon first developed in <a href="../lists/originCommunities.html#theUniversityOfArizona">The University of Arizona</a>
- file extensions for Icon include icon and ICON
- Explore Icon snippets on <a href="http://www.rosettacode.org/wiki/Category:Icon">Rosetta Code</a>
- Icon on HOPL
 https://hopl.info/showlanguage.prx?exp=510
- Icon appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Icon Ubuntu package
 https://packages.ubuntu.com/jammy/icont
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/unicon.py">syntax highlighting</a> for Icon
- Icon appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- See also: (9 related languages)<a href="snobol.html">SNOBOL</a>, <a href="algol.html">Algol</a>, <a href="python.html">Python</a>, <a href="unicon.html">Unicon</a>, <a href="c.html">C</a>, <a href="pascal.html">Pascal</a>, <a href="java.html">Java</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="clu.html">CLU</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/icon">Improve our Icon file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/icon'>Riju</a>:
 procedure main ()
     write(&quot;Hello, world!&quot;)
 end
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/i/Icon.icn'>hello-world</a>:
 procedure main()
     write(&quot;Hello World&quot;);
 end

codeWithHeader Example from <a href='http://helloworldcollection.de/#Icon'>the Hello World Collection</a>:
 # Hello world in Icon (http://www.cs.arizona.edu/icon/)
 
 procedure main()
     write(&quot;Hello world&quot;)
 end
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Icon_(programming_language)'>Wikipedia</a>:
 procedure main()
      s := &quot;Mon Dec 8&quot;
      s ? write(Mdate() | &quot;not a valid date&quot;)
  end
  # Define a matching function that returns
  # a string that matches a day month dayofmonth
  procedure Mdate()
  # Define some initial values
  static dates
  static days
  initial {
         days := [&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thr&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;]
         dates := [&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,
                   &quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;]
  }
  every suspend   (retval &lt;-  tab(match(!days)) ||     # Match a day
                              =&quot; &quot; ||                  # Followed by a blank
                              tab(match(!dates)) ||    # Followed by the month
                              =&quot; &quot; ||                  # Followed by a blank
                              matchdigits(2)           # Followed by at least 2 digits
                  ) &amp;
                  (=&quot; &quot; | pos(0) ) &amp;                   # Either a blank or the end of the string
                  retval                               # And finally return the string
  end
  # Matching function that returns a string of n digits
  procedure matchdigits(n)
      suspend (v := tab(many(&amp;digits)) &amp; *v &lt;= n) &amp; v
  end

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \b([+-]?[0-9]+[KMGTPkmgtp]?)\b
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # [+-]?[0-9]*\.([0-9]*)([Ee][+-]?[0-9]*)?
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # \b([+-]?([2-9]|[12][0-9]|3[0-6])[rR][0-9a-zA-Z]+)\b
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">✓</span>
  Token "
  Example
   "Hello world"
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">✓</span>
  Token write
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   # A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token #
  Example
   # A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Icon from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 The Icon Book: Visual Symbols for Computer Systems and Documentation|https://isbndb.com/book/9780471599005|Horton, William|1994|Wiley
 Graphics Programming In Icon|https://isbndb.com/book/9781573980098|Ralph E. Griswold and Gregg M. Townsend and Clinton L. Jeffery|1998|Peer To Peer Communications
 The Icon Programming Language (prentice-hall Software Series)|https://isbndb.com/book/9780134497778|Ralph E Griswold|1983|Prentice-hall

## Publications about Icon from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Generators in Icon|https://www.semanticscholar.org/paper/58e38b184055909109cc30da6ce3f1a002eae242|R. Griswold and D. R. Hanson and John T. Korb|1981|52|2
 A portable storage management system for the icon programming language|https://www.semanticscholar.org/paper/832ce1c8ffed3006738fe3df7ee22e017e3f09c9|D. R. Hanson|1980|27|3
 The icon programming language: an overview|https://www.semanticscholar.org/paper/208d59a0d3972f13928d9faccdaa349e4994765a|R. Griswold and D. R. Hanson and John T. Korb|1979|21|1
 Measuring the Performance and Behavior of Icon Programs|https://www.semanticscholar.org/paper/44524266fe1762db18c784521cd02dc8937b812b|Cary A. Coutant and R. Griswold and D. R. Hanson|1983|20|0
 The Evaluation of Expressions in Icon|https://www.semanticscholar.org/paper/e407c3e678d961acc9762efc61b3169dbd4998f4|R. Griswold|1982|15|1
 A framework for execution monitoring in icon|https://www.semanticscholar.org/paper/219ecaedc38688bb39af5bdc2ea87ee5c9c5ee9c|C. Jeffery and R. Griswold|1994|13|2
 The implementation of generators and goal‐directed evaluation in icon|https://www.semanticscholar.org/paper/8911415a3dc4dc4255c19aba2597eaabf3a1de10|S. Wampler and R. Griswold|1983|11|0
 String Scanning in the Icon Programming Language|https://www.semanticscholar.org/paper/a160b5ee89bd7424acf5fe64b6487284484e2f1e|R. Griswold|1990|11|0
 An optimizing compiler for the icon programming language|https://www.semanticscholar.org/paper/ac4ad25831b1d1d26a4498610f070a7481f97bd3|Kenneth Walker and R. Griswold|1992|11|1
 History of the Icon programming language|https://www.semanticscholar.org/paper/b373998ddc18275d1204d3bc8506592c27441512|R. Griswold and Madge T. Griswold|1993|10|0
 A recursive interpreter for the Icon programming language|https://www.semanticscholar.org/paper/8cae0300ac4db01589d408e586210ef83b150ac5|Janalee O'Bagy and R. Griswold|1987|10|0
 The design and implementation of dynamic hashing for sets and tables in icon|https://www.semanticscholar.org/paper/737ddd66e85e40fed99fb00ef0819dd08b617778|W. Griswold and Gregg M. Townsend|1993|9|1
 A new implementation of the Icon language|https://www.semanticscholar.org/paper/6d475fd00ff3a9ac0e4435261ed3de8df13067a7|T. Proebsting and Gregg M. Townsend|2000|9|1
 Co-Expressions in Icon|https://www.semanticscholar.org/paper/9ed1304db28f6a53dbad488b8c40b6d878e00295|S. Wampler and R. Griswold|1983|6|0
 Logicon: An integration of prolog into icon|https://www.semanticscholar.org/paper/9f925f796da32e45b2b92b568ed90d08c29aa9fd|G. Lapalme and S. Chapleau|1986|6|1
 Expression evaluation in the icon programming language|https://www.semanticscholar.org/paper/0f3d8f0d864c9faeefdd02beeadbfa759b969c17|R. Griswold|1984|5|0
 Modeling software tools with ICON|https://www.semanticscholar.org/paper/877572d7c81d2113483a706f902edf318bf41c4a|O. Fonorow|1988|4|0
 The Icon programming language a new approach to high-level string processing|https://www.semanticscholar.org/paper/61791f3b783ed9743b793a191e09dd34e32c3cae|R. Griswold|1979|2|0
 Garbage collection alternatives for icon|https://www.semanticscholar.org/paper/08a9c225357dc043c45c147293488b402724e4c5|M. Fernández and D. R. Hanson|1992|1|1

keyboardNav x10.html turing.html

import ../footer.scroll
