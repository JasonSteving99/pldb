import header.scroll

title Julia

title Julia - Programming language
 hidden

html
 <a class="prevLang" href="lua.html">&lt;</a>
 <a class="nextLang" href="sas.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/julia.pldb

startColumns 4

html <div class="quickLinks"><a href="http://julialang.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://github.com/JuliaLang/julia"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a> <a href="https://en.wikipedia.org/wiki/Julia_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://reddit.com/r/Julia"><svg role="img" width="32px" height="32px" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"><path d="M 18.65625 4 C 16.558594 4 15 5.707031 15 7.65625 L 15 11.03125 C 12.242188 11.175781 9.742188 11.90625 7.71875 13.0625 C 6.945313 12.316406 5.914063 12 4.90625 12 C 3.816406 12 2.707031 12.355469 1.9375 13.21875 L 1.9375 13.25 L 1.90625 13.28125 C 1.167969 14.203125 0.867188 15.433594 1.0625 16.65625 C 1.242188 17.777344 1.898438 18.917969 3.03125 19.65625 C 3.023438 19.769531 3 19.882813 3 20 C 3 22.605469 4.574219 24.886719 6.9375 26.46875 C 9.300781 28.050781 12.488281 29 16 29 C 19.511719 29 22.699219 28.050781 25.0625 26.46875 C 27.425781 24.886719 29 22.605469 29 20 C 29 19.882813 28.976563 19.769531 28.96875 19.65625 C 30.101563 18.917969 30.757813 17.777344 30.9375 16.65625 C 31.132813 15.433594 30.832031 14.203125 30.09375 13.28125 L 30.0625 13.25 C 29.292969 12.386719 28.183594 12 27.09375 12 C 26.085938 12 25.054688 12.316406 24.28125 13.0625 C 22.257813 11.90625 19.757813 11.175781 17 11.03125 L 17 7.65625 C 17 6.675781 17.558594 6 18.65625 6 C 19.175781 6 19.820313 6.246094 20.8125 6.59375 C 21.65625 6.890625 22.75 7.21875 24.15625 7.3125 C 24.496094 8.289063 25.414063 9 26.5 9 C 27.875 9 29 7.875 29 6.5 C 29 5.125 27.875 4 26.5 4 C 25.554688 4 24.738281 4.535156 24.3125 5.3125 C 23.113281 5.242188 22.246094 4.992188 21.46875 4.71875 C 20.566406 4.402344 19.734375 4 18.65625 4 Z M 16 13 C 19.152344 13 21.964844 13.867188 23.9375 15.1875 C 25.910156 16.507813 27 18.203125 27 20 C 27 21.796875 25.910156 23.492188 23.9375 24.8125 C 21.964844 26.132813 19.152344 27 16 27 C 12.847656 27 10.035156 26.132813 8.0625 24.8125 C 6.089844 23.492188 5 21.796875 5 20 C 5 18.203125 6.089844 16.507813 8.0625 15.1875 C 10.035156 13.867188 12.847656 13 16 13 Z M 4.90625 14 C 5.285156 14 5.660156 14.09375 5.96875 14.25 C 4.882813 15.160156 4.039063 16.242188 3.53125 17.4375 C 3.277344 17.117188 3.125 16.734375 3.0625 16.34375 C 2.953125 15.671875 3.148438 14.976563 3.46875 14.5625 C 3.472656 14.554688 3.464844 14.539063 3.46875 14.53125 C 3.773438 14.210938 4.3125 14 4.90625 14 Z M 27.09375 14 C 27.6875 14 28.226563 14.210938 28.53125 14.53125 C 28.535156 14.535156 28.527344 14.558594 28.53125 14.5625 C 28.851563 14.976563 29.046875 15.671875 28.9375 16.34375 C 28.875 16.734375 28.722656 17.117188 28.46875 17.4375 C 27.960938 16.242188 27.117188 15.160156 26.03125 14.25 C 26.339844 14.09375 26.714844 14 27.09375 14 Z M 11 16 C 9.894531 16 9 16.894531 9 18 C 9 19.105469 9.894531 20 11 20 C 12.105469 20 13 19.105469 13 18 C 13 16.894531 12.105469 16 11 16 Z M 21 16 C 19.894531 16 19 16.894531 19 18 C 19 19.105469 19.894531 20 21 20 C 22.105469 20 23 19.105469 23 18 C 23 16.894531 22.105469 16 21 16 Z M 21.25 21.53125 C 20.101563 22.597656 18.171875 23.28125 16 23.28125 C 13.828125 23.28125 11.898438 22.589844 10.75 21.65625 C 11.390625 23.390625 13.445313 25 16 25 C 18.554688 25 20.609375 23.398438 21.25 21.53125 Z"/></svg></a> <a href="https://twitter.com/julialanguage"><svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/></svg></a> <a href="https://docs.julialang.org/en/v1/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Julia is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2012 by Jeff Bezanson and Alan Edelman and Stefan Karpinski and Viral B. Shah.
 link ../lists/languages.html?filter=2012 2012
 link ../lists/creators.html#jeffBezanson Jeff Bezanson
 link ../lists/creators.html#alanEdelman Alan Edelman
 link ../lists/creators.html#stefanKarpinski Stefan Karpinski
 link ../lists/creators.html#viralBShah Viral B. Shah

kpiTable
 #35 <span title="TotalRank: 116 Jobs: 75 Users: 34 Facts: 27 Links: 55">on PLDB</span>
 11 Years Old
 81.9k <span title="Crude user estimate from a linear model.">Users</span>
 22 <span title="Books about or leveraging Julia">Books</span>
 36 <span title="Academic publications about or leveraging Julia">Papers</span>
 54k <span title="Julia repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/julia">Riju</a> Â· <a href="https://tio.run/#julia">TIO</a>

monacoEditor julia
 println("Hello, world!")
 

* Julia is a high-level dynamic programming language designed to address the needs of high-performance numerical analysis and computational science, without the typical need of separate compilation to be fast, while also being effective for general-purpose programming, web use or as a specification language. Distinctive aspects of Julia's design include a type system with parametric polymorphism and types in a fully dynamic programming language and multiple dispatch as its core programming paradigm. It allows concurrent, parallel and distributed computing, and direct calling of C and Fortran libraries without glue code. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Julia_(programming_language) Read more on Wikipedia...

- Julia website
 http://julialang.org/
- Julia downloads page
 https://julialang.org/downloads/
- Julia Wikipedia page
 https://en.wikipedia.org/wiki/Julia_(programming_language)
- Julia is developed on <a href="https://github.com/JuliaLang/julia">GitHub</a> and has 41,515 stars
- Julia docs
 https://docs.julialang.org/en/v1/
- There are at least 53,507 Julia repos on <a href="https://github.com/search?q=language:Julia">GitHub</a>
- Julia first developed in <a href="../lists/originCommunities.html#httpsGithubComJuliaLang">https://github.com/JuliaLang</a>
- PLDB estimates there are currently 85 job openings for Julia programmers.
- file extensions for Julia include jl
- Julia on Twitter
 https://twitter.com/julialanguage
- The  Google BigQuery Public Dataset GitHub snapshot shows 3k users using Julia in 6k repos on <a href="https://api.github.com/search/repositories?q=language:Julia">GitHub</a>
- Check out the 36 <a href="https://www.meetup.com/topics/julia/">Julia meetup groups</a> on Meetup.com.
- There are 20,624 members in the <a href="https://reddit.com/r/Julia">Julia subreddit</a>
- There are 700 <a href="https://projecteuler.net/language=Julia">Project Euler</a> users using Julia
- In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Julia programmers reported a median salary of $65,228. 1% of respondents reported using Julia. 1,068 programmers reported using Julia, and 2,445 said they wanted to use it
- Explore Julia snippets on <a href="http://www.rosettacode.org/wiki/Category:Julia">Rosetta Code</a>
- Julia ranks #35 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- Julia Ubuntu package
 https://packages.ubuntu.com/jammy/julia
- Julia <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/JuliaEditorSupport/LanguageServer.jl">implementation</a>
- <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/julia">package</a> for syntax highlighting Julia
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/julia">package</a> for syntax highlighting Julia
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/julia.py">syntax highlighting</a> for Julia
- GitHub supports <a href="https://github.com/JuliaEditorSupport/atom-language-julia" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Julia
- Julia appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/JuliaLang/IJulia.jl">Kernel</a> for Julia
- There is a <a href="https://pkg.julialang.org/">central package repository</a> for Julia
- Release Notes for Julia
 https://docs.julialang.org/en/v1/NEWS/
- Official Blog page for Julia
 https://julialang.org/blog/
- Events page for Julia
 https://discourse.julialang.org/c/community/events/56
- Frequently Asked Questions for Julia
 https://discourse.julialang.org/faq
- Indeed.com has 85 matches for <a href="https://www.indeed.com/jobs?q=julia engineer">"julia engineer"</a>.
- See also: (28 related languages)<a href="c.html">C</a>, <a href="scheme.html">Scheme</a>, <a href="llvmir.html">LLVM IR</a>, <a href="fortran.html">Fortran</a>, <a href="ia-32.html">IA-32</a>, <a href="linux.html">Linux</a>, <a href="freebsd.html">FreeBSD</a>, <a href="lisp.html">Lisp</a>, <a href="lua.html">Lua</a>, <a href="mathematica.html">Mathematica</a>, <a href="wolfram.html">Wolfram Language</a>, <a href="matlab.html">MATLAB</a>, <a href="perl.html">Perl</a>, <a href="python.html">Python</a>, <a href="r.html">R</a>, <a href="ruby.html">Ruby</a>, <a href="regex.html">Regular Expressions</a>, <a href="unicode.html">Unicode</a>, <a href="utf-8.html">UTF-8</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="dylan.html">Dylan</a>, <a href="algol.html">Algol</a>, <a href="fortress.html">Fortress</a>, <a href="html.html">HTML</a>, <a href="xml.html">XML</a>, <a href="json.html">JSON</a>, <a href="arm.html">ARM</a>, <a href="powerpc.html">PowerPC</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/julia">Improve our Julia file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/julia'>Riju</a>:
 println(&quot;Hello, world!&quot;)
 

codeWithHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/j/Julia.jl'>hello-world</a>:
 println(&quot;Hello World&quot;)
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Julia'>the Hello World Collection</a>:
 # Hello world in Julia
 
 println(&quot;Hello, World!&quot;)

codeWithHeader Example from <a href='https://github.com/JuliaEditorSupport/atom-language-julia'>Linguist</a>:
 #!/usr/bin/env julia
 
 # From https://github.com/JoshCheek/language-sampler-for-fullpath/blob/b766dcdbd249ec63516f491390a75315e78cba95/julia/fullpath
 help_screen = &quot;&quot;&quot;
 usage: fullpath *[relative-paths] [-c]
 
   Prints the fullpath of the paths
   If no paths are given as args, it will read them from stdin
 
   If there is only one path, the trailing newline is omitted
 
   The -c flag will copy the results into your pasteboard
 &quot;&quot;&quot;
 
 help  = false
 copy  = false
 dir   = pwd()
 paths = []
 
 for arg = ARGS
   if arg == &quot;-h&quot; || arg == &quot;--help&quot;
     help = true
   elseif arg == &quot;-c&quot; || arg == &quot;--copy&quot;
     copy = true
   elseif arg != &quot;&quot;
     push!(paths, arg)
   end
 end
 
 if help
   print(help_screen)
   exit()
 end
 
 function notempty(string)
   return !isempty(string)
 end
 
 if length(paths) == 0
   paths = filter(notempty, map(chomp, readlines()))
 end
 
 function print_paths(stream, paths)
   if length(paths) == 1
     path = paths[1]
     print(stream, &quot;$dir/$path&quot;)
   else
     for path = paths
       println(stream, &quot;$dir/$path&quot;)
     end
   end
 end
 
 if copy
   read, write, process = readandwrite(`pbcopy`)
   print_paths(write, paths)
   close(write)
 end
 
 print_paths(STDOUT, paths)
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Julia_(programming_language)'>Wikipedia</a>:
 julia&gt; p(x) = 2x^2 + 1; f(x, y) = 1 + 2p(x)y
 julia&gt; println(&quot;Hello world!&quot;, &quot; I&#39;m on cloud &quot;, f(0, 4), &quot; as Julia supports recognizable syntax!&quot;)
 Hello world! I&#39;m on cloud 9 as Julia supports recognizable syntax!

## <a href="../lists/keywords.html?filter=julia">Keywords</a> in Julia
* begin while if for try return break continue function macro quote let local global const do struct abstract typealias bitstype type immutable module baremodule using import export importall end else catch finally true false

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../features/hasBinaryNumbers.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # 0b[01]+((_[01]+)+)?
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # (\d+((_\d+)+)?\.(?!\.)(\d+((_\d+)+)?)?|\.\d+((_\d+)+)?)([eEf][+-]?[0-9]+)?
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # 0x[a-fA-F0-9]+((_[a-fA-F0-9]+)+)?
 row
  Feature Octals
  FeatureLink ../features/hasOctals.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # 0o[0-7]+((_[0-7]+)+)?
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Constants
  FeatureLink ../features/hasConstants.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature While Loops
  FeatureLink ../features/hasWhileLoops.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">â</span>
  Token #
  Example
   # A comment
 row
  Feature Module Pattern
  FeatureLink ../features/hasModules.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   module MyModule
   using Lib
   
   using BigLib: thing1, thing2
   
   import Base.show
   
   export MyType, foo
   
   struct MyType
       x
   end
   
   bar(x) = 2x
   foo(a::MyType) = bar(a.x) + 1
   
   show(io::IO, a::MyType) = print(io, "MyType $(a.x)")
   end
 row
  Feature Pipes
  FeatureLink ../features/hasPipes.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   [1,2,3] |> (y -> f(3, y))
 row
  Feature Mixins
  FeatureLink ../features/hasMixins.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # Including the same code in different modules provides mixin-like behavior.
   module Normal
   include("mycode.jl")
   end
   
   module Testing
   include("safe_operators.jl")
   include("mycode.jl")
   end
 row
  Feature File Imports
  FeatureLink ../features/hasImports.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # Files and file names are mostly unrelated to modules; modules are associated only with module expressions.
   # One can have multiple files per module, and multiple modules per file:
   using MyModule
   using MyModule: x, p
   import MyModule
   import MyModule.x, MyModule.p
   import MyModule: x, p
   module Foo
   include("file1.jl")
   include("file2.jl")
   end
 row
  Feature Print() Debugging
  FeatureLink ../features/hasPrintDebugging.html
  Supported <span class="hasFeature">â</span>
  Token println
  Example
   print("hello world")
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   80766866
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">â</span>
  Token true false
  Example
 row
  Feature Garbage Collection
  FeatureLink ../features/hasGarbageCollection.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">â</span>
  Token #= =#
  Example
   #=
   A comment.
   =#
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # This is a comment
 row
  Feature Unicode Identifiers
  FeatureLink ../features/hasUnicodeIdentifiers.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   Î´ = 0.00001
 row
  Feature Multiple Dispatch
  FeatureLink ../features/hasMultipleDispatch.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   collide_with(x::Asteroid, y::Asteroid) = ... # deal with asteroid hitting asteroid
   collide_with(x::Asteroid, y::Spaceship) = ... # deal with asteroid hitting spaceship
   collide_with(x::Spaceship, y::Asteroid) = ... # deal with spaceship hitting asteroid
   collide_with(x::Spaceship, y::Spaceship) = ... # deal with spaceship hitting spaceship
 row
  Feature Strings
  FeatureLink ../features/hasStrings.html
  Supported <span class="hasFeature">â</span>
  Token "
  Example
   "hello world"
 row
  Feature Macros
  FeatureLink ../features/hasMacros.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   # https://jkrumbiegel.com/pages/2021-06-07-macros-for-beginners/
   macro show_value(variable)
       quote
           println("The ", $(string(variable)), " you passed is ", $(esc(variable)))
       end
   end
   
   @show_value(orange)
   @show_value(apple)
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about Julia from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 The Little Book of Julia Algorithms: A workbook to develop fluency in Julia programming|https://isbndb.com/book/9781838173609|Sengupta, Ahan and Lau, William|2020|SAVE Publishing
 Julia Programming for Operations Research|https://isbndb.com/book/9781798205471|Kwon, Changhyun|2019|Independently published
 Beginning Julia Programming: For Engineers and Scientists|https://isbndb.com/book/9781484231715|Nagar, Sandeep|2017|Apress
 Julia Quick Syntax Reference: A Pocket Guide for Data Science Programming|https://isbndb.com/book/9781484251898|Lobianco, Antonello|2019|Apress
 Julia High Performance: Optimizations, distributed computing, multithreading, and GPU programming with Julia 1.0 and beyond, 2nd Edition|https://isbndb.com/book/9781788298117|Sengupta, Avik|2019-06-10T00:00:01Z|Packt Publishing
 Tanmay Teaches Julia for Beginners: A Springboard to Machine Learning for All Ages|https://isbndb.com/book/9781260456646|Bakshi, Tanmay|2019|McGraw-Hill Education TAB
 Julia High Performance: Optimizations, distributed computing, multithreading, and GPU programming with Julia 1.0 and beyond, 2nd Edition|https://isbndb.com/book/9781788292306|Sengupta, Avik|2019|Packt Publishing
 Julia Programming Projects: Learn Julia 1.x by building apps for data analysis, visualization, machine learning, and the web|https://isbndb.com/book/9781788297257|Salceanu, Adrian|2018|Packt Publishing
 Julia 1.0 Programming Complete Reference Guide: Discover Julia, a high-performance language for technical computing|https://isbndb.com/book/9781838824679|Balbaert, Ivo and Salceanu, Adrian|2019|Packt Publishing
 Julia 1.0 Programming Complete Reference Guide: Discover Julia, a high-performance language for technical computing|https://isbndb.com/book/9781838822248|Balbaert, Ivo and Salceanu, Adrian|2019|Packt Publishing
 Julia Programming Projects: Learn Julia 1.x by building apps for data analysis, visualization, machine learning, and the web|https://isbndb.com/book/9781788292740|Salceanu, Adrian|2018|Packt Publishing
 Julia 1.0 Programming: Dynamic and high-performance programming to build fast scientific applications, 2nd Edition|https://isbndb.com/book/9781788990059|Balbaert, Ivo|2018|Packt Publishing
 Tanmay Teaches Julia for Beginners: A Springboard to Machine Learning for All Ages|https://isbndb.com/book/9781260456639|Bakshi, Tanmay|2019|McGraw-Hill Education TAB
 Julia 1.0 Programming Cookbook: Over 100 numerical and distributed computing recipes for your daily data science workflow|https://isbndb.com/book/9781788998369|Kaminski, Bogumil and Szufel, Przemyslaw|2018-11-29T00:00:01Z|Packt Publishing
 Julia High Performance|https://isbndb.com/book/9781785887826|Sengupta, Avik|2016|Packt Publishing
 Hands-On Julia Programming: An Authoritative Guide to the Production-Ready Systems in Julia (English Edition)|https://isbndb.com/book/9789391030889|Dash, Sambit Kumar|2021|BPB Publications
 Julia 1.0 Programming: Dynamic and high-performance programming to build fast scientific applications, 2nd Edition|https://isbndb.com/book/9781788999090|Balbaert, Ivo|2018|Packt Publishing
 Julia Programming for Operations Research: A Primer on Computing|https://isbndb.com/book/9781533328793|Kwon, Changhyun|2016|CreateSpace Independent Publishing Platform
 Julia Cookbook|https://isbndb.com/book/9781785882012|Rohit, Jalem Raj|2016|Packt Publishing
 Julia 1.0 Programming Cookbook: Over 100 numerical and distributed computing recipes for your daily data science workï¬ow|https://isbndb.com/book/9781788998826|KamiÅski, BogumiÅ and Szufel, PrzemysÅaw|2018|Packt Publishing
 Beginning Julia Programming: For Engineers and Scientists|https://isbndb.com/book/9781484231708|Nagar, Sandeep|2017-11-27T00:00:01Z|Apress
 Numerical Linear Algebra: A Concise Introduction with MATLAB and Julia (Springer Undergraduate Mathematics Series)|https://isbndb.com/book/9783319742229|Bornemann, Folkmar|2018|Springer

## Publications about Julia from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Optim: A mathematical optimization package for Julia|https://www.semanticscholar.org/paper/5b9beb63591876dc225ea00e04d77498fc28a5ea|P. K. Mogensen and A. N. Riseth|2018|198|8
 Effective Extensible Programming: Unleashing Julia on GPUs|https://www.semanticscholar.org/paper/7d905f4b07f6eb91177edcf307bc80f9f5c1f33a|Tim Besard and Christophe Foket and B. De Sutter|2017|78|4
 Nemo/Hecke: Computer Algebra and Number Theory Packages for the Julia Programming Language|https://www.semanticscholar.org/paper/05272de903f0d6ce2bfe6651b53e9147d0d233a5|C. Fieker and W. Hart and Tommy Hofmann and Fredrik Johansson|2017|61|5
 Julia for robotics: simulation and real-time control in a high-level programming language|https://www.semanticscholar.org/paper/dbae8cb7428e868cfacd210cda2cc50364f191be|T. Koolen and R. Deits|2019|28|0
 ToQ.jl: A high-level programming language for D-Wave machines based on Julia|https://www.semanticscholar.org/paper/3b98415124b1d661f0c29f030d7f4ae67ca4978a|D. O'Malley and V. Vesselinov|2016|27|3
 Gridap: An extensible Finite Element toolbox in Julia|https://www.semanticscholar.org/paper/27276e58e2d6c5f44d02185534638e6519f9cae8|S. Badia and F. Verdugo|2020|25|1
 Systems Modeling and Programming in a Unified Environment Based on Julia|https://www.semanticscholar.org/paper/9a2ebe28b9786c7a6afb0122b8228d084be23f3f|H. Elmqvist and T. Henningsson and M. Otter|2016|25|2
 Makie.jl: Flexible high-performance data visualization for Julia|https://www.semanticscholar.org/paper/725fcbf7514d2464e5540972dfa16ed7ebea9949|S. Danisch and Julius Krumbiegel|2021|19|1
 GaussianProcesses.jl: A Nonparametric Bayes Package for the Julia Language|https://www.semanticscholar.org/paper/915aa124c64dc217b69b1c2e50a22c69e04a5c05|Jamie Fairbrother and C. Nemeth and M. Rischard and Johanni Brea and Thomas Pinder|2018|13|1
 Illustrating the Benefits of Openness: A Large-Scale Spatial Economic Dispatch Model Using the Julia Language|https://www.semanticscholar.org/paper/a304837d021df72ccd0a7edeb69e049626ae9569|Jens Weibezahn and M. Kendziorski|2019|12|0
 A New Kid on the Block: Application of Julia to Hartree-Fock Calculations.|https://www.semanticscholar.org/paper/8d9735c0cb63af04356f32dc15ba2ac36e07fb64|David L. Poole and Jorge L. Galvez Vallejo and M. Gordon|2020|8|0
 Efficient Stochastic Programming in Julia|https://www.semanticscholar.org/paper/84694fa560d1eaf48e9a1a191709529c56561838|Martin Biel and M. Johansson|2019|8|1
 JuPOETs: a constrained multiobjective optimization approach to estimate biochemical model ensembles in the Julia programming language|https://www.semanticscholar.org/paper/80405e5f33de6bea69c162c1e204e34c04ec7e85|D. Bassen and Michael Vilkhovoy and Mason Minot and J. Butcher and J. Varner|2016|8|1
 Experimental Multi-threading Support for the Julia Programming Language|https://www.semanticscholar.org/paper/7d31348dd404654dd26031091125e56941e64b2e|T. Knopp|2014|7|0
 BioStructures.jl: read, write and manipulate macromolecular structures in Julia|https://www.semanticscholar.org/paper/9e75082cb736566d8ceb53dacdda6065b7fb3264|Joe G. Greener and Joel Selvaraj and Ben Ward|2020|6|0
 NetworkDynamics.jl - Composing and simulating complex networks in Julia|https://www.semanticscholar.org/paper/9e7d4d08eee494f88042aa2829bac1cdd8f36910|Michael Q. Lindner and Lucas Lincoln and Fenja Drauschke and J. M. Koulen and Hannes WÃ¼rfel and A. Plietzsch and F. Hellmann|2020|6|0
 MRIReco.jl: An MRI reconstruction framework written in Julia|https://www.semanticscholar.org/paper/0e7b3a418f2c49671b802fa3c5435860a520349a|T. Knopp and M. Grosser|2021|6|0
 Performance of Julia for High Energy Physics Analyses|https://www.semanticscholar.org/paper/1cfdfc910076aee3a9798ef6552ac944dfccefe1|M. Stanitzki and J. Strube|2020|6|2
 Metatheory.jl: Fast and Elegant Algebraic Computation in Julia with Extensible Equality Saturation|https://www.semanticscholar.org/paper/46b544baa83079f1a59bdafc13e63a2583e27f57|Alessandro Cheli|2021|4|0
 EBIC.JL: an efficient implementation of evolutionary biclustering algorithm in Julia|https://www.semanticscholar.org/paper/b288b373226d3145347f05d7ea9c13c590efdcb4|Pawel Renc and P. Orzechowski and A. Byrski and Jaroslaw Was and J. Moore|2021|3|0
 WordTokenizers.jl: Basic tools for tokenizing natural language in Julia|https://www.semanticscholar.org/paper/19a981faaf3c2be82298f214bf5b80a38c4ce0eb|Ayush Kaushal and Lyndon White and Mike Innes and Rohit Kumar|2020|3|0
 The JuliaConnectR: a functionally oriented interface for integrating Julia in R|https://www.semanticscholar.org/paper/ca7fd29ec1460159815f8424f1dfb93177623efd|S. Lenz and Maren Hackenberg and H. Binder|2020|2|0
 Archmodels.Jl: Estimating Arch Models in Julia|https://www.semanticscholar.org/paper/7f6b300bc93f948345a85689c297f8dcb685930a|S. Broda and Marc S. Paolella|2020|2|1
 Comparing Julia to Performance Portable Parallel Programming Models for HPC|https://www.semanticscholar.org/paper/53aa513eb7efba2755658cff885056f45c83b361|Wei-Chen Lin and S. McIntosh-Smith|2021|2|0
 Statistically significant performance testing of Julia scientific programming language|https://www.semanticscholar.org/paper/7f1df9117e930987fde207b23ba3bf0dfc453f77|M. N. Gevorkyan and A. V. Demidova and A. Korolkova and D. Kulyabov|2019|2|0
 Plots.jl - a user extendable plotting API for the julia programming language|https://www.semanticscholar.org/paper/677154c1f6140ea18aea3674a258347a3f08d61a|Simon Christ and D. Schwabeneder and Christopher Rackauckas|2022|2|0
 Julia Programming Language Benchmark Using a Flight Simulation|https://www.semanticscholar.org/paper/3763cc8a899da4a106f0d84b6c1ed1496cb081fc|R. Sells|2020|2|0
 "JlBox v1.0: A Julia based mixed-phase atmospheric chemistry
 box-model"|https://www.semanticscholar.org/paper/c6b7f380d0818a97e5e04e261c7bb66523c5c8e7|La-mei Huang and D. Topping|2020|1|1
 Rapid prototyping of evolution-driven biclustering methods in Julia|https://www.semanticscholar.org/paper/b4eaa7e68500e18841d8ecbbaf75389e188f4cb3|Pawel Renc and P. Orzechowski and A. Byrski and Jaroslaw Was and J. Moore|2021|1|0
 RADIv1: a non-steady-state early diagenetic model for ocean sediments in Julia and MATLAB/GNU Octave|https://www.semanticscholar.org/paper/9c31814ff2a9ccee98588ba2ff21ed496563356c|Olivier Sulpis and M. Humphreys and M. Wilhelmus and D. Carroll and W. Berelson and D. Menemenlis and Jack Middelburg and J. Adkins|2021|1|0
 AuditoryStimuli.jl: A Julia package for generating real-time auditory stimuli|https://www.semanticscholar.org/paper/6233b051235e6a0f44a8e15afc9258abd1247e66|R. Luke|2021|1|0
 Application of a numerical-analytical approach in the process of modeling differential equations in the Julia language|https://www.semanticscholar.org/paper/d5379b60247a15e6009b5b4961c70fa90e892bd7|A. V. Fedorov and A. O. Masolova and A. Korolkova and D. S. Kulyabov|2020|1|0
 Julia Language in Computational Mechanics: A New Competitor|https://www.semanticscholar.org/paper/1ef389a28b48ff11e8da8bb26a79ce7c0853e841|Lei Xiao and Gang Mei and Ning Xi and F. Piccialli|2021|1|0
 The Usage of Julia Programming in Grounding Grids Simulations : An alternative to MATLAB and Python|https://www.semanticscholar.org/paper/183303bc57f9f6b3c05c5828dd34a02b19a4784b|Rodolfo A. R. Moura and M. Schroeder and S. J. S. Silva and E. Nepomuceno and P. H. N. Vieira and A. Lima|2019|1|0
 An Overview of the Julia Programming Language|https://www.semanticscholar.org/paper/3e62ce30a835230fa8d51c053e4bd2541cfc5fb8|Tyler A. Cabutto and Sean P. Heeney and S. Ault and Guifen Mao and Jin Wang|2018|1|0

keyboardNav lua.html sas.html

import ../footer.scroll
