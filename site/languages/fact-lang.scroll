import header.scroll

title FaCT

title FaCT - Programming language
 hidden

html
 <a class="prevLang" href="ld-json.html">&lt;</a>
 <a class="nextLang" href="mdl.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/fact-lang.pldb

startColumns 4

html <div class="quickLinks"><a href="https://github.com/PLSysSec/FaCT"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg></a></div>

* FaCT is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2017 by Deian Stefan.
 link ../lists/languages.html?filter=2017 2017
 link ../lists/creators.html#deianStefan Deian Stefan

kpiTable
 #1432 <span title="TotalRank: 1943 Jobs: 103 Users: 1343 Facts: 868 Links: 972">on PLDB</span>
 6 Years Old
 126 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging FaCT">Books</span>
 1 <span title="Academic publications about or leveraging FaCT">Papers</span>

* FaCT is a domain-specific language that aids you in writing constant-time code for cryptographic routines that need to be free from timing side channels. This is the compiler for the Flexible and Constant Time cryptographic programming language. Real-world cryptographic code is often written in a subset of C intended to execute in constant-time, thereby avoiding timing side channel vulnerabilities. This C subset eschews structured programming as we know it: if-statements, looping constructs, and procedural abstractions can leak timing information when handling sensitive data. The resulting obfuscation has led to subtle bugs, even in widely-used high-profile libraries like OpenSSL. To address the challenge of writing constant-time cryptographic code, we present FaCT, a crypto DSL that provides high-level but safe language constructs. The FaCT compiler uses a secrecy type system to automatically transform potentially timing-sensitive high-level code into low-level, constant-time LLVM bitcode. We develop the language and type system, formalize the constant-time transformation, and present an empirical evaluation that uses FaCT to implement core crypto routines from several open-source projects including OpenSSL, libsodium, and curve25519-donna. Our evaluation shows that FaCT's design makes it possible to write \emph{readable}, high-level cryptographic code, with \emph{efficient}, \emph{constant-time} behavior.

- FaCT is developed on <a href="https://github.com/PLSysSec/FaCT">GitHub</a> and has 92 stars
- FaCT first developed in <a href="../lists/originCommunities.html#universityOfCaliforniaSanDiego">University of California San Diego</a> and <a href="../lists/originCommunities.html#stanfordUniversity">Stanford University</a> and <a href="../lists/originCommunities.html#piForSecurityAndPrivacy">PI for Security and Privacy</a> and <a href="../lists/originCommunities.html#inriaSophiaAntipolis">Inria Sophia Antipolis</a> and <a href="../lists/originCommunities.html#imdeaSoftwareInstitute">IMDEA Software Institute</a>
- Read more about FaCT on the web: 1.
 https://ranjitjhala.github.io/static/fact_dsl.pdf 1.
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/fact-lang">Improve our FaCT file</a>

html <br>

codeWithHeader Example from the web:
 void
 swap_conditional(secret mut uint64[5] a, secret mut uint64[5] b, secret uint64 swapi) {
   if (swapi == 1) {
     for (uint32 i from 0 to 5) {
       secret uint64 x = a[i];
       a[i] = b[i];
       b[i] = x;
     }
   }
 }

endColumns

## Publications about FaCT from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 DeFacto: Language-Parametric Fact Extraction from Source Code|https://www.semanticscholar.org/paper/a25ddb85adfff458d4829bcbf16db3d64fce7517|H. Basten and P. Klint|2009|14|1

keyboardNav ld-json.html mdl.html

import ../footer.scroll
