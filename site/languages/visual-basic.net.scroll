import header.scroll

title Visual Basic .NET

title Visual Basic .NET - Programming language
 hidden

html
 <a class="prevLang" href="ecmascript.html">&lt;</a>
 <a class="nextLang" href="postscript.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/visual-basic.net.pldb

startColumns 4

html <div class="quickLinks"><a href="https://docs.microsoft.com/dotnet/visual-basic/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/Visual_Basic_.NET"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://learn.microsoft.com/en-us/dotnet/visual-basic/"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* Visual Basic .NET is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2001.
 link ../lists/languages.html?filter=2001 2001

kpiTable
 #108 <span title="TotalRank: 311 Jobs: 33 Users: 187 Facts: 236 Links: 91">on PLDB</span>
 22 Years Old
 5.7k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Visual Basic .NET">Books</span>
 0 <span title="Academic publications about or leveraging Visual Basic .NET">Papers</span>
 935k <span title="Visual Basic .NET repos on GitHub.">Repos</span>

* Visual Basic .NET (VB.NET) is a multi-paradigm, object-oriented programming language, implemented on the .NET Framework. Microsoft launched VB.NET in 2002 as the successor to its original Visual Basic language. Although the ".NET" portion of the name was dropped in 2005, this article uses "Visual Basic [.NET]" to refer to all Visual Basic languages released since 2002, in order to distinguish between them and the classic Visual Basic. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/Visual_Basic_.NET Read more on Wikipedia...

- Visual Basic .NET website
 https://docs.microsoft.com/dotnet/visual-basic/
- Visual Basic .NET Wikipedia page
 https://en.wikipedia.org/wiki/Visual_Basic_.NET
- Visual Basic .NET docs
 https://learn.microsoft.com/en-us/dotnet/visual-basic/
- There are at least 935,363 Visual Basic .NET repos on <a href="https://github.com/search?q=language:Visual Basic">GitHub</a>
- Visual Basic .NET first developed in <a href="../lists/originCommunities.html#microsoft">Microsoft</a>
- PLDB estimates there are currently 3k job openings for Visual Basic .NET programmers.
- file extensions for Visual Basic .NET include vb and vbhtml
- The  Google BigQuery Public Dataset GitHub snapshot shows 285 users using Visual Basic .NET in 322 repos on <a href="https://api.github.com/search/repositories?q=language:Visual Basic .NET">GitHub</a>
- Visual Basic .NET on HOPL
 https://hopl.info/showlanguage.prx?exp=3724
- Visual Basic .NET ranks #7 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- GitHub supports <a href="https://github.com/peters-ben-0007/VBDotNetSyntax" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Visual Basic .NET
- There is a <a href="https://www.nuget.org/">central package repository</a> for Visual Basic .NET
- Indeed.com has 3,447 matches for <a href="https://www.indeed.com/jobs?q=visual basic.NET developer">"visual basic.NET developer"</a>.
- See also: (10 related languages)<a href="android.html">Android</a>, <a href="linux.html">Linux</a>, <a href="solaris.html">Solaris</a>, <a href="unix.html">Unix</a>, <a href="microsoft-small-basic.html">Microsoft Small Basic</a>, <a href="visual-basic.html">Visual Basic</a>, <a href="f-sharp.html">F#</a>, <a href="csharp.html">C#</a>, <a href="linq.html">LINQ</a>, <a href="vba.html">VBA</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/visual-basic.net">Improve our Visual Basic .NET file</a>

html <br>

codeWithHeader Example from the web:
 Imports System.Console
 
 Module Program
 
     Sub Main()
         Dim rows As Integer
 
         &#39; Input validation.
         Do Until Integer.TryParse(ReadLine(&quot;Enter a value for how many rows to be displayed: &quot; &amp; vbcrlf), rows) AndAlso rows &gt;= 1
             WriteLine(&quot;Allowed range is 1 and {0}&quot;, Integer.MaxValue)
         Loop
       
         &#39; Output of Floyd&#39;s Triangle
         Dim current As Integer = 1
         Dim row As Integer 
         Dim column As Integer
         For row = 1 To rows
             For column = 1 To row
                 Write(&quot;{0,-2} &quot;, current)
                 current += 1
             Next
 
             WriteLine()
         Next
     End Sub
 
     &#39;&#39;&#39; &lt;summary&gt;
     &#39;&#39;&#39; Like Console.ReadLine but takes a prompt string.
     &#39;&#39;&#39; &lt;/summary&gt;
     Function ReadLine(Optional prompt As String = Nothing) As String
         If prompt IsNot Nothing Then
             Write(prompt)
         End If
 
         Return Console.ReadLine()
     End Function
 
 End Module

codeWithHeader Example from <a href='https://github.com/peters-ben-0007/VBDotNetSyntax'>Linguist</a>:
 ï»¿Module Module1
 
   Sub Main()
     Console.Out.WriteLine(&quot;Hello, I am a little sample application to test GitHub&#39;s Linguist module.&quot;)
     Console.Out.WriteLine(&quot;I also include a Razor MVC file just to prove it handles cshtml files now.&quot;)
   End Sub
 
 End Module
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/Visual_Basic_.NET'>Wikipedia</a>:
 System.WindowsApplication1.Forms.Form2.text = &quot; MainForm &quot;

## <a href="../lists/keywords.html?filter=visual-basic.net">Keywords</a> in Visual Basic .NET
* AddHandler AddressOf Alias And AndAlso As Boolean ByRef Byte ByVal Call Case Catch CBool CByte CChar CDate CDbl CDec Char CInt Class Class CLng CObj Const Continue CSByte CShort CSng CStr CType CUInt CULng CUShort Date Decimal Declare Default Delegate Dim DirectCast Do Double Each Else ElseIf End End EndIf Enum Erase Error Event Exit False Finally For For Friend Function Get GetType GetXMLNamespace Global GoSub GoTo Handles If Implements Implements Imports In Inherits Integer Interface Is IsNot Let Lib Like Long Loop Me Mod Module Module MustInherit MustOverride MyBase MyClass Namespace Narrowing New New Operator Next Not Nothing NotInheritable NotOverridable Object Of On Operator Option Optional Or OrElse Out Overloads Overridable Overrides ParamArray Partial Private Property Protected Public RaiseEvent ReadOnly ReDim REM RemoveHandler Resume Return SByte Select Set Shadows Shared Short Single Static Step Stop String Structure Structure Sub SyncLock Then Throw To True Try TryCast TypeOf UInteger ULong UShort Using Variant Wend When While Widening With WithEvents WriteOnly Xor #Const #Else #ElseIf #End #If = & &= * *= / /= \ \= ^ ^= + += - -= >> >>= << <<=

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../features/hasBooleans.html
  Supported <span class="hasFeature">â</span>
  Token True False
  Example
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../features/hasCaseInsensitiveIdentifiers.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
   ' A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">â</span>
  Token '
  Example
   ' A comment
 row
  Feature Operator Overloading
  FeatureLink ../features/hasOperatorOverloading.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Constructors
  FeatureLink ../features/hasConstructors.html
  Supported <span class="hasFeature">â</span>
  Token 
  Example
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav ecmascript.html postscript.html

import ../footer.scroll
