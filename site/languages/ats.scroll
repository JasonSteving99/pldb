import header.scroll

title ATS

title ATS - Programming language
 hidden

html
 <a class="prevLang" href="bourne-shell.html">&lt;</a>
 <a class="nextLang" href="c3.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/ats.pldb

startColumns 4

html <div class="quickLinks"><a href="http://www.ats-lang.org/"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/ATS_(programming_language)"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a></div>

* ATS, aka Applied Type System, is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2013 by Hongwei Xi.
 link ../lists/languages.html?filter=2013 2013
 link ../lists/creators.html#hongweiXi Hongwei Xi

kpiTable
 #280 <span title="TotalRank: 676 Jobs: 103 Users: 709 Facts: 186 Links: 387">on PLDB</span>
 10 Years Old
 576 <span title="Crude user estimate from a linear model.">Users</span>
 1 <span title="Books about or leveraging ATS">Books</span>
 1 <span title="Academic publications about or leveraging ATS">Papers</span>
 217 <span title="ATS repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/ats">Riju</a>

monacoEditor postiats
 val _ = print ("Hello, world!\n")
 implement main0 () = ()
 

* ATS (Applied Type System) is a programming language designed to unify programming with formal specification. ATS has support for combining theorem proving with practical programming through the use of advanced type systems. A past version of The Computer Language Benchmarks Game has demonstrated that the performance of ATS is comparable to that of the C and C++ programming languages. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/ATS_(programming_language) Read more on Wikipedia...

- ATS website
 http://www.ats-lang.org/
- ATS Wikipedia page
 https://en.wikipedia.org/wiki/ATS_(programming_language)
- There are at least 217 ATS repos on <a href="https://github.com/search?q=language:ATS">GitHub</a>
- ATS first developed in <a href="../lists/originCommunities.html#bostonUniversity">Boston University</a>
- file extensions for ATS include dats, hats and sats
- The  Google BigQuery Public Dataset GitHub snapshot shows 26 users using ATS in 46 repos on <a href="https://api.github.com/search/repositories?q=language:ATS">GitHub</a>
- Explore ATS snippets on <a href="http://www.rosettacode.org/wiki/Category:ATS">Rosetta Code</a>
- <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/postiats">package</a> for syntax highlighting ATS
- GitHub supports <a href="https://github.com/steinwaywhw/ats-mode-sublimetext" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for ATS
- <a href="http://www.ats-lang.org/">ats-lang.org</a> was registered in 2007
- See also: (4 related languages)<a href="dependent-ml.html">DML</a>, <a href="ml.html">ML</a>, <a href="ocaml.html">OCaml</a>, <a href="c.html">C</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/ats">Improve our ATS file</a>

html <br>

codeWithHeader Example from <a href='https://riju.codes/ats'>Riju</a>:
 val _ = print (&quot;Hello, world!\n&quot;)
 implement main0 () = ()
 

codeWithHeader Example from <a href='http://helloworldcollection.de/#Applied'>the Hello World Collection</a>:
 // Hello world in ATS
 
 implement main () = begin
   print (&quot;Hello, world!&quot;); print_newline ()
 end

codeWithHeader Example from <a href='https://github.com/steinwaywhw/ats-mode-sublimetext'>Linguist</a>:
 (* ****** ****** *)
 //
 // HX-2013-11
 //
 // Implementing a variant of
 // the problem of Dining Philosophers
 //
 (* ****** ****** *)
 //
 #include &quot;share/atspre_define.hats&quot;
 #include &quot;share/atspre_staload.hats&quot;
 //
 (* ****** ****** *)
 
 staload &quot;{$LIBATSHWXI}/teaching/mythread/SATS/mythread.sats&quot;
 
 (* ****** ****** *)
 
 local
 //
 #include &quot;{$LIBATSHWXI}/teaching/mythread/DATS/mythread.dats&quot;
 //
 in (* in of [local] *)
 //
 // HX: it is intentionally left to be empty
 //
 end // end of [local]
 
 (* ****** ****** *)
 
 local
 //
 #include &quot;{$LIBATSHWXI}/teaching/mythread/DATS/mythread_posix.dats&quot;
 //
 in (* in of [local] *)
 //
 // HX: it is intentionally left to be empty
 //
 end // end of [local]
 
 (* ****** ****** *)
 
 (* end of [DiningPhil2_thread.dats] *)
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/ATS_(programming_language)'>Wikipedia</a>:
 #define BUFLEN 10
 var !p_buf with pf_buf = @[byte][BUFLEN](0)    // pf_buf = @[byte][BUFLEN](0) @ p_buf[14]

## <a href="../lists/keywords.html?filter=ats">Keywords</a> in ATS
* abstype abst0ype absprop absview absvtype absviewtype absvt0ype absviewt0ype as and assume begin classdec datasort datatype dataprop dataview datavtype dataviewtype do end extern extype extvar exception fn fnx fun prfn prfun praxi castfn if then else ifcase in infix infixl infixr prefix postfix implmnt implement primplmnt primplement import let local macdef macrodef nonfix symelim symintr overload of op rec sif scase sortdef sta stacst stadef static staload dynload try tkindef typedef propdef viewdef vtypedef viewtypedef prval var prvar when where with withtype withprop withview withvtype withviewtype

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../features/hasConditionals.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature Functions
  FeatureLink ../features/hasFunctions.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token (* *)
  Example
   (* A comment
   *)
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">✓</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">✓</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

## Books about ATS from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Ats (programming Language)|https://isbndb.com/book/9786201963160|Niek Yoan|2012|

## Publications about ATS from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 ATS (AUTOMATIC TRANSFER SWITCH) BERBASIS PROGRAMMABLLE LOGIC CONTROLLER CPM1A AUTOMATIC TRANSFER SWITCH (ATS) BASED ON PROGRAMMABLLE LOGIC CONTROLLER CPM1A|https://www.semanticscholar.org/paper/63338d33f437a3e21ed477293e9dac064bceb9bf|Sumardi Sadi and S. Mulyati|2019|3|0

keyboardNav bourne-shell.html c3.html

import ../footer.scroll
