import header.scroll

title QML

title QML - Programming language
 hidden

html
 <a class="prevLang" href="j.html">&lt;</a>
 <a class="nextLang" href="grep.html">&gt;</a>

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/qml.pldb

startColumns 4

html <div class="quickLinks"><a href="http://qt-project.org/doc/qt-5/qmlapplications.html"><svg role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12.7166 3.79541C12.2835 3.49716 11.7165 3.49716 11.2834 3.79541L4.14336 8.7121C3.81027 8.94146 3.60747 9.31108 3.59247 9.70797C3.54064 11.0799 3.4857 13.4824 3.63658 15.1877C3.7504 16.4742 4.05336 18.1747 4.29944 19.4256C4.41371 20.0066 4.91937 20.4284 5.52037 20.4284H8.84433C8.98594 20.4284 9.10074 20.3111 9.10074 20.1665V15.9754C9.10074 14.9627 9.90433 14.1417 10.8956 14.1417H13.4091C14.4004 14.1417 15.204 14.9627 15.204 15.9754V20.1665C15.204 20.3111 15.3188 20.4284 15.4604 20.4284H18.4796C19.0806 20.4284 19.5863 20.0066 19.7006 19.4256C19.9466 18.1747 20.2496 16.4742 20.3634 15.1877C20.5143 13.4824 20.4594 11.0799 20.4075 9.70797C20.3925 9.31108 20.1897 8.94146 19.8566 8.7121L12.7166 3.79541ZM10.4235 2.49217C11.3764 1.83602 12.6236 1.83602 13.5765 2.49217L20.7165 7.40886C21.4457 7.91098 21.9104 8.73651 21.9448 9.64736C21.9966 11.0178 22.0564 13.5119 21.8956 15.3292C21.7738 16.7067 21.4561 18.4786 21.2089 19.7353C20.9461 21.0711 19.7924 22.0001 18.4796 22.0001H15.4604C14.4691 22.0001 13.6655 21.1791 13.6655 20.1665V15.9754C13.6655 15.8307 13.5507 15.7134 13.4091 15.7134H10.8956C10.754 15.7134 10.6392 15.8307 10.6392 15.9754V20.1665C10.6392 21.1791 9.83561 22.0001 8.84433 22.0001H5.52037C4.20761 22.0001 3.05389 21.0711 2.79113 19.7353C2.54392 18.4786 2.22624 16.7067 2.10437 15.3292C1.94358 13.5119 2.00338 11.0178 2.05515 9.64736C2.08957 8.73652 2.55427 7.91098 3.28346 7.40886L10.4235 2.49217Z"/></svg></a> <a href="https://en.wikipedia.org/wiki/QML"><svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="98.05px" height="98.05px" viewBox="0 0 98.05 98.05" style="enable-background:new 0 0 98.05 98.05;" xml:space="preserve"><path d="M98.023,17.465l-19.584-0.056c-0.004,0.711-0.006,1.563-0.017,2.121c1.664,0.039,5.922,0.822,7.257,4.327L66.92,67.155 c-0.919-2.149-9.643-21.528-10.639-24.02l9.072-18.818c1.873-2.863,5.455-4.709,8.918-4.843l-0.01-1.968L55.42,17.489 c-0.045,0.499,0.001,1.548-0.068,2.069c5.315,0.144,7.215,1.334,5.941,4.508c-2.102,4.776-6.51,13.824-7.372,15.475 c-2.696-5.635-4.41-9.972-7.345-16.064c-1.266-2.823,1.529-3.922,4.485-4.004v-1.981l-21.82-0.067 c0.016,0.93-0.021,1.451-0.021,2.131c3.041,0.046,6.988,0.371,8.562,3.019c2.087,4.063,9.044,20.194,11.149,24.514 c-2.685,5.153-9.207,17.341-11.544,21.913c-3.348-7.43-15.732-36.689-19.232-44.241c-1.304-3.218,3.732-5.077,6.646-5.213 l0.019-2.148L0,17.398c0.005,0.646,0.027,1.71,0.029,2.187c4.025-0.037,9.908,6.573,11.588,10.683 c7.244,16.811,14.719,33.524,21.928,50.349c0.002,0.029,2.256,0.059,2.281,0.008c4.717-9.653,10.229-19.797,15.206-29.56 L63.588,80.64c0.005,0.004,2.082,0.016,2.093,0.007c7.962-18.196,19.892-46.118,23.794-54.933c1.588-3.767,4.245-6.064,8.543-6.194 l0.032-1.956L98.023,17.465z"/></svg></a> <a href="https://doc.qt.io/qt-6/qtqml-documents-topic.html"><svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"><g transform="matrix(1, 0, 0, 1, 13.859316, 9.109739)"><g><g><path d="M340.732,0H55v485h375V94.518L340.732,0z M345,26.364L405.1,90H345V26.364z M415,470H70V15h260v90h85V470z"/><rect x="102.5" y="191" width="280" height="15"/><rect x="102.5" y="141" width="120" height="15"/><rect x="102.5" y="241" width="280" height="15"/><rect x="102.5" y="291" width="280" height="15"/><rect x="102.5" y="341" width="280" height="15"/><rect x="102.5" y="391" width="280" height="15"/></g></g></g></svg></a></div>

* QML, aka Qt Modeling Language, is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2009.
 link ../lists/languages.html?filter=2009 2009

kpiTable
 #206 <span title="TotalRank: 553 Jobs: 103 Users: 500 Facts: 63 Links: 387">on PLDB</span>
 14 Years Old
 1.1k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging QML">Books</span>
 0 <span title="Academic publications about or leveraging QML">Papers</span>
 15k <span title="QML repos on GitHub.">Repos</span>

* QML (Qt Modeling Language) is a user interface markup language. It is a declarative language (similar to CSS and JSON) for designing user interfaceâ€“centric applications. Inline JavaScript code handles imperative aspects. Read more on Wikipedia...
 https://en.wikipedia.org/wiki/QML Read more on Wikipedia...

- QML website
 http://qt-project.org/doc/qt-5/qmlapplications.html
- QML Wikipedia page
 https://en.wikipedia.org/wiki/QML
- QML docs
 https://doc.qt.io/qt-6/qtqml-documents-topic.html
- There are at least 14,755 QML repos on <a href="https://github.com/search?q=language:QML">GitHub</a>
- QML first developed in <a href="../lists/originCommunities.html#qtGroupPlc">Qt Group plc</a>
- file extensions for QML include qml and qbs
- The  Google BigQuery Public Dataset GitHub snapshot shows 4k users using QML in 5k repos on <a href="https://api.github.com/search/repositories?q=language:QML">GitHub</a>
- <a href="pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/webmisc.py">syntax highlighting</a> for QML
- GitHub supports <a href="https://github.com/skozlovf/Sublime-QML" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for QML
- See also: (3 related languages)<a href="json.html">JSON</a>, <a href="javascript.html">JavaScript</a>, <a href="ring.html">Ring</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://pldb.com/edit/qml">Improve our QML file</a>

html <br>

codeWithHeader Example from the web:
 Item {
     Rectangle {
         id: myRect
         width: 120
         height: 100
     }
     Rectangle {
         width: myRect.width
         height: 200
     }
 }

codeWithHeader Example from <a href='https://github.com/skozlovf/Sublime-QML'>Linguist</a>:
 /****************************************************************************
 **
 ** Copyright (C) 2015 The Qt Company Ltd.
 ** Contact: http://www.qt.io/licensing
 **
 ** This file is part of the Qt Build Suite.
 **
 ** Commercial License Usage
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
 ** a written agreement between you and The Qt Company. For licensing terms and
 ** conditions see http://www.qt.io/terms-conditions. For further information
 ** use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
 ** General Public License version 2.1 or version 3 as published by the Free
 ** Software Foundation and appearing in the file LICENSE.LGPLv21 and
 ** LICENSE.LGPLv3 included in the packaging of this file.  Please review the
 ** following information to ensure the GNU Lesser General Public License
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
 ** In addition, as a special exception, The Qt Company gives you certain additional
 ** rights.  These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ****************************************************************************/
 
 import qbs 1.0
 import qbs.FileInfo
 import qbs.ModUtils
 
 Module {
     property string buildVariant: &quot;debug&quot;
     property bool enableDebugCode: buildVariant == &quot;debug&quot;
     property bool debugInformation: (buildVariant == &quot;debug&quot;)
     property string optimization: (buildVariant == &quot;debug&quot; ? &quot;none&quot; : &quot;fast&quot;)
     readonly property stringList hostOS: undefined // set internally
     property string hostOSVersion: {
         if (hostOS &amp;&amp; hostOS.contains(&quot;osx&quot;)) {
             return getNativeSetting(&quot;/System/Library/CoreServices/ServerVersion.plist&quot;, &quot;ProductVersion&quot;) ||
                    getNativeSetting(&quot;/System/Library/CoreServices/SystemVersion.plist&quot;, &quot;ProductVersion&quot;);
         } else if (hostOS &amp;&amp; hostOS.contains(&quot;windows&quot;)) {
             var version = getNativeSetting(&quot;HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion&quot;, &quot;CurrentVersion&quot;);
             return version + &quot;.&quot; + hostOSBuildVersion;
         }
     }
 
     property string hostOSBuildVersion: {
         if (hostOS.contains(&quot;osx&quot;)) {
             return getNativeSetting(&quot;/System/Library/CoreServices/ServerVersion.plist&quot;, &quot;ProductBuildVersion&quot;) ||
                    getNativeSetting(&quot;/System/Library/CoreServices/SystemVersion.plist&quot;, &quot;ProductBuildVersion&quot;);
         } else if (hostOS.contains(&quot;windows&quot;)) {
             return getNativeSetting(&quot;HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion&quot;, &quot;CurrentBuildNumber&quot;);
         }
     }
 
     readonly property var hostOSVersionParts: hostOSVersion ? hostOSVersion.split(&#39;.&#39;).map(function(item) { return parseInt(item, 10); }) : []
     readonly property int hostOSVersionMajor: hostOSVersionParts[0] || 0
     readonly property int hostOSVersionMinor: hostOSVersionParts[1] || 0
     readonly property int hostOSVersionPatch: hostOSVersionParts[2] || 0
 
     property stringList targetOS: hostOS
     property string pathListSeparator: hostOS.contains(&quot;windows&quot;) ? &quot;;&quot; : &quot;:&quot;
     property string pathSeparator: hostOS.contains(&quot;windows&quot;) ? &quot;\\&quot; : &quot;/&quot;
     property string profile
     property stringList toolchain
     property string architecture
     property bool install: false
     property string installSourceBase
     readonly property string installRoot: undefined
     property string installDir
     property string installPrefix: &quot;&quot;
     property path sysroot
 
     PropertyOptions {
         name: &quot;buildVariant&quot;
         allowedValues: [&#39;debug&#39;, &#39;release&#39;]
         description: &quot;name of the build variant&quot;
     }
 
     PropertyOptions {
         name: &quot;optimization&quot;
         allowedValues: [&#39;none&#39;, &#39;fast&#39;, &#39;small&#39;]
         description: &quot;optimization level&quot;
     }
 
     validate: {
         var validator = new ModUtils.PropertyValidator(&quot;qbs&quot;);
         validator.setRequiredProperty(&quot;architecture&quot;, architecture,
                                       &quot;you might want to re-run &#39;qbs-setup-toolchains&#39;&quot;);
         validator.setRequiredProperty(&quot;hostOS&quot;, hostOS);
         validator.setRequiredProperty(&quot;targetOS&quot;, targetOS);
         if (hostOS &amp;&amp; (hostOS.contains(&quot;windows&quot;) || hostOS.contains(&quot;osx&quot;))) {
             validator.setRequiredProperty(&quot;hostOSVersion&quot;, hostOSVersion,
                                           &quot;could not detect host operating system version; &quot; +
                                           &quot;verify that system files and registry keys have not &quot; +
                                           &quot;been modified.&quot;);
             if (hostOSVersion)
                 validator.addVersionValidator(&quot;hostOSVersion&quot;, hostOSVersion, 2, 4);
 
             validator.setRequiredProperty(&quot;hostOSBuildVersion&quot;, hostOSBuildVersion,
                                           &quot;could not detect host operating system build version; &quot; +
                                           &quot;verify that system files or registry have not been &quot; +
                                           &quot;tampered with.&quot;);
         }
 
         validator.addCustomValidator(&quot;architecture&quot;, architecture, function (value) {
             return architecture === canonicalArchitecture(architecture);
         }, &quot;&#39;&quot; + architecture + &quot;&#39; is invalid. You must use the canonical name &#39;&quot; +
         canonicalArchitecture(architecture) + &quot;&#39;&quot;);
 
         validator.validate();
     }
 
     // private properties
     property var commonRunEnvironment: {
         var env = {};
         if (targetOS.contains(&quot;windows&quot;)) {
             env[&quot;PATH&quot;] = [
                 FileInfo.joinPaths(installRoot, installPrefix)
             ];
         } else if (hostOS.contains(&quot;darwin&quot;) &amp;&amp; targetOS.contains(&quot;darwin&quot;)) {
             env[&quot;DYLD_FRAMEWORK_PATH&quot;] = [
                 FileInfo.joinPaths(installRoot, installPrefix, &quot;Library&quot;, &quot;Frameworks&quot;),
                 FileInfo.joinPaths(installRoot, installPrefix, &quot;lib&quot;),
                 FileInfo.joinPaths(installRoot, installPrefix)
             ].join(pathListSeparator);
 
             env[&quot;DYLD_LIBRARY_PATH&quot;] = [
                 FileInfo.joinPaths(installRoot, installPrefix, &quot;lib&quot;),
                 FileInfo.joinPaths(installRoot, installPrefix, &quot;Library&quot;, &quot;Frameworks&quot;),
                 FileInfo.joinPaths(installRoot, installPrefix)
             ].join(pathListSeparator);
 
             if (targetOS.contains(&quot;ios-simulator&quot;) &amp;&amp; sysroot) {
                 env[&quot;DYLD_ROOT_PATH&quot;] = [sysroot];
             }
         } else if (hostOS.contains(&quot;unix&quot;) &amp;&amp; targetOS.contains(&quot;unix&quot;)) {
             env[&quot;LD_LIBRARY_PATH&quot;] = [
                 FileInfo.joinPaths(installRoot, installPrefix, &quot;lib&quot;)
             ];
         }
 
         return env;
     }
 
     // internal properties
     readonly property string version: [versionMajor, versionMinor, versionPatch].join(&quot;.&quot;)
     readonly property int versionMajor: undefined // set internally
     readonly property int versionMinor: undefined // set internally
     readonly property int versionPatch: undefined // set internally
 }
 

codeWithHeader Example from <a href='https://en.wikipedia.org/wiki/QML'>Wikipedia</a>:
 MouseArea {
      onPressed: console.log(&quot;mouse button pressed&quot;)
  }

endColumns

## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../features/hasIntegers.html
  Supported <span class="hasFeature">âœ“</span>
  Token 
  Example
   // [0-9]+
 row
  Feature Floats
  FeatureLink ../features/hasFloats.html
  Supported <span class="hasFeature">âœ“</span>
  Token 
  Example
   // [0-9][0-9]*\.[0-9]+([eE][0-9]+)?[fd]?
 row
  Feature Hexadecimals
  FeatureLink ../features/hasHexadecimals.html
  Supported <span class="hasFeature">âœ“</span>
  Token 
  Example
   // 0x[0-9a-fA-F]+
 row
  Feature MultiLine Comments
  FeatureLink ../features/hasMultiLineComments.html
  Supported <span class="hasFeature">âœ“</span>
  Token /* */
  Example
   /* A comment
   */
 row
  Feature Comments
  FeatureLink ../features/hasComments.html
  Supported <span class="hasFeature">âœ“</span>
  Token 
  Example
   // A comment
 row
  Feature Line Comments
  FeatureLink ../features/hasLineComments.html
  Supported <span class="hasFeature">âœ“</span>
  Token //
  Example
   // A comment
 row
  Feature Semantic Indentation
  FeatureLink ../features/hasSemanticIndentation.html
  Supported <span class="doesNotHaveFeature">X</span>
  Token 
  Example

keyboardNav j.html grep.html

import ../footer.scroll
